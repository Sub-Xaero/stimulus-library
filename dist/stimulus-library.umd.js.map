{"version":3,"file":"stimulus-library.umd.js","sources":["../src/utilities/base_controller.ts","../src/utilities/ephemeral_controller.ts","../src/controllers/anchor_spy_controller.ts","../src/controllers/utility/appearance_controller.ts","../src/controllers/async_block_controller.ts","../src/controllers/forms/auto_submit_form_controller.ts","../node_modules/stimulus-use/dist/support/index.js","../node_modules/stimulus-use/dist/use-intersection/use-intersection.js","../node_modules/stimulus-use/dist/use-click-outside/use-click-outside.js","../node_modules/stimulus-use/dist/stimulus_use.js","../node_modules/stimulus-use/dist/use-hover/use-hover.js","../node_modules/stimulus-use/dist/use-mutation/use-mutation.js","../node_modules/stimulus-use/dist/use-window-resize/use-window-resize.js","../node_modules/stimulus-use/dist/use-debounce/use-debounce.js","../src/controllers/forms/autosize_controller.ts","../src/controllers/forms/char_count_controller.ts","../src/controllers/forms/checkbox_select_all_controller.ts","../src/controllers/clipboard_controller.ts","../src/utilities/elements.ts","../src/controllers/confirm_controller.ts","../src/controllers/confirm_navigation_controller.ts","../src/controllers/visual/countdown_controller.ts","../src/controllers/debug_controller.ts","../src/controllers/forms/detect_dirty_controller.ts","../src/controllers/forms/detect_dirty_form_controller.ts","../src/controllers/forms/disable_inputs_controller.ts","../src/controllers/disable_with_controller.ts","../src/controllers/dismissable_controller.ts","../src/controllers/element_save_controller.ts","../src/controllers/empty_dom_controller.ts","../src/controllers/forms/enable_inputs_controller.ts","../src/controllers/media/fallback_image_controller.ts","../src/controllers/forms/form_rc_controller.ts","../src/controllers/forms/form_save_controller.ts","../src/controllers/utility/intersection_controller.ts","../src/controllers/utility/interval_controller.ts","../src/utilities/scroll.ts","../src/controllers/lazy_block_controller.ts","../src/controllers/media/lightbox_image_controller.ts","../src/controllers/forms/limited_selection_checkboxes_controller.ts","../src/controllers/media/media_player_controller.ts","../src/controllers/forms/navigate_form_errors_controller.ts","../src/controllers/forms/nested_form_controller.ts","../src/controllers/forms/password_confirm_controller.ts","../src/controllers/forms/password_peek_controller.ts","../src/controllers/forms/remote_form_controller.ts","../src/controllers/responsive_iframe_controller.ts","../src/controllers/scroll/scroll_into_focus_controller.ts","../src/controllers/scroll/scroll_to_bottom_controller.ts","../src/controllers/scroll/scroll_to_controller.ts","../src/controllers/scroll/scroll_to_top_controller.ts","../src/controllers/self_destruct_controller.ts","../src/controllers/sticky_controller.ts","../src/controllers/tables/table_sort_controller.ts","../src/controllers/tables/table_truncate_controller.ts","../src/controllers/teleport_controller.ts","../src/controllers/utility/timeout_controller.ts","../src/controllers/toggle_class_controller.ts","../src/utilities/turbo.ts","../src/controllers/turbo_frame_rc_controller.ts","../src/controllers/turbo_frame_refresh_controller.ts","../src/controllers/forms/word_count_controller.ts"],"sourcesContent":["import {Context, Controller} from \"stimulus\";\r\n\r\nexport class BaseController extends Controller {\r\n\r\n  constructor(context: Context) {\r\n    super(context);\r\n    return new Proxy(this, {\r\n      get: (obj, prop) => {\r\n        let returnVal = Reflect.get(obj, prop);\r\n        let self = this;\r\n        if (logProperty(prop.toString())) {\r\n          if (typeof returnVal == \"function\") {\r\n            return new Proxy(returnVal, {\r\n              apply(target: any, thisArg: any, argArray?: any): any {\r\n                self.log(prop.toString(), {\r\n                  args: argArray,\r\n                });\r\n                return Reflect.apply(target, thisArg, argArray);\r\n              },\r\n            });\r\n          } else {\r\n            this.log(prop.toString());\r\n          }\r\n        }\r\n        return returnVal;\r\n      },\r\n    });\r\n  }\r\n\r\n  get el(): HTMLElement {\r\n    return this.element as HTMLElement;\r\n  }\r\n\r\n  get isTurboPreview(): boolean {\r\n    return document.documentElement.hasAttribute('data-turbo-preview') || document.documentElement.hasAttribute('data-turbolinks-preview');\r\n  }\r\n\r\n  get isTurbolinksPreview(): boolean {\r\n    return this.isTurboPreview;\r\n  }\r\n\r\n  get csrfToken(): string | null {\r\n    return this.metaValue('csrf-token');\r\n  }\r\n\r\n  metaValue(name: string): string | null {\r\n    const element = document.head.querySelector(`meta[name=\"${name}\"]`);\r\n    return element?.getAttribute('content') || null;\r\n  }\r\n\r\n  dispatch(element: HTMLElement, eventName: string, options: CustomEventInit = {}) {\r\n    let mergedOptions = Object.assign({}, {bubbles: true, cancelable: true, detail: {target: element}}, options);\r\n    if (!!mergedOptions.detail.target) {\r\n      mergedOptions.detail.target = element;\r\n    }\r\n    let event = new CustomEvent(eventName, mergedOptions);\r\n    this.logEvent(eventName, event, element);\r\n    element.dispatchEvent(event);\r\n  }\r\n\r\n  log(functionName: string, args: {} = {}): void {\r\n    // @ts-ignore\r\n    if (!this.application.debug) {\r\n      return;\r\n    }\r\n    let logger = console;\r\n    logger.groupCollapsed(`%c${this.identifier} %c#${functionName}`, \"color: #3B82F6\", \"color: unset\");\r\n    logger.log({\r\n      element: this.element,\r\n      ...args,\r\n    });\r\n    logger.groupEnd();\r\n  }\r\n\r\n  logEvent(eventName: string, event: CustomEvent, element: HTMLElement) {\r\n    // @ts-ignore\r\n    if (!this.application.debug) {\r\n      return;\r\n    }\r\n    let logger = console;\r\n    logger.groupCollapsed(`%c${this.identifier} %c${eventName}%c`, \"color: #3B82F6\", \"color: #0be000\", \"color: unset\");\r\n    logger.log({element});\r\n    logger.groupEnd();\r\n  }\r\n\r\n}\r\n\r\nfunction logProperty(prop: string): boolean {\r\n  switch (prop) {\r\n    case \"application\":\r\n    case \"el\":\r\n    case \"element\":\r\n    case \"constructor\":\r\n    case \"initialize\":\r\n    case \"log\":\r\n    case \"logEvent\":\r\n    case \"dispatch\":\r\n    case \"data\":\r\n    case \"valueDescriptorMap\":\r\n    case \"mutate\":\r\n    case \"identifier\":\r\n      return false;\r\n  }\r\n\r\n  if (/^_.*?$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Target(s)?$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Value$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?ValueChanged$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Class$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Classes$/.test(prop)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import camelCase from \"camelcase\";\r\nimport {BaseController} from \"./base_controller\";\r\n\r\nexport class EphemeralController extends BaseController {\r\n\r\n  _cleanupSelf() {\r\n    this.cleanup(this.el);\r\n  }\r\n\r\n  cleanup(element: HTMLElement) {\r\n    element.dataset.controller = element.dataset.controller?.replaceAll(new RegExp(`(\\s|^)${this.identifier}(\\s|$)`, \"g\"), \"\") || \"\";\r\n    if (element.dataset.controller == \"\") {\r\n      // If there are no controllers left, remove the attribute\r\n      delete element.dataset.controller;\r\n    }\r\n\r\n    let substringIdentifierValueRegex = new RegExp(`(\\s|^)${this.identifier}\\\\..+?(\\s|$)`, \"g\");\r\n    element.dataset.target = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-target`)];\r\n    if (element.dataset.target == \"\") {\r\n      // If there are no targets left, remove the attribute\r\n      delete element.dataset.target;\r\n    }\r\n\r\n    element.dataset.action = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-action`)];\r\n    if (element.dataset.action == \"\") {\r\n      // If there are no actions left, remove the attribute\r\n      delete element.dataset.action;\r\n    }\r\n\r\n    // @ts-ignore\r\n    let values = this.constructor.values;\r\n    if (values) {\r\n      Object.keys(values).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-value`)]);\r\n    }\r\n\r\n    // @ts-ignore\r\n    let classes = this.constructor.classes;\r\n    if (classes) {\r\n      Object.keys(classes).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-class`)]);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class AnchorSpyController extends BaseController {\r\n  static values = {key: String};\r\n\r\n  declare readonly keyValue: string;\r\n\r\n  get _key(): string {\r\n    return this.keyValue.replaceAll('#', '');\r\n  }\r\n\r\n  get _anchor(): string {\r\n    return window.location.hash.substr(1);\r\n  }\r\n\r\n  set _anchor(value: string) {\r\n    window.location.hash = value;\r\n  }\r\n\r\n  initialize() {\r\n    this._checkAnchor = this._checkAnchor.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._checkAnchor();\r\n      window.addEventListener(\"hashchange\", this._checkAnchor);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"hashchange\", this._checkAnchor);\r\n  }\r\n\r\n  write(event?: Event) {\r\n    event?.preventDefault();\r\n    this._anchor = this._key;\r\n  }\r\n\r\n  private _checkAnchor() {\r\n    if (this._key === this._anchor) {\r\n      this.dispatch(this.el, \"anchor-spy:active\");\r\n    } else {\r\n      this.dispatch(this.el, \"anchor-spy:inactive\");\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AppearanceController extends BaseController {\r\n\r\n  initialize() {\r\n    this._handleVisibility = this._handleVisibility.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.addEventListener(\"focus\", this._handleVisibility);\r\n    window.addEventListener(\"blur\", this._handleVisibility);\r\n    document.addEventListener(\"visibilitychange\", this._handleVisibility);\r\n    requestAnimationFrame(() => {\r\n      this._handleVisibility();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"focus\", this._handleVisibility);\r\n    window.removeEventListener(\"blur\", this._handleVisibility);\r\n    document.removeEventListener(\"visibilitychange\", this._handleVisibility);\r\n  }\r\n\r\n  appear() {\r\n    this.dispatch(this.el, \"appearance:appear\");\r\n  }\r\n\r\n  away() {\r\n    this.dispatch(this.el, \"appearance:away\");\r\n  }\r\n\r\n  private _handleVisibility() {\r\n    this._documentIsActive() ? this.appear() : this.away();\r\n  }\r\n\r\n  private _documentIsActive() {\r\n    return document.visibilityState == \"visible\" && document.hasFocus();\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class AsyncBlockController extends BaseController {\r\n  static targets = [\"replace\"];\r\n  static values = {endpoint: String, errorMessage: String, selector: String};\r\n\r\n  declare readonly replaceTarget: HTMLElement;\r\n  declare readonly hasReplaceTarget: boolean;\r\n  declare readonly endpointValue: string;\r\n\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare readonly selectorValue: string;\r\n\r\n  declare readonly hasErrorMessageValue: boolean;\r\n  declare readonly errorMessageValue: string;\r\n\r\n  get _errorMessage(): string {\r\n    return this.hasErrorMessageValue ? this.errorMessageValue : \"This content failed to load\";\r\n  }\r\n\r\n  // This is a simple controller to load a block of content when the page loads.\r\n  // It should be used to give a quick initial response before calling out to an\r\n  // an AJAX endpoint to do some expensive work.\r\n  connect() {\r\n    this.loadContent();\r\n  }\r\n\r\n  loadContent() {\r\n    let self = this;\r\n    let el = this.hasReplaceTarget ? this.replaceTarget : this.el;\r\n    fetch(this.endpointValue)\r\n    .then((response) => response.text())\r\n    .then((html) => {\r\n      let newEl = document.createElement(\"div\");\r\n      newEl.innerHTML = html;\r\n      if (this.hasSelectorValue) {\r\n        let selectedContent = newEl.querySelectorAll(this.selectorValue);\r\n        el.replaceWith(...selectedContent);\r\n      } else {\r\n        el.replaceWith(...newEl.children);\r\n      }\r\n      // Trigger event to show block has loaded\r\n      self.dispatch(el, \"ajax:success\");\r\n    })\r\n    .catch(err => {\r\n      el.replaceWith(this._errorMessage);\r\n      self.dispatch(el, \"ajax:error\");\r\n    })\r\n    .finally(() => {\r\n      self.dispatch(el, \"ajax:complete\");\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AutoSubmitFormController extends BaseController {\r\n\r\n  initialize() {\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.el.querySelectorAll(\"input, select, textarea\").forEach(el => el.addEventListener(\"change\", this.submit));\r\n  }\r\n\r\n  disconnect() {\r\n    this.el.querySelectorAll(\"input, select, textarea\").forEach(el => el.removeEventListener(\"change\", this.submit));\r\n  }\r\n\r\n  private submit() {\r\n    // Trigger synthetic \"submit\" event on form\r\n    this.dispatch((this.el), \"submit\");\r\n  }\r\n}\r\n","export const method = (controller, methodName) => {\n    const method = controller[methodName];\n    if (typeof method == 'function') {\n        return method;\n    }\n    else {\n        return (...args) => { };\n    }\n};\nexport const composeEventName = (name, controller, eventPrefix) => {\n    let composedName = name;\n    if (eventPrefix === true) {\n        composedName = `${controller.identifier}:${name}`;\n    }\n    else if (typeof eventPrefix === 'string') {\n        composedName = `${eventPrefix}:${name}`;\n    }\n    return composedName;\n};\nexport const extendedEvent = (type, event, detail) => {\n    const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true };\n    if (event) {\n        Object.assign(detail, { originalEvent: event });\n    }\n    const customEvent = new CustomEvent(type, {\n        bubbles,\n        cancelable,\n        composed,\n        detail,\n    });\n    return customEvent;\n};\nexport function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n    const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n    const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n    const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n    return (vertInView && horInView);\n}\n//# sourceMappingURL=index.js.map","import { method, extendedEvent, composeEventName } from '../support/index';\nconst defaultOptions = {\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useIntersection = (controller, options = {}) => {\n    const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n    const callback = (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n            dispatchAppear(entry);\n        }\n        else if (controller.isVisible) {\n            dispatchDisappear(entry);\n        }\n    };\n    const dispatchAppear = (entry) => {\n        controller.isVisible = true;\n        method(controller, 'appear').call(controller, entry);\n        // emit a custom \"appear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('appear', controller, eventPrefix);\n            const appearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(appearEvent);\n        }\n    };\n    const dispatchDisappear = (entry) => {\n        controller.isVisible = false;\n        method(controller, 'disappear').call(controller, entry);\n        // emit a custom \"disappear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('disappear', controller, eventPrefix);\n            const disappearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(disappearEvent);\n        }\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observer = new IntersectionObserver(callback, options);\n    const observe = () => {\n        observer.observe(targetElement);\n    };\n    const unobserve = () => {\n        observer.unobserve(targetElement);\n    };\n    Object.assign(controller, {\n        isVisible: false,\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-intersection.js.map","import { composeEventName, extendedEvent, isElementInViewport } from '../support/index';\nconst defaultOptions = {\n    events: ['click', 'touchend'],\n    onlyVisible: true,\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useClickOutside = (controller, options = {}) => {\n    const { onlyVisible, dispatchEvent, events, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const onEvent = (event) => {\n        const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        if (targetElement.contains(event.target) || (!isElementInViewport(targetElement) && onlyVisible)) {\n            return;\n        }\n        // call the clickOutside method of the Stimulus controller\n        if (controller.clickOutside) {\n            controller.clickOutside(event);\n        }\n        // emit a custom event\n        if (dispatchEvent) {\n            const eventName = composeEventName('click:outside', controller, eventPrefix);\n            const clickOutsideEvent = extendedEvent(eventName, event, { controller });\n            targetElement.dispatchEvent(clickOutsideEvent);\n        }\n    };\n    const observe = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.addEventListener(event, onEvent, false);\n        });\n    };\n    const unobserve = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.removeEventListener(event, onEvent, false);\n        });\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-click-outside.js.map","const defaultOptions = {\n    debug: false,\n    logger: console\n};\nexport class StimulusUse {\n    constructor(controller, options = {}) {\n        var _a, _b, _c;\n        this.log = (functionName, args) => {\n            if (!this.debug)\n                return;\n            this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${functionName}`, 'color: #3B82F6', 'color: unset');\n            this.logger.log(Object.assign({ controllerId: this.controllerId }, args));\n            this.logger.groupEnd();\n        };\n        this.debug = (_b = (_a = options === null || options === void 0 ? void 0 : options.debug) !== null && _a !== void 0 ? _a : controller.application.stimulusUseDebug) !== null && _b !== void 0 ? _b : defaultOptions.debug;\n        this.logger = (_c = options === null || options === void 0 ? void 0 : options.logger) !== null && _c !== void 0 ? _c : defaultOptions.logger;\n        this.controller = controller;\n        this.controllerId = controller.element.id || controller.element.dataset.id;\n        // make copies of lifecycle functions\n        this.controllerInitialize = controller.initialize.bind(controller);\n        this.controllerConnect = controller.connect.bind(controller);\n        this.controllerDisconnect = controller.disconnect.bind(controller);\n    }\n}\n//# sourceMappingURL=stimulus_use.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseHover extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            this.targetElement.addEventListener('mouseenter', this.onEnter);\n            this.targetElement.addEventListener('mouseleave', this.onLeave);\n        };\n        this.unobserve = () => {\n            this.targetElement.removeEventListener('mouseenter', this.onEnter);\n            this.targetElement.removeEventListener('mouseleave', this.onLeave);\n        };\n        this.onEnter = () => {\n            method(this.controller, 'mouseEnter').call(this.controller);\n            this.log('mouseEnter', { hover: true });\n        };\n        this.onLeave = () => {\n            method(this.controller, 'mouseLeave').call(this.controller);\n            this.log('mouseLeave', { hover: false });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useHover = (controller, options = {}) => {\n    const observer = new UseHover(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-hover.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseMutation extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            try {\n                this.observer.observe(this.targetElement, this.options);\n            }\n            catch (error) {\n                this.controller.application.handleError(error, \"At a minimum, one of childList, attributes, and/or characterData must be true\", {});\n            }\n        };\n        this.unobserve = () => {\n            this.observer.disconnect();\n        };\n        this.mutation = (entries) => {\n            method(this.controller, 'mutate').call(this.controller, entries);\n            this.log('mutate', { entries });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.options = options;\n        this.observer = new MutationObserver(this.mutation);\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useMutation = (controller, options = {}) => {\n    const observer = new UseMutation(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-mutation.js.map","import { method } from '../support/index';\nexport const useWindowResize = (controller) => {\n    const callback = (event) => {\n        const { innerWidth, innerHeight } = window;\n        const payload = {\n            height: innerHeight || Infinity,\n            width: innerWidth || Infinity,\n            event\n        };\n        method(controller, 'windowResize').call(controller, payload);\n    };\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observe = () => {\n        window.addEventListener('resize', callback);\n        callback();\n    };\n    const unobserve = () => {\n        window.removeEventListener('resize', callback);\n    };\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-window-resize.js.map","import { Controller } from 'stimulus';\nclass DebounceController extends Controller {\n}\nDebounceController.debounces = [];\nconst defaultWait = 200;\nconst debounce = (fn, wait = defaultWait) => {\n    let timeoutId = null;\n    return function () {\n        const args = arguments;\n        const context = this;\n        const callback = () => fn.apply(context, args);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(callback, wait);\n    };\n};\nexport const useDebounce = (controller, options) => {\n    var _a;\n    const constructor = controller.constructor;\n    (_a = constructor.debounces) === null || _a === void 0 ? void 0 : _a.forEach((func) => {\n        if (typeof func === \"string\") {\n            controller[func] = debounce(controller[func], options === null || options === void 0 ? void 0 : options.wait);\n        }\n        if (typeof func === \"object\") {\n            const { name, wait } = func;\n            if (!name)\n                return;\n            controller[name] = debounce(controller[name], wait || (options === null || options === void 0 ? void 0 : options.wait));\n        }\n    });\n};\n//# sourceMappingURL=use-debounce.js.map","import {useWindowResize} from \"stimulus-use\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AutosizeController extends BaseController {\r\n\r\n  initialize() {\r\n    this._handler = this._handler.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    useWindowResize(this);\r\n    requestAnimationFrame(() => {\r\n      this._handler();\r\n      let target = this.el as HTMLTextAreaElement;\r\n      target.style.resize = \"none\";\r\n      target.style.boxSizing = \"border-box\";\r\n      target.addEventListener(\"input\", this._handler);\r\n      target.addEventListener(\"focus\", this._handler);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.el.removeEventListener(\"input\", this._handler);\r\n    this.el.removeEventListener(\"focus\", this._handler);\r\n  }\r\n\r\n  windowResize() {\r\n    this._handler();\r\n  }\r\n\r\n  private _handler() {\r\n    this.autosize(this.el as HTMLTextAreaElement);\r\n  };\r\n\r\n  private autosize(element: HTMLTextAreaElement) {\r\n    let offset = element.offsetHeight - element.clientHeight;\r\n    element.style.height = \"auto\";\r\n    element.style.height = element.scrollHeight + offset + \"px\";\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class CharCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this._updateCharCount = this._updateCharCount.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this.inputTarget.addEventListener(\"input\", this._updateCharCount);\r\n      this._updateCharCount();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this._updateCharCount);\r\n  }\r\n\r\n  private _updateCharCount() {\r\n    let charCount = this.inputTarget.value.length;\r\n    this.outputTarget.innerText = charCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this._isValidCount(charCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../../utilities/base_controller';\r\n\r\nexport class CheckboxSelectAllController extends BaseController {\r\n  static targets = ['selectAll', 'checkbox'];\r\n\r\n  declare readonly hasSelectAllTarget: boolean;\r\n  declare readonly selectAllTarget: HTMLInputElement;\r\n  declare readonly checkboxTargets: HTMLInputElement[];\r\n\r\n  private get _checked() {\r\n    return this.checkboxTargets.filter(checkbox => checkbox.checked);\r\n  }\r\n\r\n  private get _unchecked() {\r\n    return this.checkboxTargets.filter(checkbox => !checkbox.checked);\r\n  }\r\n\r\n  initialize() {\r\n    this._toggle = this._toggle.bind(this);\r\n    this._refresh = this._refresh.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      if (!this.hasSelectAllTarget) {\r\n        return;\r\n      }\r\n\r\n      this.selectAllTarget.addEventListener('change', this._toggle);\r\n      this.checkboxTargets.forEach(checkbox => checkbox.addEventListener('change', this._refresh));\r\n      this._refresh();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (!this.hasSelectAllTarget) {\r\n      return;\r\n    }\r\n\r\n    this.selectAllTarget.removeEventListener('change', this._toggle);\r\n    this.checkboxTargets.forEach((checkbox) => checkbox.removeEventListener('change', this._refresh));\r\n  }\r\n\r\n  private _toggle(event: Event) {\r\n    event.preventDefault();\r\n    let target = event.target as HTMLInputElement;\r\n    this.checkboxTargets.forEach((checkbox) => checkbox.checked = target.checked);\r\n  }\r\n\r\n  private _refresh() {\r\n    const checkboxesCount = this.checkboxTargets.length;\r\n    const checkboxesCheckedCount = this._checked.length;\r\n\r\n    this.selectAllTarget.checked = checkboxesCheckedCount > 0;\r\n    this.selectAllTarget.indeterminate = checkboxesCheckedCount > 0 && checkboxesCheckedCount < checkboxesCount;\r\n  }\r\n}","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class ClipboardController extends BaseController {\r\n\r\n  static targets = [\"source\", \"button\", \"copy\", \"fallback\"];\r\n  static values = {removeUnused: Boolean};\r\n\r\n  declare readonly sourceTarget: HTMLElement;\r\n  declare readonly copyTarget: HTMLElement;\r\n  declare readonly hasCopyTarget: boolean;\r\n  declare readonly fallbackTarget: HTMLElement;\r\n  declare readonly hasFallbackTarget: boolean;\r\n\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  declare readonly removeUnusedValue: boolean;\r\n\r\n  _supported = false;\r\n\r\n  connect() {\r\n    this._supported = document.queryCommandSupported(\"copy\");\r\n\r\n    if (this.hasRemoveUnusedValue && this.removeUnusedValue) {\r\n      if (this._supported && this.hasFallbackTarget) {\r\n        this.fallbackTarget.remove();\r\n      } else if (this.hasCopyTarget) {\r\n        this.copyTarget.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  select(event: MouseEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n  }\r\n\r\n  copy(event: ClipboardEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n    if (this._supported) {\r\n      document.execCommand(\"copy\");\r\n    }\r\n  }\r\n}\r\n","export function isHTMLLinkElement(element: Element): element is HTMLLinkElement {\r\n  return element.nodeName == \"LINK\";\r\n}\r\n\r\nexport function isHTMLAnchorElement(element: Element): element is HTMLAnchorElement {\r\n  return element.nodeName == \"A\";\r\n}\r\n\r\nexport function isHTMLFormElement(element: Element): element is HTMLFormElement {\r\n  return element.nodeName == \"FORM\";\r\n}\r\n\r\nexport function isHTMLInputElement(element: Element): element is HTMLInputElement {\r\n  return element.nodeName == \"INPUT\";\r\n}\r\n\r\nexport function isHTMLButtonElement(element: Element): element is HTMLButtonElement {\r\n  return element.nodeName == \"BUTTON\";\r\n}\r\n\r\nexport function isHTMLSelectElement(element: Element): element is HTMLSelectElement {\r\n  return element.nodeName == \"SELECT\";\r\n}\r\n\r\nexport function isHTMLImageElement(element: Element): element is HTMLImageElement {\r\n  return element.nodeName == \"IMG\";\r\n}\r\n\r\nexport function isElementCheckable(element: Element): element is HTMLInputElement & { checked: boolean } {\r\n  return isHTMLInputElement(element) && (element.type === \"radio\" || element.type === \"checkbox\");\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {isHTMLAnchorElement, isHTMLFormElement} from \"../utilities/elements\";\r\n\r\nexport class ConfirmController extends BaseController {\r\n\r\n  static values = {\r\n    message: String,\r\n  };\r\n\r\n  declare readonly messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this.messageValue : 'Are you sure?';\r\n  }\r\n\r\n  initialize() {\r\n    this.confirm = this.confirm.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      let element = this.el;\r\n      if (isHTMLFormElement(element)) {\r\n        element.addEventListener(\"submit\", this.confirm);\r\n      } else if (isHTMLAnchorElement(element)) {\r\n        element.addEventListener(\"click\", this.confirm);\r\n      } else {\r\n        throw new Error(\"Can't handle confirmation on attached element\");\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el;\r\n    if (isHTMLFormElement(element)) {\r\n      element.removeEventListener(\"submit\", this.confirm);\r\n    } else if (isHTMLAnchorElement(element)) {\r\n      element.removeEventListener(\"click\", this.confirm);\r\n    }\r\n  }\r\n\r\n  confirm(event: Event) {\r\n    if (!(window.confirm(this._message))) {\r\n      event.preventDefault();\r\n      this.dispatch(this.el, \"confirm:cancelled\");\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class ConfirmNavigationController extends BaseController {\r\n\r\n  static values = {_message: String};\r\n\r\n  declare readonly _messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this._messageValue : \"Do you want to leave this page? Changes you made may not be saved\";\r\n  }\r\n\r\n  initialize() {\r\n    this.allowSubmit = this.allowSubmit.bind(this);\r\n    this.confirmNavigation = this.confirmNavigation.bind(this);\r\n    this.confirmTurboNavigation = this.confirmTurboNavigation.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.onbeforeunload = () => this._message;\r\n    window.addEventListener(\"popstate\", this.confirmNavigation);\r\n    window.addEventListener(\"submit\", this.allowSubmit);\r\n    window.addEventListener(\"turbolinks:before-visit\", this.confirmTurboNavigation);\r\n    window.addEventListener(\"turbo:before-visit\", this.confirmTurboNavigation);\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"popstate\", this.confirmNavigation);\r\n    window.onbeforeunload = null;\r\n    window.removeEventListener(\"submit\", this.allowSubmit);\r\n    window.removeEventListener(\"turbolinks:before-visit\", this.confirmTurboNavigation);\r\n    window.removeEventListener(\"turbo:before-visit\", this.confirmTurboNavigation);\r\n  }\r\n\r\n  allowSubmit(_event: Event) {\r\n    window.removeEventListener(\"popstate\", this.confirmNavigation);\r\n    window.onbeforeunload = null;\r\n  }\r\n\r\n  confirmNavigation(_event: PopStateEvent) {\r\n    return false;\r\n  }\r\n\r\n  confirmTurboNavigation(event: Event) {\r\n    if (!confirm(this._message)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Duration, intervalToDuration, isPast} from \"date-fns\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class CountdownController extends BaseController {\r\n\r\n  static values = {deadline: String, removeUnused: Boolean};\r\n  static targets = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\r\n  static classes = [\"countingDown\", \"ended\"];\r\n\r\n  // Values\r\n  declare readonly deadlineValue: string;\r\n  declare readonly removeUnusedValue: boolean;\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  // Targets\r\n  declare readonly hasYearsTarget: boolean;\r\n  declare readonly yearsTarget: HTMLElement;\r\n  declare readonly hasMonthsTarget: boolean;\r\n  declare readonly monthsTarget: HTMLElement;\r\n  declare readonly hasDaysTarget: boolean;\r\n  declare readonly daysTarget: HTMLElement;\r\n  declare readonly hasHoursTarget: boolean;\r\n  declare readonly hoursTarget: HTMLElement;\r\n  declare readonly hasMinutesTarget: boolean;\r\n  declare readonly minutesTarget: HTMLElement;\r\n  declare readonly hasSecondsTarget: boolean;\r\n  declare readonly secondsTarget: HTMLElement;\r\n  // Classes\r\n  declare readonly countingDownClass: string;\r\n  declare readonly hasCountingDownClass: boolean;\r\n  declare readonly endedClass: string;\r\n  declare readonly hasEndedClass: boolean;\r\n  // Instance Data\r\n  _interval: null | ReturnType<typeof window.setInterval> = null;\r\n\r\n  get _removeUnused(): boolean {\r\n    return this.hasRemoveUnusedValue ? this.removeUnusedValue : false;\r\n  }\r\n\r\n  get endedClasses(): string[] {\r\n    return this.endedClass.split(' ');\r\n  }\r\n\r\n  get countingDownClasses(): string[] {\r\n    return this.countingDownClass.split(' ');\r\n  }\r\n\r\n  get _deadlineDate() {\r\n    return new Date(this.deadlineValue);\r\n  }\r\n\r\n  connect() {\r\n    this._interval = setInterval(this._tick.bind(this), 1000);\r\n    if (this.hasCountingDownClass) {\r\n      this.el.classList.add(...this.countingDownClasses);\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this._clearTick();\r\n    if (this.hasCountingDownClass) {\r\n      this.el.classList.remove(...this.countingDownClasses);\r\n    }\r\n    if (this.hasEndedClass) {\r\n      this.el.classList.remove(...this.endedClasses);\r\n    }\r\n  }\r\n\r\n  deadlineValueChanged() {\r\n    // Countdown had previously ended, restart ticking. Updating mid-tick will just work.\r\n    if (this._interval == null) {\r\n      this._interval = setInterval(this._tick.bind(this), 1000);\r\n    }\r\n  }\r\n\r\n  _tick() {\r\n    try {\r\n      const now = new Date();\r\n      let distance: Duration = {};\r\n\r\n      if (isPast(this._deadlineDate)) {\r\n        distance = {years: 0, months: 0, days: 0, hours: 0, minutes: 0, seconds: 0};\r\n        // Countdown has ended, stop ticking\r\n        this._clearTick();\r\n        if (this.hasCountingDownClass) {\r\n          this.el.classList.remove(...this.countingDownClasses);\r\n        }\r\n        if (this.hasEndedClass) {\r\n          this.el.classList.add(...this.endedClasses);\r\n        }\r\n        this.dispatch(this.el, \"countdown:ended\");\r\n      } else {\r\n        distance = intervalToDuration({start: this._deadlineDate, end: now});\r\n      }\r\n\r\n      if (this.hasYearsTarget) {\r\n        this._updateTarget(this.yearsTarget, this._years(distance));\r\n      }\r\n      if (this.hasMonthsTarget) {\r\n        this._updateTarget(this.monthsTarget, this._months(distance));\r\n      }\r\n      if (this.hasDaysTarget) {\r\n        this._updateTarget(this.daysTarget, this._days(distance));\r\n      }\r\n      if (this.hasHoursTarget) {\r\n        this._updateTarget(this.hoursTarget, this._hours(distance));\r\n      }\r\n      if (this.hasMinutesTarget) {\r\n        this._updateTarget(this.minutesTarget, this._minutes(distance));\r\n      }\r\n      if (this.hasSecondsTarget) {\r\n        this._updateTarget(this.secondsTarget, this._seconds(distance));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      this._clearTick();\r\n    }\r\n  }\r\n\r\n  _clearTick() {\r\n    if (this._interval) {\r\n      clearInterval(this._interval);\r\n      this._interval = null;\r\n    }\r\n  }\r\n\r\n  _updateTarget(target: HTMLElement, value: number) {\r\n    this._removeTargetIfUnused(target, value);\r\n    target.innerHTML = value.toString();\r\n  }\r\n\r\n  _removeTargetIfUnused(target: HTMLElement, value: number) {\r\n    if (this._removeUnused) {\r\n      if (value === 0 && target.dataset.unused) {\r\n        if (Number.parseInt(target.dataset.unused) > Date.now() + 1500) {\r\n          target.remove();\r\n        }\r\n      } else if (value == 0) {\r\n        target.dataset.unused = Date.now().toString();\r\n      } else {\r\n        target.dataset.unused = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  _years(duration: Duration): number {\r\n    return duration.years || 0;\r\n  }\r\n\r\n  _months(duration: Duration): number {\r\n    return duration.months || 0;\r\n  }\r\n\r\n  _days(duration: Duration): number {\r\n    return duration.days || 0;\r\n  }\r\n\r\n  _hours(duration: Duration): number {\r\n    return duration.hours || 0;\r\n  }\r\n\r\n  _minutes(duration: Duration): number {\r\n    return duration.minutes || 0;\r\n  }\r\n\r\n  _seconds(duration: Duration): number {\r\n    return duration.seconds || 0;\r\n  }\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class DebugController extends BaseController {\r\n\r\n  static targets = [\"test\"];\r\n  declare testTargets: HTMLElement[];\r\n\r\n  connect() {\r\n    console.log(\"Debug Controller\", this, this.testTargets);\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {isElementCheckable, isHTMLSelectElement} from \"../../utilities/elements\";\r\n\r\nexport class DetectDirtyController extends BaseController {\r\n\r\n  get _cacheAttrName(): string {\r\n    return 'detect-dirty-load-value';\r\n  }\r\n\r\n  initialize() {\r\n    this._checkDirty = this._checkDirty.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    this._cacheLoadValues();\r\n    this._checkDirty();\r\n    element.addEventListener(\"input\", this._checkDirty);\r\n    element.addEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this._checkDirty);\r\n    element.removeEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    this._restoreElementFromLoadValue();\r\n  }\r\n\r\n  private _getElementValue(): boolean | string {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    return isElementCheckable(element) ? element.checked : element.value;\r\n  }\r\n\r\n  private _getElementLoadValue(): boolean | string {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    let value = element.getAttribute(this._cacheAttrName);\r\n    if (isElementCheckable(element)) {\r\n      return value == null ? element.defaultChecked : value == \"true\";\r\n    } else if (value !== null) {\r\n      return value;\r\n    }\r\n\r\n    if (isHTMLSelectElement(element)) {\r\n      let options = Array.from(element.options);\r\n      options.forEach((option) => {\r\n        if (option.defaultSelected) {\r\n          element.value = option.value;\r\n          return option.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return value!;\r\n  }\r\n\r\n  private _elementHasCachedLoadValue(): boolean {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    return element.hasAttribute(this._cacheAttrName);\r\n  }\r\n\r\n  private _checkDirty() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this._isElementDirty()) {\r\n      element.setAttribute('data-dirty', \"true\");\r\n    } else {\r\n      element.removeAttribute('data-dirty');\r\n    }\r\n  }\r\n\r\n  private _isElementDirty(): boolean {\r\n    return this._getElementValue() !== this._getElementLoadValue();\r\n  }\r\n\r\n  private _restoreElementFromLoadValue() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    let cacheValue = element.getAttribute(this._cacheAttrName);\r\n\r\n    if (isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n      element.checked = cacheValue == null ? element.defaultChecked : cacheValue == \"true\";\r\n    } else if (isHTMLSelectElement(element)) {\r\n      if (cacheValue == null) {\r\n        let options = Array.from(element.options);\r\n        options.forEach((option) => {\r\n          if (option.defaultSelected) {\r\n            element.value = option.value;\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        element.value = cacheValue;\r\n      }\r\n\r\n    } else {\r\n      element.value = cacheValue == null ? element.defaultValue : cacheValue;\r\n    }\r\n  }\r\n\r\n  private _cacheLoadValues(): void {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (!this._elementHasCachedLoadValue() && isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n    } else {\r\n      element.setAttribute(this._cacheAttrName, element.value.toString());\r\n    }\r\n  }\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {isElementCheckable, isHTMLSelectElement} from \"../../utilities/elements\";\r\n\r\nexport class DetectDirtyFormController extends BaseController {\r\n\r\n  get _formElements(): Array<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement> {\r\n    return Array.from(this.el.querySelectorAll('input, select, textarea'));\r\n  }\r\n\r\n  get _cacheAttrName(): string {\r\n    return 'detect-dirty-load-value';\r\n  }\r\n\r\n  initialize() {\r\n    this._checkDirty = this._checkDirty.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    this._cacheLoadValues();\r\n    this._checkDirty();\r\n    element.addEventListener(\"input\", this._checkDirty);\r\n    element.addEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this._checkDirty);\r\n    element.removeEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    this._formElements.forEach(element => this._restoreElementFromLoadValue(element));\r\n  }\r\n\r\n  private _getElementValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean | string {\r\n    return isElementCheckable(element) ? element.checked : element.value;\r\n  }\r\n\r\n  private _getElementLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean | string {\r\n    let value = element.getAttribute(this._cacheAttrName);\r\n    if (isElementCheckable(element)) {\r\n      return value == null ? element.defaultChecked : value == \"true\";\r\n    } else if (value !== null) {\r\n      return value;\r\n    }\r\n\r\n    if (isHTMLSelectElement(element)) {\r\n      let options = Array.from(element.options);\r\n      options.forEach((option) => {\r\n        if (option.defaultSelected) {\r\n          element.value = option.value;\r\n          return option.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return value!;\r\n  }\r\n\r\n  private _elementHasCachedLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {\r\n    return element.hasAttribute(this._cacheAttrName);\r\n  }\r\n\r\n  private _checkElementDirty(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    if (this._isElementDirty(element)) {\r\n      element.setAttribute('data-dirty', \"true\");\r\n    } else {\r\n      element.removeAttribute('data-dirty');\r\n    }\r\n  }\r\n\r\n  private _isElementDirty(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {\r\n    return this._getElementValue(element) !== this._getElementLoadValue(element);\r\n  }\r\n\r\n  private _cacheElementLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    if (!this._elementHasCachedLoadValue(element) && isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n    } else {\r\n      element.setAttribute(this._cacheAttrName, element.value.toString());\r\n    }\r\n  }\r\n\r\n  private _restoreElementFromLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    let cacheValue = element.getAttribute(this._cacheAttrName);\r\n\r\n    if (isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n      element.checked = cacheValue == null ? element.defaultChecked : cacheValue == \"true\";\r\n    } else if (isHTMLSelectElement(element)) {\r\n      if (cacheValue == null) {\r\n        let options = Array.from(element.options);\r\n        options.forEach((option) => {\r\n          if (option.defaultSelected) {\r\n            element.value = option.value;\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        element.value = cacheValue;\r\n      }\r\n\r\n    } else {\r\n      element.value = cacheValue == null ? element.defaultValue : cacheValue;\r\n    }\r\n  }\r\n\r\n  private _cacheLoadValues(): void {\r\n    this._formElements.forEach(el => this._cacheElementLoadValue(el));\r\n  }\r\n\r\n  private _checkDirty(): void {\r\n    this._formElements.forEach(el => this._checkElementDirty(el));\r\n    if (this._formElements.some(el => isDirty(el))) {\r\n      this.el.setAttribute(\"data-dirty\", \"true\");\r\n    } else {\r\n      this.el.removeAttribute(\"data-dirty\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class DisableInputsController extends BaseController {\r\n\r\n  static targets = [\"disabler\", \"disable\"];\r\n\r\n  static values = {\r\n    clear: Boolean,\r\n  };\r\n\r\n  declare readonly hasDisablerTarget: boolean;\r\n  declare readonly disablerTarget: HTMLInputElement;\r\n  declare readonly disableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n  declare readonly clearValue: boolean;\r\n  declare readonly hasClearValue: boolean;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasDisablerTarget && this.disablerTarget.checked) {\r\n      this.disableInputs();\r\n    } else {\r\n      this.enableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    let shouldClear = this.hasClearValue && this.clearValue;\r\n    this.disableTargets.forEach((el, _) => {\r\n      if (shouldClear) {\r\n        el.value = \"\";\r\n      }\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {isHTMLAnchorElement, isHTMLButtonElement, isHTMLInputElement} from \"../utilities/elements\";\r\n\r\nexport class DisableWithController extends BaseController {\r\n\r\n  static values = {\r\n    message: String,\r\n    timeout: Number,\r\n  };\r\n\r\n  declare readonly messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n  declare readonly timeoutValue: number;\r\n  declare readonly hasTimeoutValue: boolean;\r\n\r\n  _cacheText?: string;\r\n  _timeoutHandle?: ReturnType<typeof window.setTimeout>;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this.messageValue : 'Submitting...';\r\n  }\r\n\r\n  get _timeout(): number {\r\n    return this.hasTimeoutValue ? this.timeoutValue : 1000;\r\n  }\r\n\r\n  initialize() {\r\n    this.enable = this.enable.bind(this);\r\n    this.disable = this.disable.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this.el.addEventListener(\"click\", this.disable);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  disable(event?: Event) {\r\n    let element = this.el;\r\n\r\n    if (this._isDisabled(element)) {\r\n      event?.preventDefault();\r\n      event?.stopImmediatePropagation();\r\n    } else {\r\n      this._cacheText = this._getElText(element);\r\n      this._setElText(element, this._message);\r\n      this._disable(element);\r\n      setTimeout(this.enable, this._timeout);\r\n    }\r\n  }\r\n\r\n  enable(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el;\r\n    if (this._isDisabled(element)) {\r\n      this._setElText(element, this._cacheText!);\r\n      this._enable(element);\r\n    }\r\n  }\r\n\r\n  _isDisabled(el: HTMLElement): boolean {\r\n    if ((isHTMLInputElement(el) && el.type == \"submit\") || isHTMLButtonElement(el)) {\r\n      return el.disabled;\r\n    } else {\r\n      return el.dataset.disabled == \"true\";\r\n    }\r\n  }\r\n\r\n  _getElText(el: HTMLElement): string {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\") {\r\n      return el.value;\r\n    } else {\r\n      return el.innerText;\r\n    }\r\n  }\r\n\r\n  _setElText(el: HTMLElement, str: string) {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\") {\r\n      el.value = str;\r\n    } else if (isHTMLButtonElement(el) || isHTMLAnchorElement(el)) {\r\n      el.innerText = str;\r\n    }\r\n  }\r\n\r\n  _disable(el: HTMLElement) {\r\n    if ((isHTMLInputElement(el) && el.type == \"submit\") || isHTMLButtonElement(el)) {\r\n      el.disabled = true;\r\n    } else {\r\n      el.dataset.disabled = \"true\";\r\n    }\r\n  }\r\n\r\n  _enable(el: HTMLElement) {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\" || isHTMLButtonElement(el)) {\r\n      el.disabled = false;\r\n    } else {\r\n      el.dataset.disabled = undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class DismissableController extends BaseController {\r\n\r\n  dismiss() {\r\n    this.el.remove();\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {get as _get, set as _set} from \"lodash-es\";\r\n\r\nexport class ElementSaveController extends BaseController {\r\n\r\n  static targets = [\r\n    \"element\",\r\n  ];\r\n  static values = {\r\n    id: String,\r\n    attributes: String,\r\n    restoreOnLoad: Boolean,\r\n  };\r\n  declare readonly hasElementTarget: boolean;\r\n  declare readonly elementTarget: HTMLElement;\r\n  declare readonly elementTargets: HTMLElement[];\r\n  declare readonly idValue: string;\r\n  declare readonly attributesValue: string;\r\n  declare readonly hasIdValue: boolean;\r\n  declare readonly restoreOnLoadValue: boolean;\r\n  declare readonly hasRestoreOnLoadValue: boolean;\r\n\r\n  get _id() {\r\n    if (this.hasIdValue) {\r\n      return this.idValue;\r\n    }\r\n    let elementID = this.el.id;\r\n\r\n    if (elementID !== \"\") {\r\n      return elementID;\r\n    } else {\r\n      throw new Error(`No ID value to uniquely identify this element. Please either specify data-${this.identifier}-id-value or give this element an 'id' attribute. `);\r\n    }\r\n  }\r\n\r\n  get _uniqueIdentifier() {\r\n    const url = location.href;\r\n    return `${url} ${this._id}`;\r\n  }\r\n\r\n  get _restoreOnLoad() {\r\n    return this.hasRestoreOnLoadValue ? this.restoreOnLoadValue : true;\r\n  }\r\n\r\n  get _element(): HTMLElement {\r\n    return this.hasElementTarget ? this.elementTarget : this.el;\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      if (this._restoreOnLoad) {\r\n        this.restore();\r\n      }\r\n    });\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    localStorage.removeItem(this._uniqueIdentifier);\r\n    this.dispatch(this._element, `element-save:cleared`);\r\n  }\r\n\r\n  save(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let element = this._element;\r\n    let attributes = this.attributesValue.split(\" \");\r\n    let data: { [idx: string]: any } = {};\r\n    attributes.forEach((attr: string) => data[attr] = _get(element, attr));\r\n    localStorage.setItem(this._uniqueIdentifier, JSON.stringify(data));\r\n    this.dispatch(element, `element-save:save:success`);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let element = this._element;\r\n    if (localStorage.getItem(this._uniqueIdentifier)) {\r\n      const savedData = JSON.parse(localStorage.getItem(this._uniqueIdentifier)!); // get and parse the saved data from localStorage\r\n      Object.keys(savedData).forEach((attr: string) => {\r\n        _set(element as HTMLElement, attr, savedData[attr]);\r\n      });\r\n      this.dispatch(element, `element-save:restore:success`);\r\n    } else {\r\n      this.dispatch(element, `element-save:restore:empty`);\r\n    }\r\n  }\r\n\r\n}\r\n","import {useMutation} from \"stimulus-use\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class EmptyDomController extends BaseController {\r\n\r\n  static classes = [\"empty\", \"notEmpty\"];\r\n  static values = {scopeSelector: String};\r\n\r\n  declare hasEmptyClass: boolean;\r\n  declare emptyClass: string;\r\n  declare hasNotEmptyClass: boolean;\r\n  declare notEmptyClass: string;\r\n\r\n  declare hasScopeSelectorValue: boolean;\r\n  declare scopeSelectorValue: string;\r\n\r\n  get emptyClasses(): string[] {\r\n    return this.emptyClass.split(\" \");\r\n  }\r\n\r\n  get notEmptyClasses(): string[] {\r\n    return this.notEmptyClass.split(\" \");\r\n  }\r\n\r\n  get _children(): Element[] {\r\n    let element = this.el;\r\n    if (this.hasScopeSelectorValue) {\r\n      return Array.from(element.querySelectorAll(this.scopeSelectorValue));\r\n    } else {\r\n      return Array.from(element.children);\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    useMutation(this, {element: this.el, childList: true});\r\n    this.checkEmpty();\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    this.checkEmpty();\r\n  }\r\n\r\n  checkEmpty() {\r\n    let element = this.el;\r\n    let children = this._children;\r\n    if (children.length === 0) {\r\n      this._removeNotEmptyClasses();\r\n      this._addEmptyClasses();\r\n      this.dispatch(element as HTMLElement, \"dom:empty\");\r\n    } else {\r\n      this._addNotEmptyClasses();\r\n      this._removeEmptyClasses();\r\n      this.dispatch(element as HTMLElement, \"dom:not-empty\", {detail: {count: children.length}});\r\n    }\r\n  }\r\n\r\n  private _removeEmptyClasses() {\r\n    if (this.hasEmptyClass) {\r\n      this.el.classList.remove(...this.emptyClasses);\r\n    }\r\n  }\r\n\r\n  private _addNotEmptyClasses() {\r\n    if (this.hasNotEmptyClass) {\r\n      this.el.classList.add(...this.notEmptyClasses);\r\n    }\r\n  }\r\n\r\n  private _addEmptyClasses() {\r\n    if (this.hasEmptyClass) {\r\n      this.el.classList.add(...this.emptyClasses);\r\n    }\r\n  }\r\n\r\n  private _removeNotEmptyClasses() {\r\n    if (this.hasNotEmptyClass) {\r\n      this.el.classList.remove(...this.notEmptyClasses);\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class EnableInputsController extends BaseController {\r\n\r\n  static targets = [\"enabler\", \"enable\"];\r\n\r\n  static values = {\r\n    clear: Boolean,\r\n  };\r\n\r\n  declare readonly hasEnablerTarget: boolean;\r\n  declare readonly enablerTarget: HTMLInputElement;\r\n  declare readonly enableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n  declare readonly clearValue: boolean;\r\n  declare readonly hasClearValue: boolean;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasEnablerTarget && this.enablerTarget.checked) {\r\n      this.enableInputs();\r\n    } else {\r\n      this.disableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    let shouldClear = this.hasClearValue && this.clearValue;\r\n    this.enableTargets.forEach((el, _) => {\r\n      if (shouldClear) {\r\n        el.value = \"\";\r\n      }\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class FallbackImageController extends BaseController {\r\n\r\n  static values = {placeholder: String};\r\n\r\n  declare readonly placeholderValue: string;\r\n  declare readonly hasPlaceholderValue: boolean;\r\n\r\n  connect() {\r\n    let element = this.el as HTMLImageElement;\r\n\r\n    element.onerror = () => {\r\n      if (this.hasPlaceholderValue) {\r\n        element.src = this.placeholderValue;\r\n      } else {\r\n        element.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../../utilities/base_controller';\r\n\r\nexport class FormRcController extends BaseController {\r\n\r\n  static targets = [\"form\"];\r\n\r\n  declare readonly formTarget: HTMLFormElement;\r\n\r\n  submit(event?: Event) {\r\n    event?.preventDefault();\r\n    this.dispatch(this.formTarget, \"submit\");\r\n    this.formTarget.submit();\r\n  }\r\n\r\n  reset(event?: Event) {\r\n    event?.preventDefault();\r\n    this.dispatch(this.formTarget, \"reset\");\r\n    this.formTarget.reset();\r\n  }\r\n\r\n}","import {BaseController} from '../../utilities/base_controller';\r\nimport {isHTMLFormElement, isHTMLInputElement} from \"../../utilities/elements\";\r\n\r\ninterface FormSavePayload {\r\n  [idx: string]: {\r\n    [idx: string]: string | boolean\r\n  }\r\n}\r\n\r\nexport class FormSaveController extends BaseController {\r\n\r\n  static values = {\r\n    id: String,\r\n    restoreOnLoad: Boolean,\r\n    clearOnSubmit: Boolean,\r\n  };\r\n\r\n  declare readonly idValue: string;\r\n  declare readonly hasIdValue: boolean;\r\n  declare readonly restoreOnLoadValue: boolean;\r\n  declare readonly hasRestoreOnLoadValue: boolean;\r\n  declare readonly clearOnSubmitValue: boolean;\r\n  declare readonly hasClearOnSubmitValue: boolean;\r\n\r\n  get _formID() {\r\n    if (this.hasIdValue) {\r\n      return this.idValue;\r\n    }\r\n    let elementID = (this.el as HTMLFormElement).id;\r\n\r\n    if (elementID !== \"\") {\r\n      return elementID;\r\n    } else {\r\n      throw new Error(`No ID value to uniquely identify this form. Please either specify data-${this.identifier}-id-value or give this form an 'id' attribute. `);\r\n    }\r\n  }\r\n\r\n  get _formIdentifier() {\r\n    const url = location.href;\r\n    return `${url} ${this._formID}`;\r\n  }\r\n\r\n  get _formElements() {\r\n    return (this.el as HTMLFormElement).elements;\r\n  }\r\n\r\n  get _formData(): FormSavePayload {\r\n    let data: FormSavePayload = {[this._formIdentifier]: {}};\r\n    for (const element of this._formElements) {\r\n      let el = element as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n      if (el.name.length > 0) {\r\n        if (isHTMLInputElement(el) && el.type == \"checkbox\") {\r\n          data[this._formIdentifier][el.name] = el.checked;\r\n        } else if (isHTMLInputElement(el) && el.type == \"radio\") {\r\n          if (el.checked) {\r\n            data[this._formIdentifier][el.name] = el.value;\r\n          }\r\n        } else {\r\n          data[this._formIdentifier][el.name] = el.value;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  get _restoreOnLoad() {\r\n    return this.hasRestoreOnLoadValue ? this.restoreOnLoadValue : true;\r\n  }\r\n\r\n  get _clearOnSubmit() {\r\n    return this.hasClearOnSubmitValue ? this.clearOnSubmitValue : true;\r\n  }\r\n\r\n  initialize() {\r\n    this._clear = this._clear.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      let element = this.el;\r\n      if (!isHTMLFormElement(element)) {\r\n        throw new Error('Expected controller to be mounted on a form element.');\r\n      }\r\n\r\n      if (this._restoreOnLoad) {\r\n        this.restore();\r\n      }\r\n      if (this._clearOnSubmit) {\r\n        this.el.addEventListener('submit', this._clear);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._clearOnSubmit) {\r\n      this.el.removeEventListener('submit', this._clear);\r\n    }\r\n  }\r\n\r\n  _clear() {\r\n    localStorage.removeItem(this._formIdentifier);\r\n    this.dispatch(this.el, `form-save:cleared`);\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    event?.preventDefault();\r\n    this._clear();\r\n  }\r\n\r\n  save(event: Event) {\r\n    event.preventDefault();\r\n    let data = this._formData;\r\n    localStorage.setItem(this._formIdentifier, JSON.stringify(data[this._formIdentifier]));\r\n    this.dispatch(this.el, `form-save:save:success`);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    if (localStorage.getItem(this._formIdentifier)) {\r\n      const savedData = JSON.parse(localStorage.getItem(this._formIdentifier)!); // get and parse the saved data from localStorage\r\n      for (const element of this._formElements) {\r\n        let el = element as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n        if (el.name in savedData) {\r\n          if (isHTMLInputElement(el) && el.type == \"checkbox\") {\r\n            el.checked = savedData[el.name];\r\n          } else if (isHTMLInputElement(el) && el.type == \"radio\") {\r\n            if (el.value == savedData[el.name]) {\r\n              el.checked = true;\r\n            }\r\n          } else {\r\n            el.value = savedData[el.name];\r\n          }\r\n        }\r\n      }\r\n      this.dispatch(this.el, `form-save:restore:success`);\r\n    } else {\r\n      this.dispatch(this.el, `form-save:restore:empty`);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {useIntersection} from \"stimulus-use\";\r\n\r\nexport class IntersectionController extends BaseController {\r\n\r\n  static values = {threshold: String};\r\n\r\n  declare readonly isVisible: boolean;\r\n  declare readonly thresholdValue: string;\r\n  declare readonly hasThresholdValue: boolean;\r\n\r\n  get _threshold(): number[] {\r\n    if (this.hasThresholdValue) {\r\n      return this.thresholdValue.split(',').map(val => Number.parseFloat(val.trim())).filter(val => val >= 0 && val <= 1);\r\n    } else {\r\n      return [0, 1];\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    useIntersection(this, {\r\n      threshold: this._threshold,\r\n      element: this.el,\r\n    });\r\n  }\r\n\r\n  appear(entry: IntersectionObserverEntry) {\r\n    this.dispatch(\r\n      this.el,\r\n      \"intersection:appear\",\r\n      {\r\n        detail: {\r\n          element: this.el,\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  disappear(entry: IntersectionObserverEntry) {\r\n    this.dispatch(\r\n      this.el,\r\n      \"intersection:disappear\",\r\n      {\r\n        detail: {\r\n          element: this.el,\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class IntervalController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  declare readonly hasSecondsValue: boolean;\r\n  _intervalHandle: null | number = null;\r\n\r\n  initialize() {\r\n    this._interval = this._interval.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    if (!this.hasSecondsValue) {\r\n      throw new Error('Expected `secondsValue` to be present')\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this._intervalHandle = window.setInterval(this._interval, this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._intervalHandle) {\r\n      window.clearInterval(this._intervalHandle);\r\n    }\r\n  }\r\n\r\n  _interval() {\r\n    this.dispatch(this.el, \"interval:action\");\r\n  }\r\n\r\n}","const smoothSupported = \"scrollBehavior\" in document.documentElement.style;\r\nlet smoothPolyfilled: boolean;\r\n\r\nexport async function scrollToElement(element: Element, {behavior = \"smooth\", block = \"start\", inline = \"nearest\"}: ScrollIntoViewOptions = {}) {\r\n  if (behavior == \"smooth\" && !smoothSupported) {\r\n    await polyfillSmooth();\r\n  }\r\n  element.scrollIntoView({behavior, block, inline});\r\n}\r\n\r\nasync function polyfillSmooth() {\r\n  const {polyfill} = await import(/* webpackChunkName: \"smoothscroll-polyfill\" */ \"smoothscroll-polyfill\");\r\n  if (smoothPolyfilled) {\r\n    return;\r\n  }\r\n  smoothPolyfilled = true;\r\n  polyfill();\r\n}\r\n\r\nexport function getScrollParent(node: HTMLElement | null): HTMLElement | null {\r\n  if (!node) {\r\n    return null;\r\n  }\r\n  const overflowY = getComputedStyle(node).overflowY;\r\n  const isScrollable = overflowY !== \"visible\" && overflowY !== \"hidden\";\r\n\r\n  if (isScrollable && node.scrollHeight >= node.clientHeight) {\r\n    return node;\r\n  }\r\n\r\n  return getScrollParent(node.parentElement) || document.body;\r\n}\r\n","import {useIntersection} from \"stimulus-use\";\r\nimport {AsyncBlockController} from \"./async_block_controller\";\r\n\r\nexport class LazyBlockController extends AsyncBlockController {\r\n\r\n  declare observe: () => void;\r\n  declare unobserve: () => void;\r\n  declare isVisible: boolean;\r\n  declare disappear: () => void;\r\n\r\n  connect() {\r\n    let element = this.el;\r\n\r\n    if (\"IntersectionObserver\" in window) {\r\n      [this.observe, this.unobserve] = useIntersection(this, {element, threshold: 0.3});\r\n    } else {\r\n      // Client doesn't support intersection observer, fallback to pre-loading\r\n      this.loadContent();\r\n    }\r\n  }\r\n\r\n  appear(entry: IntersectionObserverEntry) {\r\n    if (entry.target === this.el && entry.isIntersecting) {\r\n      this.loadContent();\r\n      if (this.unobserve) {\r\n        this.unobserve();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\nimport dialogPolyfill from \"dialog-polyfill\";\r\n\r\nexport class LightboxImageController extends BaseController {\r\n\r\n  static values = {\r\n    src: String,\r\n    srcSet: String,\r\n    sizes: String,\r\n  };\r\n  static classes = [\"modal\", \"image\"];\r\n\r\n  declare readonly hasModalClass: boolean;\r\n  declare readonly modalClass: string;\r\n  declare readonly hasImageClass: boolean;\r\n  declare readonly imageClass: string;\r\n  declare readonly hasSrcValue: boolean;\r\n  declare readonly srcValue: string;\r\n  declare readonly hasSrcSetValue: boolean;\r\n  declare readonly srcSetValue: string;\r\n  declare readonly hasSizesValue: boolean;\r\n  declare readonly sizesValue: string;\r\n  _dialog: HTMLDialogElement | null = null;\r\n\r\n  get _src(): string {\r\n    return this.hasSrcValue ? this.srcValue : (this.el as HTMLImageElement).src;\r\n  }\r\n\r\n  get _srcSet(): string {\r\n    return this.hasSrcSetValue ? this.srcSetValue : (this.el as HTMLImageElement).srcset;\r\n  }\r\n\r\n  get _sizes(): string {\r\n    return this.hasSizesValue ? this.sizesValue : (this.el as HTMLImageElement).sizes;\r\n  }\r\n\r\n  get _modalClassName() {\r\n    return this.hasModalClass ? this.modalClass : \"image-lightbox-dialog\";\r\n  }\r\n\r\n  get _imageClassName() {\r\n    return this.hasImageClass ? this.imageClass : \"image-lightbox-image\";\r\n  }\r\n\r\n  initialize() {\r\n    this.open = this.open.bind(this);\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  connect() {\r\n  }\r\n\r\n  open() {\r\n    let element = this.el as HTMLImageElement;\r\n    if (this._dialog) {\r\n      return;\r\n    }\r\n    this._dialog = document.createElement(\"dialog\");\r\n\r\n    let image = document.createElement(\"img\") as HTMLImageElement;\r\n    image.className = this._imageClassName;\r\n    image.src = this._src;\r\n    image.srcset = this._srcSet;\r\n    image.sizes = this._sizes;\r\n    this._dialog.appendChild(image);\r\n\r\n    element.insertAdjacentElement(\"afterend\", this._dialog);\r\n    dialogPolyfill.registerDialog(this._dialog);\r\n    this._dialog.className = this._modalClassName;\r\n    this._dialog.showModal();\r\n    scrollToElement(this._dialog, {behavior: \"smooth\", block: \"end\"}).catch(() => this._dialog!.scrollIntoView(false));\r\n    this._dialog.addEventListener(\"click\", this.close);\r\n    this._dialog.addEventListener(\"cancel\", this.close);\r\n    this._dialog.addEventListener(\"close\", this.close);\r\n  }\r\n\r\n  close() {\r\n    if (this._dialog) {\r\n      this._dialog.close();\r\n      this._dialog.remove();\r\n      this._dialog = null;\r\n      scrollToElement(this.el, {behavior: \"smooth\", block: \"end\"}).catch(() => this.el.scrollIntoView(false));\r\n    }\r\n  }\r\n\r\n} ","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class LimitedSelectionCheckboxesController extends BaseController {\r\n\r\n  static targets = [\"input\", \"error\"];\r\n  static values = {max: Number, message: String};\r\n\r\n  declare readonly hasErrorTarget: boolean;\r\n  declare readonly errorTarget: HTMLElement;\r\n  declare readonly inputTargets: HTMLInputElement[];\r\n  declare readonly maxValue: number;\r\n  declare readonly messageValue: string;\r\n\r\n  initialize() {\r\n    this.handleInputs = this.handleInputs.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.inputTargets.forEach((el) => el.addEventListener(\"change\", this.handleInputs));\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTargets.forEach((el) => el.removeEventListener(\"change\", this.handleInputs));\r\n  }\r\n\r\n  handleInputs(event: Event) {\r\n    let tickedInputs = this.inputTargets.reduce((previousValue, el) => el.checked ? previousValue + 1 : previousValue, 0);\r\n    let target = event.target as HTMLInputElement;\r\n    if (tickedInputs > this.maxValue) {\r\n      event.preventDefault();\r\n      target.checked = false;\r\n      this.dispatch(target, \"change\");\r\n      this.dispatch(target, \"limited-selection:too-many\");\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = this.messageValue;\r\n      }\r\n    } else {\r\n      this.dispatch(target, \"limited-selection:selection\");\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class MediaPlayerController extends BaseController {\r\n\r\n  static targets = [\"media\"];\r\n\r\n  declare readonly mediaTarget: HTMLMediaElement;\r\n\r\n  initialize() {\r\n  }\r\n\r\n  connect() {\r\n  }\r\n\r\n  disconnect() {\r\n  }\r\n\r\n  async play(event?: Event) {\r\n    event?.preventDefault();\r\n    await this.mediaTarget.play();\r\n  }\r\n\r\n  pause(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.pause();\r\n  }\r\n\r\n  restart(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.currentTime = 0;\r\n  }\r\n\r\n  seek(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.currentTime += 5;\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class NavigateFormErrorsController extends BaseController {\r\n  static values = {\r\n    selector: String,\r\n    index: Number,\r\n  };\r\n\r\n  static targets = [\"next\", \"current\", \"previous\"];\r\n\r\n  declare readonly hasNextTarget: boolean;\r\n  declare readonly nextTarget: HTMLElement;\r\n  declare readonly hasPreviousTarget: boolean;\r\n  declare readonly previousTarget: HTMLElement;\r\n  declare readonly hasCurrentTarget: boolean;\r\n  declare readonly currentTarget: HTMLElement;\r\n\r\n  declare selectorValue: string;\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare indexValue: number;\r\n  declare readonly hasIndexValue: boolean;\r\n\r\n  _errors: HTMLElement[] = [];\r\n\r\n  get _errorCount(): number {\r\n    return this._errors.length;\r\n  }\r\n\r\n  get _previousIndex(): number | null {\r\n    let index = this._index - 1;\r\n    if (index < 0) {\r\n      return null;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  get _nextIndex(): number | null {\r\n    let index = this._index + 1;\r\n    if (index > this._errors.length - 1) {\r\n      return null;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  get _index(): number {\r\n    return Math.min(\r\n      this.hasIndexValue ? this.indexValue : 0,\r\n      this._errors.length,\r\n    );\r\n  }\r\n\r\n  get _selector(): string {\r\n    if (this.hasSelectorValue) {\r\n      return this.selectorValue;\r\n    } else {\r\n      throw new Error(\"Expected `selectorValue` to be present\");\r\n    }\r\n  }\r\n\r\n  get _previousError(): HTMLElement | null {\r\n    return this._previousIndex ? this._errors[this._previousIndex] : null;\r\n  }\r\n\r\n  get _currentError(): HTMLElement {\r\n    return this._errors[this._index];\r\n  }\r\n\r\n  get _nextError(): HTMLElement | null {\r\n    return this._nextIndex ? this._errors[this._nextIndex] : null;\r\n  }\r\n\r\n  connect() {\r\n    if (!this.hasIndexValue) {\r\n      this.indexValue = -1;\r\n    }\r\n    this._toggleButtons();\r\n\r\n    if (this._errorCount === 0) {\r\n      this.el.style.display = \"none\";\r\n    } else {\r\n      this.el.style.display = \"\";\r\n    }\r\n  }\r\n\r\n  async current() {\r\n    await scrollToElement(this._currentError);\r\n  }\r\n\r\n  async next() {\r\n    if (this._nextError) {\r\n      await scrollToElement(this._nextError);\r\n    }\r\n    if (this._index < this._errorCount - 1) {\r\n      this.indexValue += 1;\r\n    }\r\n  }\r\n\r\n  async previous() {\r\n    if (this._previousError) {\r\n      await scrollToElement(this._previousError);\r\n    }\r\n    if (this._index > 0) {\r\n      this.indexValue -= 1;\r\n    }\r\n  }\r\n\r\n  indexValueChanged() {\r\n    this._toggleButtons();\r\n  }\r\n\r\n  selectorValueChanged() {\r\n    this._errors = Array.from(document.querySelectorAll(this._selector));\r\n  }\r\n\r\n  private _toggleButtons() {\r\n    if (this.hasNextTarget) {\r\n      if (this.indexValue >= this._errorCount - 1) {\r\n        this.nextTarget.setAttribute(\"disabled\", \"true\");\r\n      } else {\r\n        this.nextTarget.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n    if (this.hasPreviousTarget) {\r\n      if (this.indexValue <= 0) {\r\n        this.previousTarget.setAttribute(\"disabled\", \"true\");\r\n      } else {\r\n        this.previousTarget.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class NestedFormController extends BaseController {\r\n  static targets = ['target', 'template'];\r\n  static values = {\r\n    insertMode: String,\r\n    wrapperClass: String,\r\n  };\r\n\r\n  declare readonly targetTarget: HTMLElement;\r\n  declare readonly templateTarget: HTMLTemplateElement | HTMLScriptElement;\r\n\r\n  declare readonly wrapperClassValue: string;\r\n  declare readonly hasWrapperSelectorValue: boolean;\r\n  declare readonly insertModeValue: InsertPosition;\r\n  declare readonly hasInsertModeValue: boolean;\r\n\r\n  get _wrapperClass() {\r\n    return this.hasWrapperSelectorValue ? this.wrapperClassValue : 'nested-fields';\r\n  }\r\n\r\n  get _insertMode(): InsertPosition {\r\n    return this.hasInsertModeValue ? this.insertModeValue : 'beforeend';\r\n  }\r\n\r\n  connect() {\r\n    this._checkStructure();\r\n  }\r\n\r\n  add(event?: Event) {\r\n    event?.preventDefault();\r\n\r\n    const content = this.templateTarget.innerHTML.replace(/NEW_RECORD/g, this._generateID());\r\n    this.targetTarget.insertAdjacentHTML(this._insertMode, content);\r\n  }\r\n\r\n  remove(event: Event) {\r\n    event.preventDefault();\r\n    const wrapper: HTMLElement | null = (event.target as HTMLElement).closest(`.${this._wrapperClass}`);\r\n    if (wrapper == null) {\r\n      throw new Error(`#remove was clicked from outside of a child record. Could not find an ancestor with class .${this._wrapperClass}`);\r\n    }\r\n\r\n    if (wrapper.dataset.newRecord === 'true') {\r\n      wrapper.remove();\r\n    } else {\r\n      wrapper.style.display = 'none';\r\n      let destroyInput = wrapper.querySelector(\"input[name*='_destroy']\") as HTMLInputElement | null;\r\n      if (destroyInput == null) {\r\n        throw new Error(`Could not find a hidden input with name '_destroy'. NestedForm cannot remove an already persisted record without it.`);\r\n      }\r\n\r\n      destroyInput.value = \"1\";\r\n    }\r\n  }\r\n\r\n  private _generateID(): string {\r\n    return new Date().getTime().toString() + Math.random().toString().slice(2);\r\n  }\r\n\r\n  private _checkStructure() {\r\n    let template = this.templateTarget.innerHTML;\r\n\r\n    if (template.indexOf('NEW_RECORD')) {\r\n      throw new Error(\"Could not find 'NEW_RECORD' in the provided template. Please make sure you've passed `child_index: 'NEW_RECORD'` to `fields_for`\");\r\n    }\r\n  }\r\n}","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class PasswordConfirmController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly passwordTargets: HTMLInputElement[];\r\n\r\n  declare readonly errorClass: string;\r\n  declare readonly hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this.checkPasswordsMatch = this.checkPasswordsMatch.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.passwordTargets.forEach((el) => el.addEventListener(\"change\", this.checkPasswordsMatch));\r\n  }\r\n\r\n  disconnect() {\r\n    this.passwordTargets.forEach((el) => el.removeEventListener(\"change\", this.checkPasswordsMatch));\r\n  }\r\n\r\n  private _allPasswordsMatch(): boolean {\r\n    let values = new Set(this.passwordTargets.map(el => el.value));  // Create a unique set of the password values\r\n    return values.has(\"\") || values.size == 1; // If any of the passwords are still blank, or there is only one distinct password value (i.e. they all are the same)\r\n  }\r\n\r\n  private checkPasswordsMatch() {\r\n    let element = this.el;\r\n    if (this._allPasswordsMatch()) {\r\n      this.dispatch(element, \"password-confirm:match\");\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.remove(this.errorClass));\r\n      }\r\n    } else {\r\n      this.dispatch(element, \"password-confirm:no-match\");\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.add(this.errorClass));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class PasswordPeekController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n\r\n  declare readonly passwordTarget: HTMLInputElement;\r\n\r\n  peak(event?: Event) {\r\n    event?.preventDefault();\r\n    this.passwordTarget.type = \"text\";\r\n  }\r\n\r\n  hide(event?: Event) {\r\n    event?.preventDefault();\r\n    this.passwordTarget.type = \"password\";\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    event?.preventDefault();\r\n    if (this.passwordTarget.type === \"password\") {\r\n      this.peak();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class RemoteFormController extends BaseController {\r\n  static targets = [];\r\n\r\n  static values = {selector: String};\r\n\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare readonly selectorValue: string;\r\n\r\n  get _selector(): string {\r\n    return this.hasSelectorValue ? this.selectorValue : `[data-controller~=\"${this.identifier}\"]`;\r\n  }\r\n\r\n  replace(event: { detail: [Element, any, XMLHttpRequest] }) {\r\n    const [data, status, xhr] = event.detail;\r\n    if (data instanceof Node) {\r\n      let new_element = data.querySelector(this._selector);\r\n\r\n      if (new_element == null) {\r\n        throw new Error(`expected new form DOM with [data-controller=\"${this.identifier}\"] to be present in returned payload`);\r\n      }\r\n\r\n      let parentNode = this.el.parentNode;\r\n      if (parentNode == null) {\r\n        throw new Error('expected form to have a DOM parent, could not execute replaceChild');\r\n      }\r\n      parentNode.replaceChild(new_element, this.el);\r\n    } else {\r\n      console.log('Unknown', data);\r\n    }\r\n  }\r\n}\r\n","import {useDebounce, useWindowResize} from \"stimulus-use\";\r\nimport {WindowResizePayload} from \"stimulus-use/dist/use-window-resize/use-window-resize\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\ninterface ResponsiveIframeMessage {\r\n  name: string,\r\n  height: number,\r\n}\r\n\r\nexport class ResponsiveIframeWrapperController extends BaseController {\r\n\r\n  initialize() {\r\n    this.messageReceived = this.messageReceived.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.addEventListener(\"message\", this.messageReceived);\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"message\", this.messageReceived);\r\n  }\r\n\r\n  messageReceived(message: MessageEvent<ResponsiveIframeMessage>) {\r\n    let data = message.data;\r\n    if (data.hasOwnProperty(\"name\") && data.name === \"iframe-body\" && data.hasOwnProperty(\"height\")) {\r\n      this.resize(data.height);\r\n    }\r\n  }\r\n\r\n  resize(height: number) {\r\n    (this.el as HTMLIFrameElement).style.height = `${height}px`;\r\n  }\r\n\r\n}\r\n\r\nexport class ResponsiveIframeBodyController extends BaseController {\r\n\r\n  static debounces = [\"postUpdate\"];\r\n\r\n  declare observe: () => void;\r\n  declare unobserve: () => void;\r\n\r\n  connect() {\r\n    // If this Window is inside a frame\r\n    if (window.self !== window.top) {\r\n      useWindowResize(this);\r\n      useDebounce(this, {});\r\n      this.postUpdate();\r\n    } else {\r\n      // Not an iframe\r\n    }\r\n  }\r\n\r\n  windowResize(payload: WindowResizePayload) {\r\n    this.postUpdate();\r\n  };\r\n\r\n  postUpdate() {\r\n    let payload: ResponsiveIframeMessage = {name: \"iframe-body\", height: this.getHeight()};\r\n    window.parent.postMessage(\r\n      payload,\r\n      \"*\",\r\n    );\r\n  }\r\n\r\n  getHeight(): number {\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n\r\n    // Get the largest height out of body and html's various height measurements\r\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n  }\r\n\r\n}\r\n","import {EphemeralController} from \"../../utilities/ephemeral_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollIntoFocusController extends EphemeralController {\r\n\r\n  static values = {\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Attempt smooth scrolling, with polyfill\r\n      scrollToElement(\r\n        this.el,\r\n        {\r\n          behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n          block: this.hasBlockValue ? this.blockValue : \"center\",\r\n          inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n        },\r\n      ).catch(() => this.el.scrollIntoView()); // Fallback to snap-scrolling\r\n      this._cleanupSelf();\r\n    });\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {getScrollParent, scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToBottomController extends BaseController {\r\n\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare modeValue: \"nearest\" | \"document\";\r\n  declare hasModeValue: boolean;\r\n\r\n  scroll(event?: Event) {\r\n    event?.preventDefault();\r\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\r\n    let target: null | HTMLElement;\r\n    if (mode == \"document\") {\r\n      target = document.body;\r\n    } else {\r\n      target = getScrollParent(this.el);\r\n    }\r\n    if (target == null) {\r\n      return;\r\n    }\r\n    scrollToElement(target!, {behavior: \"smooth\", block: \"end\"}).catch(() => target!.scrollIntoView(false));\r\n  }\r\n\r\n}\r\n\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToController extends BaseController {\r\n\r\n  static values = {\r\n    selector: String,\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare selectorValue: string;\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  scroll() {\r\n    let target = document.querySelector(this.selectorValue);\r\n    if (!target) {\r\n      console.warn(`Could not find target for '${this.selectorValue}'`);\r\n      return;\r\n    }\r\n\r\n    scrollToElement(\r\n      target!,\r\n      {\r\n        behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n        block: this.hasBlockValue ? this.blockValue : \"center\",\r\n        inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n      },\r\n    ).catch(() => target!.scrollIntoView()); // Fallback to snap-scrolling\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {getScrollParent, scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToTopController extends BaseController {\r\n\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare modeValue: \"nearest\" | \"document\";\r\n  declare hasModeValue: boolean;\r\n\r\n  scroll(event?: Event) {\r\n    event?.preventDefault();\r\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\r\n    let target: null | HTMLElement;\r\n    if (mode == \"document\") {\r\n      target = document.body;\r\n    } else {\r\n      target = getScrollParent(this.el);\r\n    }\r\n    if (target == null) {\r\n      return;\r\n    }\r\n    scrollToElement(target!, {behavior: \"smooth\", block: \"start\"}).catch(() => target!.scrollIntoView(false));\r\n  }\r\n\r\n}\r\n\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class SelfDestructController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  _timeout: null | ReturnType<typeof window.setTimeout> = null;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Only start countdown on first paint\r\n      this._timeout = setTimeout(() => this.el.remove(), this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class StickyController extends BaseController {\r\n\r\n  static classes = [\"stuck\"];\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare readonly hasStuckClass: boolean;\r\n  declare readonly stuckClass: string;\r\n  declare readonly hasModeValue: \"top\" | \"bottom\";\r\n  declare readonly modeValue: \"top\" | \"bottom\";\r\n\r\n  _magicElement: HTMLDivElement | null = null;\r\n\r\n  get _mode(): \"top\" | \"bottom\" {\r\n    return this.hasModeValue ? this.modeValue : \"top\";\r\n  }\r\n\r\n  createMagicElement() {\r\n    // Magic element placed next to the sticky el that acts as an external border.\r\n    // When the magic element is off the page, we know that the sticky el is \"stuck\"\r\n    if (this._magicElement !== null) {\r\n      return;\r\n    }\r\n\r\n    this._magicElement = document.createElement(\"div\");\r\n    switch (this._mode) {\r\n      case \"top\":\r\n        this.el.insertAdjacentElement(\"beforebegin\", this._magicElement);\r\n        break;\r\n      case \"bottom\":\r\n        this.el.insertAdjacentElement(\"afterend\", this._magicElement);\r\n        break;\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el;\r\n    this.createMagicElement();\r\n\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.target !== this._magicElement) {\r\n          return;\r\n        }\r\n        if (entry.intersectionRatio === 0) {\r\n          element.classList.add(this.hasStuckClass ? this.stuckClass : \"stuck\");\r\n        } else if (entry.intersectionRatio === 1) {\r\n          element.classList.remove(this.hasStuckClass ? this.stuckClass : \"stuck\");\r\n        }\r\n      });\r\n\r\n    }, {\r\n      threshold: [0, 1],\r\n    });\r\n    observer.observe(this._magicElement!);\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TableSortController extends BaseController {\r\n\r\n  static values = {startSort: Number};\r\n\r\n  declare readonly startSortValue: number;\r\n  declare readonly hasStartSortValue: boolean;\r\n  _lastIndex: number | null = null;\r\n  _reverse: boolean = false;\r\n\r\n  get _tableHead(): HTMLTableSectionElement {\r\n    let head = (this.el as HTMLTableElement).tHead;\r\n    if (head == null) {\r\n      throw new Error('Expected table to have a <thead> element.');\r\n    }\r\n    return head;\r\n  }\r\n\r\n  get _tableHeaders(): HTMLTableHeaderCellElement[] {\r\n    let rows = this._tableHead.rows;\r\n    if (rows.length == 0) {\r\n      throw new Error('Expected table to have a <thead> element with at least one row.');\r\n    }\r\n    return Array.from(rows[0].cells);\r\n  }\r\n\r\n  get _tableBody() {\r\n    return (this.el as HTMLTableElement).tBodies[0];\r\n  }\r\n\r\n  get _tableRows(): HTMLTableRowElement[] {\r\n    return Array.from(this._tableBody.rows);\r\n  }\r\n\r\n  initialize() {\r\n    this.sort = this.sort.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._tableHeaders.forEach(cell => cell.addEventListener(\"click\", this.sort));\r\n      if (this.hasStartSortValue) {\r\n        this._sortByColumn(this.startSortValue);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this._tableHeaders.forEach(cell => cell.removeEventListener(\"click\", this.sort));\r\n  }\r\n\r\n  sort(event: Event) {\r\n    event.preventDefault();\r\n    let headerCell = event.target! as HTMLTableHeaderCellElement;\r\n    let headerCellIndex = this._indexOfHeaderCell(headerCell);\r\n    this._sortByColumn(headerCellIndex);\r\n  }\r\n\r\n  private _indexOfHeaderCell(cell: HTMLTableHeaderCellElement) {\r\n    return this._tableHeaders.indexOf(cell);\r\n  }\r\n\r\n  private _sortByColumn(index: number) {\r\n    this._reverse = index === this._lastIndex && !this._reverse;\r\n    let frag = document.createDocumentFragment();\r\n    let rows = this._tableRows;\r\n\r\n    let newRows = rows.sort((row, otherRow) => {\r\n      let cells = Array.from(row.cells);\r\n      let otherCells = Array.from(otherRow.cells);\r\n\r\n      // TODO: Handle colspans?\r\n      let x = cells[index]?.innerText || \"\";\r\n      let y = otherCells[index]?.innerText || \"\";\r\n\r\n      let sortVal = x.localeCompare(y, \"en\", {sensitivity: \"base\", numeric: true, caseFirst: \"upper\"});\r\n\r\n      if (row.dataset.sortTop || otherRow.dataset.sortBottom) {\r\n        if (row.dataset.sortTop && otherRow.dataset.sortTop) {\r\n          return sortVal;\r\n        }\r\n        return -1;\r\n      }\r\n      if (row.dataset.sortBottom || otherRow.dataset.sortTop) {\r\n        if (row.dataset.sortBottom && otherRow.dataset.sortBottom) {\r\n          return sortVal;\r\n        }\r\n        return 1;\r\n      }\r\n\r\n      if (this._reverse) {\r\n        return sortVal > 0 ? -1 : 1;\r\n      }\r\n      return sortVal;\r\n    });\r\n\r\n    newRows.forEach(row => frag.appendChild(row));\r\n\r\n    this._tableBody.innerHTML = \"\";\r\n    this._tableBody.appendChild(frag);\r\n    this._lastIndex = index;\r\n  }\r\n\r\n}","import {useMutation} from \"stimulus-use\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TableTruncateController extends BaseController {\r\n\r\n  static targets = [\"showMore\"];\r\n  static values = {\r\n    limit: Number,\r\n    truncated: Boolean,\r\n  };\r\n\r\n  declare readonly showMoreTarget: HTMLElement;\r\n  declare limitValue: number;\r\n  declare readonly hasLimitValue: boolean;\r\n  declare truncatedValue: boolean;\r\n  declare readonly hasTruncatedValue: boolean;\r\n\r\n  get _truncated(): boolean {\r\n    return this.hasTruncatedValue ? this.truncatedValue : false;\r\n  }\r\n\r\n  set _truncated(value) {\r\n    this.truncatedValue = value;\r\n  }\r\n\r\n  get _tableBody(): HTMLTableSectionElement {\r\n    return (this.el as HTMLTableElement).tBodies[0];\r\n  }\r\n\r\n  get _tableRows(): HTMLTableRowElement[] {\r\n    return Array.from(this._tableBody.rows);\r\n  }\r\n\r\n  get _limit(): number {\r\n    return this.hasLimitValue ? this.limitValue : 20;\r\n  }\r\n\r\n  initialize() {\r\n    this.truncate = this.truncate.bind(this);\r\n    this.expand = this.expand.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    useMutation(this, {childList: true, element: this._tableBody});\r\n\r\n    requestAnimationFrame(() => {\r\n      this.truncate();\r\n      this.showMoreTarget.addEventListener(\"click\", this.expand);\r\n    });\r\n  }\r\n\r\n  truncate(event?: Event) {\r\n    event?.preventDefault();\r\n    this._truncated = true;\r\n    if (this._tableRows.length >= this._limit) {\r\n      this._tableRows.slice(this._limit).forEach((el) => {\r\n        if (el !== this.showMoreTarget) {\r\n          this._hideElement(el);\r\n        }\r\n      });\r\n      this._showElement(this.showMoreTarget);\r\n    } else {\r\n      this._hideElement(this.showMoreTarget);\r\n    }\r\n  }\r\n\r\n  expand(event?: Event) {\r\n    this._truncated = false;\r\n    event?.preventDefault();\r\n    this._tableRows.slice(this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._showElement(el);\r\n      }\r\n    });\r\n    this._hideElement(this.showMoreTarget);\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    if (this._truncated) {\r\n      this._reTruncate();\r\n    }\r\n  }\r\n\r\n  private _showElement(el: HTMLElement): void {\r\n    el.style.display = \"\";\r\n  }\r\n\r\n  private _hideElement(el: HTMLElement): void {\r\n    el.style.display = \"none\";\r\n  }\r\n\r\n  private _reTruncate() {\r\n    this._tableRows.slice(0, this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._showElement(el);\r\n      }\r\n    });\r\n    this._tableRows.slice(this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._hideElement(el);\r\n      }\r\n    });\r\n    this._showElement(this.showMoreTarget);\r\n  }\r\n\r\n}","import {EphemeralController} from \"../utilities/ephemeral_controller\";\r\n\r\nexport class TeleportController extends EphemeralController {\r\n\r\n  static values = {target: String, insert: String, immediate: Boolean};\r\n\r\n  declare readonly immediateValue: boolean;\r\n  declare readonly hasImmediateValue: boolean;\r\n  declare readonly targetValue: string;\r\n  declare readonly hasInsertValue: boolean;\r\n  declare readonly insertValue: InsertPosition | \"replaceOuter\" | \"replaceInner\" | \"prepend\" | \"append\";\r\n\r\n  connect() {\r\n    if (!this.hasInsertValue) {\r\n      throw new Error(\"`insert` value was not specified\");\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasImmediateValue && this.immediateValue) {\r\n        this.execute();\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el;\r\n    let destination = document.querySelector(this.targetValue);\r\n\r\n    if (destination == null) {\r\n      this.dispatch(element, \"teleport:error\");\r\n      return;\r\n    }\r\n\r\n    let copy = element.cloneNode(true) as HTMLElement;\r\n    this.cleanup(copy);\r\n\r\n    switch (this.insertValue) {\r\n      case \"beforebegin\":\r\n      case \"beforeend\":\r\n      case \"afterend\":\r\n      case \"afterbegin\":\r\n        destination.insertAdjacentHTML(this.insertValue, copy.outerHTML);\r\n        break;\r\n      case \"replaceOuter\":\r\n        destination.outerHTML = copy.outerHTML;\r\n        break;\r\n      case \"replaceInner\":\r\n        destination.innerHTML = copy.outerHTML;\r\n        break;\r\n      case \"prepend\":\r\n        destination.insertAdjacentHTML(\"afterbegin\", copy.outerHTML);\r\n        break;\r\n      case \"append\":\r\n        destination.insertAdjacentHTML(\"beforeend\", copy.outerHTML);\r\n        break;\r\n      default:\r\n        throw new Error(\"`insert` value was not specified\");\r\n\r\n    }\r\n    element.remove();\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TimeoutController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  _timeoutHandle: null | number = null;\r\n\r\n  initialize() {\r\n    this._timeout = this._timeout.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._timeoutHandle = window.setTimeout(this._timeout, this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      window.clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  _timeout() {\r\n    this.dispatch(this.el, \"timeout\");\r\n  }\r\n\r\n}","import {useClickOutside, useHover} from \"stimulus-use\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport type ToggleClassMode = \"on\" | \"off\" | \"toggle\"\r\n\r\nexport class ToggleClassController extends BaseController {\r\n\r\n  static targets = [\"toggle\"];\r\n  static values = {\r\n    class: String,\r\n    mouseEnter: String,\r\n    mouseLeave: String,\r\n    clickAway: Boolean,\r\n    initial: String,\r\n  };\r\n\r\n  declare readonly toggleTargets: HTMLElement[];\r\n\r\n  declare readonly classValue: string;\r\n  declare readonly hasClassValue: boolean;\r\n\r\n  declare readonly mouseEnterValue: ToggleClassMode;\r\n  declare readonly hasMouseEnterValue: boolean;\r\n\r\n  declare readonly mouseLeaveValue: ToggleClassMode;\r\n  declare readonly hasMouseLeaveValue: boolean;\r\n\r\n  declare readonly clickAwayValue: boolean;\r\n  declare readonly hasClickAwayValue: boolean;\r\n\r\n  declare readonly initialValue: \"on\" | \"off\";\r\n  declare readonly hasInitialValue: boolean;\r\n\r\n  connect() {\r\n    if (!this.hasClassValue) {\r\n      throw new Error(\"data-toggle-class-class-value must not be empty\");\r\n    }\r\n\r\n    if (this.hasMouseEnterValue || this.hasMouseLeaveValue) {\r\n      useHover(this);\r\n    }\r\n\r\n    if (this.hasClickAwayValue && this.clickAwayValue) {\r\n      useClickOutside(this);\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasInitialValue) {\r\n        if (this.initialValue === \"on\") {\r\n          this.toggleTargets.forEach((target) => this._elementOn(target));\r\n        } else {\r\n          this.toggleTargets.forEach((target) => this._elementOff(target));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOutside() {\r\n    this.toggleTargets.forEach((target) => {\r\n      if (this._elementWasToggled(target)) {\r\n        this._elementToggleStatus(target);\r\n        this._elementToggle(target);\r\n      }\r\n    });\r\n  }\r\n\r\n  mouseEnter() {\r\n    if (this.hasMouseEnterValue) {\r\n      switch (this.mouseEnterValue) {\r\n        case \"on\":\r\n          this.on();\r\n          break;\r\n        case \"off\":\r\n          this.off();\r\n          break;\r\n        case \"toggle\":\r\n          this.toggle();\r\n          break;\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  mouseLeave() {\r\n    if (this.hasMouseLeaveValue) {\r\n      switch (this.mouseLeaveValue) {\r\n        case \"on\":\r\n          this.on();\r\n          break;\r\n        case \"off\":\r\n          this.off();\r\n          break;\r\n        case \"toggle\":\r\n          this.toggle();\r\n          break;\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  on(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementOn(target);\r\n    });\r\n  }\r\n\r\n  off(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementOff(target);\r\n    });\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementToggle(target);\r\n    });\r\n  }\r\n\r\n  private _elementWasToggled(el: HTMLElement): boolean {\r\n    return el.dataset.toggled == \"true\";\r\n  }\r\n\r\n  private _elementToggleStatus(el: HTMLElement) {\r\n    if (this._elementWasToggled(el)) {\r\n      delete el.dataset.toggled;\r\n    } else {\r\n      el.dataset.toggled = \"true\";\r\n    }\r\n  }\r\n\r\n  private _elementToggle(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass));\r\n  }\r\n\r\n  private _elementOn(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass, true));\r\n  }\r\n\r\n  private _elementOff(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass, false));\r\n  }\r\n\r\n}\r\n","export function isTurboFrame(element: HTMLElement): element is TurboFrame {\r\n  return element.nodeName == \"TURBO-FRAME\";\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\nimport {isHTMLAnchorElement} from \"../utilities/elements\";\r\nimport {isTurboFrame} from \"../utilities/turbo\";\r\n\r\nexport class TurboFrameRCController extends BaseController {\r\n\r\n  static values = {\r\n    frameId: String,\r\n    src: String,\r\n    loadingMessage: String,\r\n  };\r\n\r\n  declare readonly frameIdValue: string;\r\n  declare readonly srcValue: string;\r\n  declare readonly hasSrcValue: boolean;\r\n  declare readonly loadingMessageValue: string;\r\n  declare readonly hasLoadingMessageValue: boolean;\r\n\r\n  toggle(event?: Event) {\r\n    event?.preventDefault();\r\n    let frame = this._getFrame();\r\n    let frameSrc = frame.src;\r\n    if (frameSrc == null || frameSrc !== this._getSrc()) {\r\n      this._setSrc();\r\n    } else {\r\n      this._clear();\r\n    }\r\n  }\r\n\r\n  setSrc(event?: Event) {\r\n    event?.preventDefault();\r\n    this._setSrc();\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    event?.preventDefault();\r\n    this._clear();\r\n  }\r\n\r\n  private _setSrc() {\r\n    let frame = this._getFrame();\r\n    if (this.hasLoadingMessageValue) {\r\n      frame.innerHTML = this.loadingMessageValue;\r\n    }\r\n    frame.src = this._getSrc();\r\n  }\r\n\r\n  private _clear() {\r\n    let frame = this._getFrame();\r\n    frame.src = \"\";\r\n    frame.innerHTML = \"\";\r\n  }\r\n\r\n  private _getFrame(): TurboFrame {\r\n    let frame = document.getElementById(`${this.frameIdValue}`);\r\n    if (frame == null) {\r\n      throw new Error(`Could not find frame with ID '${this.frameIdValue}'`);\r\n    }\r\n    if (!isTurboFrame(frame)) {\r\n      throw new Error(`Element targeted by ID '${this.frameIdValue}'`);\r\n    } else {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  private _getSrc(): string {\r\n    let element = this.el;\r\n    if (this.hasSrcValue) {\r\n      return this.srcValue;\r\n    } else if (isHTMLAnchorElement(element)) {\r\n      return element.href;\r\n    } else {\r\n      throw new Error(\"No link given to drive frame to\");\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\nimport {isTurboFrame} from \"../utilities/turbo\";\r\n\r\n// noinspection SillyAssignmentJS\r\nexport class TurboFrameRefreshController extends BaseController {\r\n\r\n  static values = {\r\n    interval: Number,\r\n    poll: Boolean,\r\n  };\r\n\r\n  declare readonly intervalValue: number;\r\n  declare readonly pollValue: boolean;\r\n  declare readonly hasPollValue: boolean;\r\n  _timeoutHandle: null | ReturnType<typeof window.setTimeout> = null;\r\n\r\n  get _poll(): boolean {\r\n    return this.hasPollValue ? this.pollValue : false;\r\n  }\r\n\r\n  initialize() {\r\n    this.refresh = this.refresh.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el;\r\n    if (isTurboFrame(element)) {\r\n      if (!!element.src) {\r\n        throw new Error('The provided <turbo-frame> element has no `src` attribute.');\r\n      }\r\n    } else {\r\n      throw new Error('Expected controller to be mounted on a <turbo-frame> element.');\r\n    }\r\n    if (this._poll) {\r\n      requestAnimationFrame(() => this._timeoutHandle = setTimeout(() => this.refresh(), this.intervalValue));\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  refresh(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el as TurboFrame;\r\n    element.src = element.src;\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class WordCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this.updateWordCount = this.updateWordCount.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.updateWordCount();\r\n    this.inputTarget.addEventListener(\"input\", this.updateWordCount);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.updateWordCount);\r\n  }\r\n\r\n  updateWordCount() {\r\n    let wordCount = 0;\r\n    let textAreaValue = this.inputTarget.value;\r\n    let matches = textAreaValue.match(/\\S+/g);\r\n    wordCount = (matches && matches.length) || 0;\r\n    this.outputTarget.innerText = wordCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this._isValidCount(wordCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n"],"names":["BaseController","context","_this","Proxy","get","obj","prop","returnVal","Reflect","self","test","logProperty","toString","apply","target","thisArg","argArray","log","args","metaValue","name","element","document","head","querySelector","getAttribute","dispatch","eventName","options","mergedOptions","Object","assign","bubbles","cancelable","detail","event","CustomEvent","this","logEvent","dispatchEvent","functionName","application","debug","logger","console","groupCollapsed","identifier","groupEnd","documentElement","hasAttribute","isTurboPreview","Controller","EphemeralController","_cleanupSelf","cleanup","el","dataset","controller","replaceAll","RegExp","substringIdentifierValueRegex","camelCase","action","values","constructor","keys","forEach","val","classes","AnchorSpyController","initialize","_checkAnchor","bind","connect","requestAnimationFrame","window","addEventListener","disconnect","removeEventListener","write","preventDefault","_anchor","_key","keyValue","location","hash","substr","value","key","String","AppearanceController","_handleVisibility","appear","away","_documentIsActive","visibilityState","hasFocus","AsyncBlockController","loadContent","hasReplaceTarget","replaceTarget","fetch","endpointValue","then","response","text","html","newEl","createElement","innerHTML","hasSelectorValue","selectedContent","querySelectorAll","selectorValue","replaceWith","children","err","_errorMessage","hasErrorMessageValue","errorMessageValue","endpoint","errorMessage","selector","AutoSubmitFormController","submit","_this2","method","methodName","composeEventName","eventPrefix","composedName","extendedEvent","type","composed","originalEvent","defaultOptions","useIntersection","targetElement","controllerDisconnect","observer","IntersectionObserver","entries","entry","isIntersecting","isVisible","call","appearEvent","dispatchAppear","disappearEvent","dispatchDisappear","observe","unobserve","[object Object]","events","onlyVisible","StimulusUse","_a","_b","_c","controllerId","stimulusUseDebug","id","controllerInitialize","controllerConnect","UseHover","super","onEnter","onLeave","hover","enhanceController","UseMutation","error","handleError","mutation","MutationObserver","useMutation","useWindowResize","callback","innerWidth","innerHeight","payload","height","Infinity","width","debounce","fn","wait","timeoutId","arguments","clearTimeout","setTimeout","AutosizeController","_handler","style","resize","boxSizing","windowResize","autosize","offset","offsetHeight","clientHeight","scrollHeight","CharCountController","_updateCharCount","inputTarget","charCount","length","outputTarget","innerText","hasErrorClass","_isValidCount","classList","remove","errorClass","add","count","min","max","hasMinValue","minValue","hasMaxValue","maxValue","Number","CheckboxSelectAllController","_toggle","_refresh","hasSelectAllTarget","selectAllTarget","checkboxTargets","checkbox","checked","checkboxesCount","checkboxesCheckedCount","_checked","indeterminate","filter","ClipboardController","_supported","queryCommandSupported","hasRemoveUnusedValue","removeUnusedValue","hasFallbackTarget","fallbackTarget","hasCopyTarget","copyTarget","select","sourceTarget","copy","execCommand","isHTMLAnchorElement","nodeName","isHTMLFormElement","isHTMLInputElement","isHTMLButtonElement","isHTMLSelectElement","isElementCheckable","removeUnused","Boolean","ConfirmController","confirm","Error","_message","hasMessageValue","messageValue","message","ConfirmNavigationController","allowSubmit","confirmNavigation","confirmTurboNavigation","onbeforeunload","_event","_messageValue","CountdownController","_interval","setInterval","_tick","hasCountingDownClass","countingDownClasses","_clearTick","hasEndedClass","endedClasses","deadlineValueChanged","now","Date","distance","isPast","_deadlineDate","years","months","days","hours","minutes","seconds","intervalToDuration","start","end","hasYearsTarget","_updateTarget","yearsTarget","_years","hasMonthsTarget","monthsTarget","_months","hasDaysTarget","daysTarget","_days","hasHoursTarget","hoursTarget","_hours","hasMinutesTarget","minutesTarget","_minutes","hasSecondsTarget","secondsTarget","_seconds","e","clearInterval","_removeTargetIfUnused","_removeUnused","unused","parseInt","undefined","duration","endedClass","split","countingDownClass","deadlineValue","deadline","DebugController","testTargets","DetectDirtyController","_checkDirty","_cacheLoadValues","restore","_restoreElementFromLoadValue","_getElementValue","_getElementLoadValue","_cacheAttrName","defaultChecked","Array","from","option","defaultSelected","_elementHasCachedLoadValue","_isElementDirty","setAttribute","removeAttribute","cacheValue","defaultValue","DetectDirtyFormController","_formElements","_checkElementDirty","_cacheElementLoadValue","_this3","some","DisableInputsController","toggle","hasDisablerTarget","disablerTarget","disableInputs","enableInputs","shouldClear","hasClearValue","clearValue","disableTargets","_","disabled","clear","DisableWithController","enable","disable","_timeoutHandle","_isDisabled","stopImmediatePropagation","_cacheText","_getElText","_setElText","_disable","_timeout","_enable","str","hasTimeoutValue","timeoutValue","timeout","DismissableController","dismiss","ElementSaveController","_restoreOnLoad","localStorage","removeItem","_uniqueIdentifier","_element","save","attributes","attributesValue","data","attr","_get","setItem","JSON","stringify","getItem","savedData","parse","_set","hasIdValue","idValue","elementID","href","_id","hasRestoreOnLoadValue","restoreOnLoadValue","hasElementTarget","elementTarget","restoreOnLoad","EmptyDomController","childList","checkEmpty","mutate","_children","_removeNotEmptyClasses","_addEmptyClasses","_addNotEmptyClasses","_removeEmptyClasses","hasEmptyClass","emptyClasses","hasNotEmptyClass","notEmptyClasses","emptyClass","notEmptyClass","hasScopeSelectorValue","scopeSelectorValue","scopeSelector","EnableInputsController","hasEnablerTarget","enablerTarget","enableTargets","FallbackImageController","onerror","hasPlaceholderValue","src","placeholderValue","display","placeholder","FormRcController","formTarget","reset","FormSaveController","_clear","_clearOnSubmit","_formIdentifier","_formData","_formID","elements","hasClearOnSubmitValue","clearOnSubmitValue","clearOnSubmit","IntersectionController","threshold","_threshold","disappear","hasThresholdValue","thresholdValue","map","parseFloat","trim","IntervalController","hasSecondsValue","_intervalHandle","secondsValue","smoothPolyfilled","LazyBlockController","scrollToElement","behavior","block","inline","scrollIntoView","smoothSupported","import","polyfill","polyfillSmooth","getScrollParent","node","overflowY","getComputedStyle","parentElement","body","LightboxImageController","open","close","_dialog","image","className","_imageClassName","_src","srcset","_srcSet","sizes","_sizes","appendChild","insertAdjacentElement","dialogPolyfill","registerDialog","_modalClassName","showModal","hasSrcValue","srcValue","hasSrcSetValue","srcSetValue","hasSizesValue","sizesValue","hasModalClass","modalClass","hasImageClass","imageClass","srcSet","LimitedSelectionCheckboxesController","handleInputs","inputTargets","tickedInputs","reduce","previousValue","hasErrorTarget","errorTarget","MediaPlayerController","play","mediaTarget","pause","restart","currentTime","seek","NavigateFormErrorsController","hasIndexValue","indexValue","_toggleButtons","_errorCount","current","_currentError","next","_this5","_index","_nextError","previous","_this7","_previousError","indexValueChanged","selectorValueChanged","_errors","_selector","hasNextTarget","nextTarget","hasPreviousTarget","previousTarget","index","Math","_previousIndex","_nextIndex","NestedFormController","_checkStructure","content","templateTarget","replace","_generateID","targetTarget","insertAdjacentHTML","_insertMode","wrapper","closest","_wrapperClass","newRecord","destroyInput","getTime","random","slice","indexOf","hasWrapperSelectorValue","wrapperClassValue","hasInsertModeValue","insertModeValue","insertMode","wrapperClass","PasswordConfirmController","checkPasswordsMatch","passwordTargets","_allPasswordsMatch","Set","has","size","PasswordPeekController","peak","passwordTarget","hide","RemoteFormController","Node","new_element","parentNode","replaceChild","ResponsiveIframeWrapperController","messageReceived","hasOwnProperty","ResponsiveIframeBodyController","top","debounces","func","postUpdate","getHeight","parent","postMessage","ScrollIntoFocusController","hasBehaviorValue","behaviorValue","hasBlockValue","blockValue","hasInlineValue","inlineValue","ScrollToBottomController","scroll","hasModeValue","modeValue","mode","ScrollToController","warn","ScrollToTopController","SelfDestructController","StickyController","createMagicElement","_magicElement","_mode","intersectionRatio","hasStuckClass","stuckClass","TableSortController","sort","_tableHeaders","cell","hasStartSortValue","_sortByColumn","startSortValue","headerCellIndex","_indexOfHeaderCell","_reverse","_lastIndex","frag","createDocumentFragment","_tableRows","row","otherRow","cells","otherCells","x","y","sortVal","localeCompare","sensitivity","numeric","caseFirst","sortTop","sortBottom","_this4","_tableBody","tHead","rows","_tableHead","tBodies","startSort","TableTruncateController","truncate","expand","showMoreTarget","_truncated","_limit","_hideElement","_showElement","_reTruncate","hasTruncatedValue","truncatedValue","hasLimitValue","limitValue","limit","truncated","TeleportController","hasInsertValue","hasImmediateValue","immediateValue","execute","destination","targetValue","cloneNode","insertValue","outerHTML","insert","immediate","TimeoutController","ToggleClassController","hasClassValue","hasMouseEnterValue","hasMouseLeaveValue","useHover","hasClickAwayValue","clickAwayValue","onEvent","contains","rect","getBoundingClientRect","windowHeight","windowWidth","clientWidth","left","isElementInViewport","clickOutside","clickOutsideEvent","useClickOutside","hasInitialValue","toggleTargets","initialValue","_elementOn","_elementOff","_elementWasToggled","_elementToggleStatus","_elementToggle","mouseEnter","mouseEnterValue","on","off","mouseLeave","mouseLeaveValue","toggled","classValue","klass","isTurboFrame","class","clickAway","initial","TurboFrameRCController","frameSrc","_getFrame","_getSrc","_setSrc","setSrc","frame","hasLoadingMessageValue","loadingMessageValue","getElementById","frameIdValue","frameId","loadingMessage","TurboFrameRefreshController","refresh","_poll","intervalValue","hasPollValue","pollValue","interval","poll","WordCountController","updateWordCount","wordCount","matches","match"],"mappings":"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"}