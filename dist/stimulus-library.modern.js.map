{"version":3,"file":"stimulus-library.modern.js","sources":["../src/utilities/base_controller.ts","../src/utilities/ephemeral_controller.ts","../src/controllers/anchor_spy_controller.ts","../src/controllers/utility/appearance_controller.ts","../src/controllers/async_block_controller.ts","../src/controllers/forms/auto_submit_form_controller.ts","../node_modules/stimulus-use/dist/support/index.js","../node_modules/stimulus-use/dist/use-intersection/use-intersection.js","../node_modules/stimulus-use/dist/use-click-outside/use-click-outside.js","../node_modules/stimulus-use/dist/stimulus_use.js","../node_modules/stimulus-use/dist/use-hover/use-hover.js","../node_modules/stimulus-use/dist/use-mutation/use-mutation.js","../node_modules/stimulus-use/dist/use-window-resize/use-window-resize.js","../node_modules/stimulus-use/dist/use-debounce/use-debounce.js","../src/controllers/forms/autosize_controller.ts","../src/controllers/forms/char_count_controller.ts","../src/controllers/forms/checkbox_select_all_controller.ts","../src/controllers/clipboard_controller.ts","../src/utilities/elements.ts","../src/controllers/confirm_controller.ts","../src/controllers/confirm_navigation_controller.ts","../src/controllers/visual/countdown_controller.ts","../src/controllers/debug_controller.ts","../src/controllers/forms/detect_dirty_controller.ts","../src/controllers/forms/detect_dirty_form_controller.ts","../src/controllers/forms/disable_inputs_controller.ts","../src/controllers/disable_with_controller.ts","../src/controllers/dismissable_controller.ts","../src/controllers/element_save_controller.ts","../src/controllers/empty_dom_controller.ts","../src/controllers/forms/enable_inputs_controller.ts","../src/controllers/media/fallback_image_controller.ts","../src/controllers/forms/form_rc_controller.ts","../src/controllers/forms/form_save_controller.ts","../src/controllers/utility/intersection_controller.ts","../src/controllers/utility/interval_controller.ts","../src/controllers/lazy_block_controller.ts","../src/utilities/scroll.ts","../src/controllers/media/lightbox_image_controller.ts","../src/controllers/forms/limited_selection_checkboxes_controller.ts","../src/controllers/media/media_player_controller.ts","../src/controllers/forms/navigate_form_errors_controller.ts","../src/controllers/forms/nested_form_controller.ts","../src/controllers/forms/password_confirm_controller.ts","../src/controllers/forms/password_peek_controller.ts","../src/controllers/forms/remote_form_controller.ts","../src/controllers/responsive_iframe_controller.ts","../src/controllers/scroll/scroll_into_focus_controller.ts","../src/controllers/scroll/scroll_to_bottom_controller.ts","../src/controllers/scroll/scroll_to_controller.ts","../src/controllers/scroll/scroll_to_top_controller.ts","../src/controllers/self_destruct_controller.ts","../src/controllers/sticky_controller.ts","../src/controllers/tables/table_sort_controller.ts","../src/controllers/tables/table_truncate_controller.ts","../src/controllers/teleport_controller.ts","../src/controllers/utility/timeout_controller.ts","../src/controllers/toggle_class_controller.ts","../src/utilities/turbo.ts","../src/controllers/turbo_frame_rc_controller.ts","../src/controllers/turbo_frame_refresh_controller.ts","../src/controllers/forms/word_count_controller.ts"],"sourcesContent":["import {Context, Controller} from \"stimulus\";\r\n\r\nexport class BaseController extends Controller {\r\n\r\n  constructor(context: Context) {\r\n    super(context);\r\n    return new Proxy(this, {\r\n      get: (obj, prop) => {\r\n        let returnVal = Reflect.get(obj, prop);\r\n        let self = this;\r\n        if (logProperty(prop.toString())) {\r\n          if (typeof returnVal == \"function\") {\r\n            return new Proxy(returnVal, {\r\n              apply(target: any, thisArg: any, argArray?: any): any {\r\n                self.log(prop.toString(), {\r\n                  args: argArray,\r\n                });\r\n                return Reflect.apply(target, thisArg, argArray);\r\n              },\r\n            });\r\n          } else {\r\n            this.log(prop.toString());\r\n          }\r\n        }\r\n        return returnVal;\r\n      },\r\n    });\r\n  }\r\n\r\n  get el(): HTMLElement {\r\n    return this.element as HTMLElement;\r\n  }\r\n\r\n  get isTurboPreview(): boolean {\r\n    return document.documentElement.hasAttribute('data-turbo-preview') || document.documentElement.hasAttribute('data-turbolinks-preview');\r\n  }\r\n\r\n  get isTurbolinksPreview(): boolean {\r\n    return this.isTurboPreview;\r\n  }\r\n\r\n  get csrfToken(): string | null {\r\n    return this.metaValue('csrf-token');\r\n  }\r\n\r\n  metaValue(name: string): string | null {\r\n    const element = document.head.querySelector(`meta[name=\"${name}\"]`);\r\n    return element?.getAttribute('content') || null;\r\n  }\r\n\r\n  dispatch(element: HTMLElement, eventName: string, options: CustomEventInit = {}) {\r\n    let mergedOptions = Object.assign({}, {bubbles: true, cancelable: true, detail: {target: element}}, options);\r\n    if (!!mergedOptions.detail.target) {\r\n      mergedOptions.detail.target = element;\r\n    }\r\n    let event = new CustomEvent(eventName, mergedOptions);\r\n    this.logEvent(eventName, event, element);\r\n    element.dispatchEvent(event);\r\n  }\r\n\r\n  log(functionName: string, args: {} = {}): void {\r\n    // @ts-ignore\r\n    if (!this.application.debug) {\r\n      return;\r\n    }\r\n    let logger = console;\r\n    logger.groupCollapsed(`%c${this.identifier} %c#${functionName}`, \"color: #3B82F6\", \"color: unset\");\r\n    logger.log({\r\n      element: this.element,\r\n      ...args,\r\n    });\r\n    logger.groupEnd();\r\n  }\r\n\r\n  logEvent(eventName: string, event: CustomEvent, element: HTMLElement) {\r\n    // @ts-ignore\r\n    if (!this.application.debug) {\r\n      return;\r\n    }\r\n    let logger = console;\r\n    logger.groupCollapsed(`%c${this.identifier} %c${eventName}%c`, \"color: #3B82F6\", \"color: #0be000\", \"color: unset\");\r\n    logger.log({element});\r\n    logger.groupEnd();\r\n  }\r\n\r\n}\r\n\r\nfunction logProperty(prop: string): boolean {\r\n  switch (prop) {\r\n    case \"application\":\r\n    case \"el\":\r\n    case \"element\":\r\n    case \"constructor\":\r\n    case \"initialize\":\r\n    case \"log\":\r\n    case \"logEvent\":\r\n    case \"dispatch\":\r\n    case \"data\":\r\n    case \"valueDescriptorMap\":\r\n    case \"mutate\":\r\n    case \"identifier\":\r\n      return false;\r\n  }\r\n\r\n  if (/^_.*?$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Target(s)?$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Value$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?ValueChanged$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Class$/.test(prop)) {\r\n    return false;\r\n  }\r\n  if (/^.*?Classes$/.test(prop)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import camelCase from \"camelcase\";\r\nimport {BaseController} from \"./base_controller\";\r\n\r\nexport class EphemeralController extends BaseController {\r\n\r\n  _cleanupSelf() {\r\n    this.cleanup(this.el);\r\n  }\r\n\r\n  cleanup(element: HTMLElement) {\r\n    element.dataset.controller = element.dataset.controller?.replaceAll(new RegExp(`(\\s|^)${this.identifier}(\\s|$)`, \"g\"), \"\") || \"\";\r\n    if (element.dataset.controller == \"\") {\r\n      // If there are no controllers left, remove the attribute\r\n      delete element.dataset.controller;\r\n    }\r\n\r\n    let substringIdentifierValueRegex = new RegExp(`(\\s|^)${this.identifier}\\\\..+?(\\s|$)`, \"g\");\r\n    element.dataset.target = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-target`)];\r\n    if (element.dataset.target == \"\") {\r\n      // If there are no targets left, remove the attribute\r\n      delete element.dataset.target;\r\n    }\r\n\r\n    element.dataset.action = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-action`)];\r\n    if (element.dataset.action == \"\") {\r\n      // If there are no actions left, remove the attribute\r\n      delete element.dataset.action;\r\n    }\r\n\r\n    // @ts-ignore\r\n    let values = this.constructor.values;\r\n    if (values) {\r\n      Object.keys(values).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-value`)]);\r\n    }\r\n\r\n    // @ts-ignore\r\n    let classes = this.constructor.classes;\r\n    if (classes) {\r\n      Object.keys(classes).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-class`)]);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class AnchorSpyController extends BaseController {\r\n  static values = {key: String};\r\n\r\n  declare readonly keyValue: string;\r\n\r\n  get _key(): string {\r\n    return this.keyValue.replaceAll('#', '');\r\n  }\r\n\r\n  get _anchor(): string {\r\n    return window.location.hash.substr(1);\r\n  }\r\n\r\n  set _anchor(value: string) {\r\n    window.location.hash = value;\r\n  }\r\n\r\n  initialize() {\r\n    this._checkAnchor = this._checkAnchor.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._checkAnchor();\r\n      window.addEventListener(\"hashchange\", this._checkAnchor);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"hashchange\", this._checkAnchor);\r\n  }\r\n\r\n  write(event?: Event) {\r\n    event?.preventDefault();\r\n    this._anchor = this._key;\r\n  }\r\n\r\n  private _checkAnchor() {\r\n    if (this._key === this._anchor) {\r\n      this.dispatch(this.el, \"anchor-spy:active\");\r\n    } else {\r\n      this.dispatch(this.el, \"anchor-spy:inactive\");\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AppearanceController extends BaseController {\r\n\r\n  initialize() {\r\n    this._handleVisibility = this._handleVisibility.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.addEventListener(\"focus\", this._handleVisibility);\r\n    window.addEventListener(\"blur\", this._handleVisibility);\r\n    document.addEventListener(\"visibilitychange\", this._handleVisibility);\r\n    requestAnimationFrame(() => {\r\n      this._handleVisibility();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"focus\", this._handleVisibility);\r\n    window.removeEventListener(\"blur\", this._handleVisibility);\r\n    document.removeEventListener(\"visibilitychange\", this._handleVisibility);\r\n  }\r\n\r\n  appear() {\r\n    this.dispatch(this.el, \"appearance:appear\");\r\n  }\r\n\r\n  away() {\r\n    this.dispatch(this.el, \"appearance:away\");\r\n  }\r\n\r\n  private _handleVisibility() {\r\n    this._documentIsActive() ? this.appear() : this.away();\r\n  }\r\n\r\n  private _documentIsActive() {\r\n    return document.visibilityState == \"visible\" && document.hasFocus();\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class AsyncBlockController extends BaseController {\r\n  static targets = [\"replace\"];\r\n  static values = {endpoint: String, errorMessage: String, selector: String};\r\n\r\n  declare readonly replaceTarget: HTMLElement;\r\n  declare readonly hasReplaceTarget: boolean;\r\n  declare readonly endpointValue: string;\r\n\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare readonly selectorValue: string;\r\n\r\n  declare readonly hasErrorMessageValue: boolean;\r\n  declare readonly errorMessageValue: string;\r\n\r\n  get _errorMessage(): string {\r\n    return this.hasErrorMessageValue ? this.errorMessageValue : \"This content failed to load\";\r\n  }\r\n\r\n  // This is a simple controller to load a block of content when the page loads.\r\n  // It should be used to give a quick initial response before calling out to an\r\n  // an AJAX endpoint to do some expensive work.\r\n  connect() {\r\n    this.loadContent();\r\n  }\r\n\r\n  loadContent() {\r\n    let self = this;\r\n    let el = this.hasReplaceTarget ? this.replaceTarget : this.el;\r\n    fetch(this.endpointValue)\r\n    .then((response) => response.text())\r\n    .then((html) => {\r\n      let newEl = document.createElement(\"div\");\r\n      newEl.innerHTML = html;\r\n      if (this.hasSelectorValue) {\r\n        let selectedContent = newEl.querySelectorAll(this.selectorValue);\r\n        el.replaceWith(...selectedContent);\r\n      } else {\r\n        el.replaceWith(...newEl.children);\r\n      }\r\n      // Trigger event to show block has loaded\r\n      self.dispatch(el, \"ajax:success\");\r\n    })\r\n    .catch(err => {\r\n      el.replaceWith(this._errorMessage);\r\n      self.dispatch(el, \"ajax:error\");\r\n    })\r\n    .finally(() => {\r\n      self.dispatch(el, \"ajax:complete\");\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AutoSubmitFormController extends BaseController {\r\n\r\n  initialize() {\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.el.querySelectorAll(\"input, select, textarea\").forEach(el => el.addEventListener(\"change\", this.submit));\r\n  }\r\n\r\n  disconnect() {\r\n    this.el.querySelectorAll(\"input, select, textarea\").forEach(el => el.removeEventListener(\"change\", this.submit));\r\n  }\r\n\r\n  private submit() {\r\n    // Trigger synthetic \"submit\" event on form\r\n    this.dispatch((this.el), \"submit\");\r\n  }\r\n}\r\n","export const method = (controller, methodName) => {\n    const method = controller[methodName];\n    if (typeof method == 'function') {\n        return method;\n    }\n    else {\n        return (...args) => { };\n    }\n};\nexport const composeEventName = (name, controller, eventPrefix) => {\n    let composedName = name;\n    if (eventPrefix === true) {\n        composedName = `${controller.identifier}:${name}`;\n    }\n    else if (typeof eventPrefix === 'string') {\n        composedName = `${eventPrefix}:${name}`;\n    }\n    return composedName;\n};\nexport const extendedEvent = (type, event, detail) => {\n    const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true };\n    if (event) {\n        Object.assign(detail, { originalEvent: event });\n    }\n    const customEvent = new CustomEvent(type, {\n        bubbles,\n        cancelable,\n        composed,\n        detail,\n    });\n    return customEvent;\n};\nexport function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n    const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n    const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n    const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n    return (vertInView && horInView);\n}\n//# sourceMappingURL=index.js.map","import { method, extendedEvent, composeEventName } from '../support/index';\nconst defaultOptions = {\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useIntersection = (controller, options = {}) => {\n    const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n    const callback = (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n            dispatchAppear(entry);\n        }\n        else if (controller.isVisible) {\n            dispatchDisappear(entry);\n        }\n    };\n    const dispatchAppear = (entry) => {\n        controller.isVisible = true;\n        method(controller, 'appear').call(controller, entry);\n        // emit a custom \"appear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('appear', controller, eventPrefix);\n            const appearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(appearEvent);\n        }\n    };\n    const dispatchDisappear = (entry) => {\n        controller.isVisible = false;\n        method(controller, 'disappear').call(controller, entry);\n        // emit a custom \"disappear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('disappear', controller, eventPrefix);\n            const disappearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(disappearEvent);\n        }\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observer = new IntersectionObserver(callback, options);\n    const observe = () => {\n        observer.observe(targetElement);\n    };\n    const unobserve = () => {\n        observer.unobserve(targetElement);\n    };\n    Object.assign(controller, {\n        isVisible: false,\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-intersection.js.map","import { composeEventName, extendedEvent, isElementInViewport } from '../support/index';\nconst defaultOptions = {\n    events: ['click', 'touchend'],\n    onlyVisible: true,\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useClickOutside = (controller, options = {}) => {\n    const { onlyVisible, dispatchEvent, events, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const onEvent = (event) => {\n        const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        if (targetElement.contains(event.target) || (!isElementInViewport(targetElement) && onlyVisible)) {\n            return;\n        }\n        // call the clickOutside method of the Stimulus controller\n        if (controller.clickOutside) {\n            controller.clickOutside(event);\n        }\n        // emit a custom event\n        if (dispatchEvent) {\n            const eventName = composeEventName('click:outside', controller, eventPrefix);\n            const clickOutsideEvent = extendedEvent(eventName, event, { controller });\n            targetElement.dispatchEvent(clickOutsideEvent);\n        }\n    };\n    const observe = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.addEventListener(event, onEvent, false);\n        });\n    };\n    const unobserve = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.removeEventListener(event, onEvent, false);\n        });\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-click-outside.js.map","const defaultOptions = {\n    debug: false,\n    logger: console\n};\nexport class StimulusUse {\n    constructor(controller, options = {}) {\n        var _a, _b, _c;\n        this.log = (functionName, args) => {\n            if (!this.debug)\n                return;\n            this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${functionName}`, 'color: #3B82F6', 'color: unset');\n            this.logger.log(Object.assign({ controllerId: this.controllerId }, args));\n            this.logger.groupEnd();\n        };\n        this.debug = (_b = (_a = options === null || options === void 0 ? void 0 : options.debug) !== null && _a !== void 0 ? _a : controller.application.stimulusUseDebug) !== null && _b !== void 0 ? _b : defaultOptions.debug;\n        this.logger = (_c = options === null || options === void 0 ? void 0 : options.logger) !== null && _c !== void 0 ? _c : defaultOptions.logger;\n        this.controller = controller;\n        this.controllerId = controller.element.id || controller.element.dataset.id;\n        // make copies of lifecycle functions\n        this.controllerInitialize = controller.initialize.bind(controller);\n        this.controllerConnect = controller.connect.bind(controller);\n        this.controllerDisconnect = controller.disconnect.bind(controller);\n    }\n}\n//# sourceMappingURL=stimulus_use.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseHover extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            this.targetElement.addEventListener('mouseenter', this.onEnter);\n            this.targetElement.addEventListener('mouseleave', this.onLeave);\n        };\n        this.unobserve = () => {\n            this.targetElement.removeEventListener('mouseenter', this.onEnter);\n            this.targetElement.removeEventListener('mouseleave', this.onLeave);\n        };\n        this.onEnter = () => {\n            method(this.controller, 'mouseEnter').call(this.controller);\n            this.log('mouseEnter', { hover: true });\n        };\n        this.onLeave = () => {\n            method(this.controller, 'mouseLeave').call(this.controller);\n            this.log('mouseLeave', { hover: false });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useHover = (controller, options = {}) => {\n    const observer = new UseHover(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-hover.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseMutation extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            try {\n                this.observer.observe(this.targetElement, this.options);\n            }\n            catch (error) {\n                this.controller.application.handleError(error, \"At a minimum, one of childList, attributes, and/or characterData must be true\", {});\n            }\n        };\n        this.unobserve = () => {\n            this.observer.disconnect();\n        };\n        this.mutation = (entries) => {\n            method(this.controller, 'mutate').call(this.controller, entries);\n            this.log('mutate', { entries });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.options = options;\n        this.observer = new MutationObserver(this.mutation);\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useMutation = (controller, options = {}) => {\n    const observer = new UseMutation(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-mutation.js.map","import { method } from '../support/index';\nexport const useWindowResize = (controller) => {\n    const callback = (event) => {\n        const { innerWidth, innerHeight } = window;\n        const payload = {\n            height: innerHeight || Infinity,\n            width: innerWidth || Infinity,\n            event\n        };\n        method(controller, 'windowResize').call(controller, payload);\n    };\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observe = () => {\n        window.addEventListener('resize', callback);\n        callback();\n    };\n    const unobserve = () => {\n        window.removeEventListener('resize', callback);\n    };\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-window-resize.js.map","import { Controller } from 'stimulus';\nclass DebounceController extends Controller {\n}\nDebounceController.debounces = [];\nconst defaultWait = 200;\nconst debounce = (fn, wait = defaultWait) => {\n    let timeoutId = null;\n    return function () {\n        const args = arguments;\n        const context = this;\n        const callback = () => fn.apply(context, args);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(callback, wait);\n    };\n};\nexport const useDebounce = (controller, options) => {\n    var _a;\n    const constructor = controller.constructor;\n    (_a = constructor.debounces) === null || _a === void 0 ? void 0 : _a.forEach((func) => {\n        if (typeof func === \"string\") {\n            controller[func] = debounce(controller[func], options === null || options === void 0 ? void 0 : options.wait);\n        }\n        if (typeof func === \"object\") {\n            const { name, wait } = func;\n            if (!name)\n                return;\n            controller[name] = debounce(controller[name], wait || (options === null || options === void 0 ? void 0 : options.wait));\n        }\n    });\n};\n//# sourceMappingURL=use-debounce.js.map","import {useWindowResize} from \"stimulus-use\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class AutosizeController extends BaseController {\r\n\r\n  initialize() {\r\n    this._handler = this._handler.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    useWindowResize(this);\r\n    requestAnimationFrame(() => {\r\n      this._handler();\r\n      let target = this.el as HTMLTextAreaElement;\r\n      target.style.resize = \"none\";\r\n      target.style.boxSizing = \"border-box\";\r\n      target.addEventListener(\"input\", this._handler);\r\n      target.addEventListener(\"focus\", this._handler);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.el.removeEventListener(\"input\", this._handler);\r\n    this.el.removeEventListener(\"focus\", this._handler);\r\n  }\r\n\r\n  windowResize() {\r\n    this._handler();\r\n  }\r\n\r\n  private _handler() {\r\n    this.autosize(this.el as HTMLTextAreaElement);\r\n  };\r\n\r\n  private autosize(element: HTMLTextAreaElement) {\r\n    let offset = element.offsetHeight - element.clientHeight;\r\n    element.style.height = \"auto\";\r\n    element.style.height = element.scrollHeight + offset + \"px\";\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class CharCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this._updateCharCount = this._updateCharCount.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this.inputTarget.addEventListener(\"input\", this._updateCharCount);\r\n      this._updateCharCount();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this._updateCharCount);\r\n  }\r\n\r\n  private _updateCharCount() {\r\n    let charCount = this.inputTarget.value.length;\r\n    this.outputTarget.innerText = charCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this._isValidCount(charCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../../utilities/base_controller';\r\n\r\nexport class CheckboxSelectAllController extends BaseController {\r\n  static targets = ['selectAll', 'checkbox'];\r\n\r\n  declare readonly hasSelectAllTarget: boolean;\r\n  declare readonly selectAllTarget: HTMLInputElement;\r\n  declare readonly checkboxTargets: HTMLInputElement[];\r\n\r\n  private get _checked() {\r\n    return this.checkboxTargets.filter(checkbox => checkbox.checked);\r\n  }\r\n\r\n  private get _unchecked() {\r\n    return this.checkboxTargets.filter(checkbox => !checkbox.checked);\r\n  }\r\n\r\n  initialize() {\r\n    this._toggle = this._toggle.bind(this);\r\n    this._refresh = this._refresh.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      if (!this.hasSelectAllTarget) {\r\n        return;\r\n      }\r\n\r\n      this.selectAllTarget.addEventListener('change', this._toggle);\r\n      this.checkboxTargets.forEach(checkbox => checkbox.addEventListener('change', this._refresh));\r\n      this._refresh();\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (!this.hasSelectAllTarget) {\r\n      return;\r\n    }\r\n\r\n    this.selectAllTarget.removeEventListener('change', this._toggle);\r\n    this.checkboxTargets.forEach((checkbox) => checkbox.removeEventListener('change', this._refresh));\r\n  }\r\n\r\n  private _toggle(event: Event) {\r\n    event.preventDefault();\r\n    let target = event.target as HTMLInputElement;\r\n    this.checkboxTargets.forEach((checkbox) => checkbox.checked = target.checked);\r\n  }\r\n\r\n  private _refresh() {\r\n    const checkboxesCount = this.checkboxTargets.length;\r\n    const checkboxesCheckedCount = this._checked.length;\r\n\r\n    this.selectAllTarget.checked = checkboxesCheckedCount > 0;\r\n    this.selectAllTarget.indeterminate = checkboxesCheckedCount > 0 && checkboxesCheckedCount < checkboxesCount;\r\n  }\r\n}","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class ClipboardController extends BaseController {\r\n\r\n  static targets = [\"source\", \"button\", \"copy\", \"fallback\"];\r\n  static values = {removeUnused: Boolean};\r\n\r\n  declare readonly sourceTarget: HTMLElement;\r\n  declare readonly copyTarget: HTMLElement;\r\n  declare readonly hasCopyTarget: boolean;\r\n  declare readonly fallbackTarget: HTMLElement;\r\n  declare readonly hasFallbackTarget: boolean;\r\n\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  declare readonly removeUnusedValue: boolean;\r\n\r\n  _supported = false;\r\n\r\n  connect() {\r\n    this._supported = document.queryCommandSupported(\"copy\");\r\n\r\n    if (this.hasRemoveUnusedValue && this.removeUnusedValue) {\r\n      if (this._supported && this.hasFallbackTarget) {\r\n        this.fallbackTarget.remove();\r\n      } else if (this.hasCopyTarget) {\r\n        this.copyTarget.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  select(event: MouseEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n  }\r\n\r\n  copy(event: ClipboardEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n    if (this._supported) {\r\n      document.execCommand(\"copy\");\r\n    }\r\n  }\r\n}\r\n","export function isHTMLLinkElement(element: Element): element is HTMLLinkElement {\r\n  return element.nodeName == \"LINK\";\r\n}\r\n\r\nexport function isHTMLAnchorElement(element: Element): element is HTMLAnchorElement {\r\n  return element.nodeName == \"A\";\r\n}\r\n\r\nexport function isHTMLFormElement(element: Element): element is HTMLFormElement {\r\n  return element.nodeName == \"FORM\";\r\n}\r\n\r\nexport function isHTMLInputElement(element: Element): element is HTMLInputElement {\r\n  return element.nodeName == \"INPUT\";\r\n}\r\n\r\nexport function isHTMLButtonElement(element: Element): element is HTMLButtonElement {\r\n  return element.nodeName == \"BUTTON\";\r\n}\r\n\r\nexport function isHTMLSelectElement(element: Element): element is HTMLSelectElement {\r\n  return element.nodeName == \"SELECT\";\r\n}\r\n\r\nexport function isHTMLImageElement(element: Element): element is HTMLImageElement {\r\n  return element.nodeName == \"IMG\";\r\n}\r\n\r\nexport function isElementCheckable(element: Element): element is HTMLInputElement & { checked: boolean } {\r\n  return isHTMLInputElement(element) && (element.type === \"radio\" || element.type === \"checkbox\");\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {isHTMLAnchorElement, isHTMLFormElement} from \"../utilities/elements\";\r\n\r\nexport class ConfirmController extends BaseController {\r\n\r\n  static values = {\r\n    message: String,\r\n  };\r\n\r\n  declare readonly messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this.messageValue : 'Are you sure?';\r\n  }\r\n\r\n  initialize() {\r\n    this.confirm = this.confirm.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      let element = this.el;\r\n      if (isHTMLFormElement(element)) {\r\n        element.addEventListener(\"submit\", this.confirm);\r\n      } else if (isHTMLAnchorElement(element)) {\r\n        element.addEventListener(\"click\", this.confirm);\r\n      } else {\r\n        throw new Error(\"Can't handle confirmation on attached element\");\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el;\r\n    if (isHTMLFormElement(element)) {\r\n      element.removeEventListener(\"submit\", this.confirm);\r\n    } else if (isHTMLAnchorElement(element)) {\r\n      element.removeEventListener(\"click\", this.confirm);\r\n    }\r\n  }\r\n\r\n  confirm(event: Event) {\r\n    if (!(window.confirm(this._message))) {\r\n      event.preventDefault();\r\n      this.dispatch(this.el, \"confirm:cancelled\");\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class ConfirmNavigationController extends BaseController {\r\n\r\n  static values = {_message: String};\r\n\r\n  declare readonly _messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this._messageValue : \"Do you want to leave this page? Changes you made may not be saved\";\r\n  }\r\n\r\n  initialize() {\r\n    this.allowSubmit = this.allowSubmit.bind(this);\r\n    this.confirmNavigation = this.confirmNavigation.bind(this);\r\n    this.confirmTurboNavigation = this.confirmTurboNavigation.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.onbeforeunload = () => this._message;\r\n    window.addEventListener(\"popstate\", this.confirmNavigation);\r\n    window.addEventListener(\"submit\", this.allowSubmit);\r\n    window.addEventListener(\"turbolinks:before-visit\", this.confirmTurboNavigation);\r\n    window.addEventListener(\"turbo:before-visit\", this.confirmTurboNavigation);\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"popstate\", this.confirmNavigation);\r\n    window.onbeforeunload = null;\r\n    window.removeEventListener(\"submit\", this.allowSubmit);\r\n    window.removeEventListener(\"turbolinks:before-visit\", this.confirmTurboNavigation);\r\n    window.removeEventListener(\"turbo:before-visit\", this.confirmTurboNavigation);\r\n  }\r\n\r\n  allowSubmit(_event: Event) {\r\n    window.removeEventListener(\"popstate\", this.confirmNavigation);\r\n    window.onbeforeunload = null;\r\n  }\r\n\r\n  confirmNavigation(_event: PopStateEvent) {\r\n    return false;\r\n  }\r\n\r\n  confirmTurboNavigation(event: Event) {\r\n    if (!confirm(this._message)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import {Duration, intervalToDuration, isPast} from \"date-fns\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class CountdownController extends BaseController {\r\n\r\n  static values = {deadline: String, removeUnused: Boolean};\r\n  static targets = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\r\n  static classes = [\"countingDown\", \"ended\"];\r\n\r\n  // Values\r\n  declare readonly deadlineValue: string;\r\n  declare readonly removeUnusedValue: boolean;\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  // Targets\r\n  declare readonly hasYearsTarget: boolean;\r\n  declare readonly yearsTarget: HTMLElement;\r\n  declare readonly hasMonthsTarget: boolean;\r\n  declare readonly monthsTarget: HTMLElement;\r\n  declare readonly hasDaysTarget: boolean;\r\n  declare readonly daysTarget: HTMLElement;\r\n  declare readonly hasHoursTarget: boolean;\r\n  declare readonly hoursTarget: HTMLElement;\r\n  declare readonly hasMinutesTarget: boolean;\r\n  declare readonly minutesTarget: HTMLElement;\r\n  declare readonly hasSecondsTarget: boolean;\r\n  declare readonly secondsTarget: HTMLElement;\r\n  // Classes\r\n  declare readonly countingDownClass: string;\r\n  declare readonly hasCountingDownClass: boolean;\r\n  declare readonly endedClass: string;\r\n  declare readonly hasEndedClass: boolean;\r\n  // Instance Data\r\n  _interval: null | ReturnType<typeof window.setInterval> = null;\r\n\r\n  get _removeUnused(): boolean {\r\n    return this.hasRemoveUnusedValue ? this.removeUnusedValue : false;\r\n  }\r\n\r\n  get endedClasses(): string[] {\r\n    return this.endedClass.split(' ');\r\n  }\r\n\r\n  get countingDownClasses(): string[] {\r\n    return this.countingDownClass.split(' ');\r\n  }\r\n\r\n  get _deadlineDate() {\r\n    return new Date(this.deadlineValue);\r\n  }\r\n\r\n  connect() {\r\n    this._interval = setInterval(this._tick.bind(this), 1000);\r\n    if (this.hasCountingDownClass) {\r\n      this.el.classList.add(...this.countingDownClasses);\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this._clearTick();\r\n    if (this.hasCountingDownClass) {\r\n      this.el.classList.remove(...this.countingDownClasses);\r\n    }\r\n    if (this.hasEndedClass) {\r\n      this.el.classList.remove(...this.endedClasses);\r\n    }\r\n  }\r\n\r\n  deadlineValueChanged() {\r\n    // Countdown had previously ended, restart ticking. Updating mid-tick will just work.\r\n    if (this._interval == null) {\r\n      this._interval = setInterval(this._tick.bind(this), 1000);\r\n    }\r\n  }\r\n\r\n  _tick() {\r\n    try {\r\n      const now = new Date();\r\n      let distance: Duration = {};\r\n\r\n      if (isPast(this._deadlineDate)) {\r\n        distance = {years: 0, months: 0, days: 0, hours: 0, minutes: 0, seconds: 0};\r\n        // Countdown has ended, stop ticking\r\n        this._clearTick();\r\n        if (this.hasCountingDownClass) {\r\n          this.el.classList.remove(...this.countingDownClasses);\r\n        }\r\n        if (this.hasEndedClass) {\r\n          this.el.classList.add(...this.endedClasses);\r\n        }\r\n        this.dispatch(this.el, \"countdown:ended\");\r\n      } else {\r\n        distance = intervalToDuration({start: this._deadlineDate, end: now});\r\n      }\r\n\r\n      if (this.hasYearsTarget) {\r\n        this._updateTarget(this.yearsTarget, this._years(distance));\r\n      }\r\n      if (this.hasMonthsTarget) {\r\n        this._updateTarget(this.monthsTarget, this._months(distance));\r\n      }\r\n      if (this.hasDaysTarget) {\r\n        this._updateTarget(this.daysTarget, this._days(distance));\r\n      }\r\n      if (this.hasHoursTarget) {\r\n        this._updateTarget(this.hoursTarget, this._hours(distance));\r\n      }\r\n      if (this.hasMinutesTarget) {\r\n        this._updateTarget(this.minutesTarget, this._minutes(distance));\r\n      }\r\n      if (this.hasSecondsTarget) {\r\n        this._updateTarget(this.secondsTarget, this._seconds(distance));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      this._clearTick();\r\n    }\r\n  }\r\n\r\n  _clearTick() {\r\n    if (this._interval) {\r\n      clearInterval(this._interval);\r\n      this._interval = null;\r\n    }\r\n  }\r\n\r\n  _updateTarget(target: HTMLElement, value: number) {\r\n    this._removeTargetIfUnused(target, value);\r\n    target.innerHTML = value.toString();\r\n  }\r\n\r\n  _removeTargetIfUnused(target: HTMLElement, value: number) {\r\n    if (this._removeUnused) {\r\n      if (value === 0 && target.dataset.unused) {\r\n        if (Number.parseInt(target.dataset.unused) > Date.now() + 1500) {\r\n          target.remove();\r\n        }\r\n      } else if (value == 0) {\r\n        target.dataset.unused = Date.now().toString();\r\n      } else {\r\n        target.dataset.unused = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  _years(duration: Duration): number {\r\n    return duration.years || 0;\r\n  }\r\n\r\n  _months(duration: Duration): number {\r\n    return duration.months || 0;\r\n  }\r\n\r\n  _days(duration: Duration): number {\r\n    return duration.days || 0;\r\n  }\r\n\r\n  _hours(duration: Duration): number {\r\n    return duration.hours || 0;\r\n  }\r\n\r\n  _minutes(duration: Duration): number {\r\n    return duration.minutes || 0;\r\n  }\r\n\r\n  _seconds(duration: Duration): number {\r\n    return duration.seconds || 0;\r\n  }\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class DebugController extends BaseController {\r\n\r\n  static targets = [\"test\"];\r\n  declare testTargets: HTMLElement[];\r\n\r\n  connect() {\r\n    console.log(\"Debug Controller\", this, this.testTargets);\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {isElementCheckable, isHTMLSelectElement} from \"../../utilities/elements\";\r\n\r\nexport class DetectDirtyController extends BaseController {\r\n\r\n  get _cacheAttrName(): string {\r\n    return 'detect-dirty-load-value';\r\n  }\r\n\r\n  initialize() {\r\n    this._checkDirty = this._checkDirty.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    this._cacheLoadValues();\r\n    this._checkDirty();\r\n    element.addEventListener(\"input\", this._checkDirty);\r\n    element.addEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this._checkDirty);\r\n    element.removeEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    this._restoreElementFromLoadValue();\r\n  }\r\n\r\n  private _getElementValue(): boolean | string {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    return isElementCheckable(element) ? element.checked : element.value;\r\n  }\r\n\r\n  private _getElementLoadValue(): boolean | string {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    let value = element.getAttribute(this._cacheAttrName);\r\n    if (isElementCheckable(element)) {\r\n      return value == null ? element.defaultChecked : value == \"true\";\r\n    } else if (value !== null) {\r\n      return value;\r\n    }\r\n\r\n    if (isHTMLSelectElement(element)) {\r\n      let options = Array.from(element.options);\r\n      options.forEach((option) => {\r\n        if (option.defaultSelected) {\r\n          element.value = option.value;\r\n          return option.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return value!;\r\n  }\r\n\r\n  private _elementHasCachedLoadValue(): boolean {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    return element.hasAttribute(this._cacheAttrName);\r\n  }\r\n\r\n  private _checkDirty() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this._isElementDirty()) {\r\n      element.setAttribute('data-dirty', \"true\");\r\n    } else {\r\n      element.removeAttribute('data-dirty');\r\n    }\r\n  }\r\n\r\n  private _isElementDirty(): boolean {\r\n    return this._getElementValue() !== this._getElementLoadValue();\r\n  }\r\n\r\n  private _restoreElementFromLoadValue() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    let cacheValue = element.getAttribute(this._cacheAttrName);\r\n\r\n    if (isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n      element.checked = cacheValue == null ? element.defaultChecked : cacheValue == \"true\";\r\n    } else if (isHTMLSelectElement(element)) {\r\n      if (cacheValue == null) {\r\n        let options = Array.from(element.options);\r\n        options.forEach((option) => {\r\n          if (option.defaultSelected) {\r\n            element.value = option.value;\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        element.value = cacheValue;\r\n      }\r\n\r\n    } else {\r\n      element.value = cacheValue == null ? element.defaultValue : cacheValue;\r\n    }\r\n  }\r\n\r\n  private _cacheLoadValues(): void {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (!this._elementHasCachedLoadValue() && isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n    } else {\r\n      element.setAttribute(this._cacheAttrName, element.value.toString());\r\n    }\r\n  }\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {isElementCheckable, isHTMLSelectElement} from \"../../utilities/elements\";\r\n\r\nexport class DetectDirtyFormController extends BaseController {\r\n\r\n  get _formElements(): Array<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement> {\r\n    return Array.from(this.el.querySelectorAll('input, select, textarea'));\r\n  }\r\n\r\n  get _cacheAttrName(): string {\r\n    return 'detect-dirty-load-value';\r\n  }\r\n\r\n  initialize() {\r\n    this._checkDirty = this._checkDirty.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    this._cacheLoadValues();\r\n    this._checkDirty();\r\n    element.addEventListener(\"input\", this._checkDirty);\r\n    element.addEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.el as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this._checkDirty);\r\n    element.removeEventListener(\"change\", this._checkDirty);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    this._formElements.forEach(element => this._restoreElementFromLoadValue(element));\r\n  }\r\n\r\n  private _getElementValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean | string {\r\n    return isElementCheckable(element) ? element.checked : element.value;\r\n  }\r\n\r\n  private _getElementLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean | string {\r\n    let value = element.getAttribute(this._cacheAttrName);\r\n    if (isElementCheckable(element)) {\r\n      return value == null ? element.defaultChecked : value == \"true\";\r\n    } else if (value !== null) {\r\n      return value;\r\n    }\r\n\r\n    if (isHTMLSelectElement(element)) {\r\n      let options = Array.from(element.options);\r\n      options.forEach((option) => {\r\n        if (option.defaultSelected) {\r\n          element.value = option.value;\r\n          return option.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    return value!;\r\n  }\r\n\r\n  private _elementHasCachedLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {\r\n    return element.hasAttribute(this._cacheAttrName);\r\n  }\r\n\r\n  private _checkElementDirty(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    if (this._isElementDirty(element)) {\r\n      element.setAttribute('data-dirty', \"true\");\r\n    } else {\r\n      element.removeAttribute('data-dirty');\r\n    }\r\n  }\r\n\r\n  private _isElementDirty(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {\r\n    return this._getElementValue(element) !== this._getElementLoadValue(element);\r\n  }\r\n\r\n  private _cacheElementLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    if (!this._elementHasCachedLoadValue(element) && isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n    } else {\r\n      element.setAttribute(this._cacheAttrName, element.value.toString());\r\n    }\r\n  }\r\n\r\n  private _restoreElementFromLoadValue(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {\r\n    let cacheValue = element.getAttribute(this._cacheAttrName);\r\n\r\n    if (isElementCheckable(element)) {\r\n      element.setAttribute(this._cacheAttrName, element.checked.toString());\r\n      element.checked = cacheValue == null ? element.defaultChecked : cacheValue == \"true\";\r\n    } else if (isHTMLSelectElement(element)) {\r\n      if (cacheValue == null) {\r\n        let options = Array.from(element.options);\r\n        options.forEach((option) => {\r\n          if (option.defaultSelected) {\r\n            element.value = option.value;\r\n            return;\r\n          }\r\n        });\r\n      } else {\r\n        element.value = cacheValue;\r\n      }\r\n\r\n    } else {\r\n      element.value = cacheValue == null ? element.defaultValue : cacheValue;\r\n    }\r\n  }\r\n\r\n  private _cacheLoadValues(): void {\r\n    this._formElements.forEach(el => this._cacheElementLoadValue(el));\r\n  }\r\n\r\n  private _checkDirty(): void {\r\n    this._formElements.forEach(el => this._checkElementDirty(el));\r\n    if (this._formElements.some(el => isDirty(el))) {\r\n      this.el.setAttribute(\"data-dirty\", \"true\");\r\n    } else {\r\n      this.el.removeAttribute(\"data-dirty\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class DisableInputsController extends BaseController {\r\n\r\n  static targets = [\"disabler\", \"disable\"];\r\n\r\n  static values = {\r\n    clear: Boolean,\r\n  };\r\n\r\n  declare readonly hasDisablerTarget: boolean;\r\n  declare readonly disablerTarget: HTMLInputElement;\r\n  declare readonly disableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n  declare readonly clearValue: boolean;\r\n  declare readonly hasClearValue: boolean;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasDisablerTarget && this.disablerTarget.checked) {\r\n      this.disableInputs();\r\n    } else {\r\n      this.enableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    let shouldClear = this.hasClearValue && this.clearValue;\r\n    this.disableTargets.forEach((el, _) => {\r\n      if (shouldClear) {\r\n        el.value = \"\";\r\n      }\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {isHTMLAnchorElement, isHTMLButtonElement, isHTMLInputElement} from \"../utilities/elements\";\r\n\r\nexport class DisableWithController extends BaseController {\r\n\r\n  static values = {\r\n    message: String,\r\n    timeout: Number,\r\n  };\r\n\r\n  declare readonly messageValue: string;\r\n  declare readonly hasMessageValue: boolean;\r\n  declare readonly timeoutValue: number;\r\n  declare readonly hasTimeoutValue: boolean;\r\n\r\n  _cacheText?: string;\r\n  _timeoutHandle?: ReturnType<typeof window.setTimeout>;\r\n\r\n  get _message(): string {\r\n    return this.hasMessageValue ? this.messageValue : 'Submitting...';\r\n  }\r\n\r\n  get _timeout(): number {\r\n    return this.hasTimeoutValue ? this.timeoutValue : 1000;\r\n  }\r\n\r\n  initialize() {\r\n    this.enable = this.enable.bind(this);\r\n    this.disable = this.disable.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this.el.addEventListener(\"click\", this.disable);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  disable(event?: Event) {\r\n    let element = this.el;\r\n\r\n    if (this._isDisabled(element)) {\r\n      event?.preventDefault();\r\n      event?.stopImmediatePropagation();\r\n    } else {\r\n      this._cacheText = this._getElText(element);\r\n      this._setElText(element, this._message);\r\n      this._disable(element);\r\n      setTimeout(this.enable, this._timeout);\r\n    }\r\n  }\r\n\r\n  enable(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el;\r\n    if (this._isDisabled(element)) {\r\n      this._setElText(element, this._cacheText!);\r\n      this._enable(element);\r\n    }\r\n  }\r\n\r\n  _isDisabled(el: HTMLElement): boolean {\r\n    if ((isHTMLInputElement(el) && el.type == \"submit\") || isHTMLButtonElement(el)) {\r\n      return el.disabled;\r\n    } else {\r\n      return el.dataset.disabled == \"true\";\r\n    }\r\n  }\r\n\r\n  _getElText(el: HTMLElement): string {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\") {\r\n      return el.value;\r\n    } else {\r\n      return el.innerText;\r\n    }\r\n  }\r\n\r\n  _setElText(el: HTMLElement, str: string) {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\") {\r\n      el.value = str;\r\n    } else if (isHTMLButtonElement(el) || isHTMLAnchorElement(el)) {\r\n      el.innerText = str;\r\n    }\r\n  }\r\n\r\n  _disable(el: HTMLElement) {\r\n    if ((isHTMLInputElement(el) && el.type == \"submit\") || isHTMLButtonElement(el)) {\r\n      el.disabled = true;\r\n    } else {\r\n      el.dataset.disabled = \"true\";\r\n    }\r\n  }\r\n\r\n  _enable(el: HTMLElement) {\r\n    if (isHTMLInputElement(el) && el.type == \"submit\" || isHTMLButtonElement(el)) {\r\n      el.disabled = false;\r\n    } else {\r\n      el.dataset.disabled = undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class DismissableController extends BaseController {\r\n\r\n  dismiss() {\r\n    this.el.remove();\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../utilities/base_controller';\r\nimport {get as _get, set as _set} from \"lodash-es\";\r\n\r\nexport class ElementSaveController extends BaseController {\r\n\r\n  static targets = [\r\n    \"element\",\r\n  ];\r\n  static values = {\r\n    id: String,\r\n    attributes: String,\r\n    restoreOnLoad: Boolean,\r\n  };\r\n  declare readonly hasElementTarget: boolean;\r\n  declare readonly elementTarget: HTMLElement;\r\n  declare readonly elementTargets: HTMLElement[];\r\n  declare readonly idValue: string;\r\n  declare readonly attributesValue: string;\r\n  declare readonly hasIdValue: boolean;\r\n  declare readonly restoreOnLoadValue: boolean;\r\n  declare readonly hasRestoreOnLoadValue: boolean;\r\n\r\n  get _id() {\r\n    if (this.hasIdValue) {\r\n      return this.idValue;\r\n    }\r\n    let elementID = this.el.id;\r\n\r\n    if (elementID !== \"\") {\r\n      return elementID;\r\n    } else {\r\n      throw new Error(`No ID value to uniquely identify this element. Please either specify data-${this.identifier}-id-value or give this element an 'id' attribute. `);\r\n    }\r\n  }\r\n\r\n  get _uniqueIdentifier() {\r\n    const url = location.href;\r\n    return `${url} ${this._id}`;\r\n  }\r\n\r\n  get _restoreOnLoad() {\r\n    return this.hasRestoreOnLoadValue ? this.restoreOnLoadValue : true;\r\n  }\r\n\r\n  get _element(): HTMLElement {\r\n    return this.hasElementTarget ? this.elementTarget : this.el;\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      if (this._restoreOnLoad) {\r\n        this.restore();\r\n      }\r\n    });\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    localStorage.removeItem(this._uniqueIdentifier);\r\n    this.dispatch(this._element, `element-save:cleared`);\r\n  }\r\n\r\n  save(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let element = this._element;\r\n    let attributes = this.attributesValue.split(\" \");\r\n    let data: { [idx: string]: any } = {};\r\n    attributes.forEach((attr: string) => data[attr] = _get(element, attr));\r\n    localStorage.setItem(this._uniqueIdentifier, JSON.stringify(data));\r\n    this.dispatch(element, `element-save:save:success`);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let element = this._element;\r\n    if (localStorage.getItem(this._uniqueIdentifier)) {\r\n      const savedData = JSON.parse(localStorage.getItem(this._uniqueIdentifier)!); // get and parse the saved data from localStorage\r\n      Object.keys(savedData).forEach((attr: string) => {\r\n        _set(element as HTMLElement, attr, savedData[attr]);\r\n      });\r\n      this.dispatch(element, `element-save:restore:success`);\r\n    } else {\r\n      this.dispatch(element, `element-save:restore:empty`);\r\n    }\r\n  }\r\n\r\n}\r\n","import {useMutation} from \"stimulus-use\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class EmptyDomController extends BaseController {\r\n\r\n  static classes = [\"empty\", \"notEmpty\"];\r\n  static values = {scopeSelector: String};\r\n\r\n  declare hasEmptyClass: boolean;\r\n  declare emptyClass: string;\r\n  declare hasNotEmptyClass: boolean;\r\n  declare notEmptyClass: string;\r\n\r\n  declare hasScopeSelectorValue: boolean;\r\n  declare scopeSelectorValue: string;\r\n\r\n  get emptyClasses(): string[] {\r\n    return this.emptyClass.split(\" \");\r\n  }\r\n\r\n  get notEmptyClasses(): string[] {\r\n    return this.notEmptyClass.split(\" \");\r\n  }\r\n\r\n  get _children(): Element[] {\r\n    let element = this.el;\r\n    if (this.hasScopeSelectorValue) {\r\n      return Array.from(element.querySelectorAll(this.scopeSelectorValue));\r\n    } else {\r\n      return Array.from(element.children);\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    useMutation(this, {element: this.el, childList: true});\r\n    this.checkEmpty();\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    this.checkEmpty();\r\n  }\r\n\r\n  checkEmpty() {\r\n    let element = this.el;\r\n    let children = this._children;\r\n    if (children.length === 0) {\r\n      this._removeNotEmptyClasses();\r\n      this._addEmptyClasses();\r\n      this.dispatch(element as HTMLElement, \"dom:empty\");\r\n    } else {\r\n      this._addNotEmptyClasses();\r\n      this._removeEmptyClasses();\r\n      this.dispatch(element as HTMLElement, \"dom:not-empty\", {detail: {count: children.length}});\r\n    }\r\n  }\r\n\r\n  private _removeEmptyClasses() {\r\n    if (this.hasEmptyClass) {\r\n      this.el.classList.remove(...this.emptyClasses);\r\n    }\r\n  }\r\n\r\n  private _addNotEmptyClasses() {\r\n    if (this.hasNotEmptyClass) {\r\n      this.el.classList.add(...this.notEmptyClasses);\r\n    }\r\n  }\r\n\r\n  private _addEmptyClasses() {\r\n    if (this.hasEmptyClass) {\r\n      this.el.classList.add(...this.emptyClasses);\r\n    }\r\n  }\r\n\r\n  private _removeNotEmptyClasses() {\r\n    if (this.hasNotEmptyClass) {\r\n      this.el.classList.remove(...this.notEmptyClasses);\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class EnableInputsController extends BaseController {\r\n\r\n  static targets = [\"enabler\", \"enable\"];\r\n\r\n  static values = {\r\n    clear: Boolean,\r\n  };\r\n\r\n  declare readonly hasEnablerTarget: boolean;\r\n  declare readonly enablerTarget: HTMLInputElement;\r\n  declare readonly enableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n  declare readonly clearValue: boolean;\r\n  declare readonly hasClearValue: boolean;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasEnablerTarget && this.enablerTarget.checked) {\r\n      this.enableInputs();\r\n    } else {\r\n      this.disableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    let shouldClear = this.hasClearValue && this.clearValue;\r\n    this.enableTargets.forEach((el, _) => {\r\n      if (shouldClear) {\r\n        el.value = \"\";\r\n      }\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class FallbackImageController extends BaseController {\r\n\r\n  static values = {placeholder: String};\r\n\r\n  declare readonly placeholderValue: string;\r\n  declare readonly hasPlaceholderValue: boolean;\r\n\r\n  connect() {\r\n    let element = this.el as HTMLImageElement;\r\n\r\n    element.onerror = () => {\r\n      if (this.hasPlaceholderValue) {\r\n        element.src = this.placeholderValue;\r\n      } else {\r\n        element.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {BaseController} from '../../utilities/base_controller';\r\n\r\nexport class FormRcController extends BaseController {\r\n\r\n  static targets = [\"form\"];\r\n\r\n  declare readonly formTarget: HTMLFormElement;\r\n\r\n  submit(event?: Event) {\r\n    event?.preventDefault();\r\n    this.dispatch(this.formTarget, \"submit\");\r\n    this.formTarget.submit();\r\n  }\r\n\r\n  reset(event?: Event) {\r\n    event?.preventDefault();\r\n    this.dispatch(this.formTarget, \"reset\");\r\n    this.formTarget.reset();\r\n  }\r\n\r\n}","import {BaseController} from '../../utilities/base_controller';\r\nimport {isHTMLFormElement, isHTMLInputElement} from \"../../utilities/elements\";\r\n\r\ninterface FormSavePayload {\r\n  [idx: string]: {\r\n    [idx: string]: string | boolean\r\n  }\r\n}\r\n\r\nexport class FormSaveController extends BaseController {\r\n\r\n  static values = {\r\n    id: String,\r\n    restoreOnLoad: Boolean,\r\n    clearOnSubmit: Boolean,\r\n  };\r\n\r\n  declare readonly idValue: string;\r\n  declare readonly hasIdValue: boolean;\r\n  declare readonly restoreOnLoadValue: boolean;\r\n  declare readonly hasRestoreOnLoadValue: boolean;\r\n  declare readonly clearOnSubmitValue: boolean;\r\n  declare readonly hasClearOnSubmitValue: boolean;\r\n\r\n  get _formID() {\r\n    if (this.hasIdValue) {\r\n      return this.idValue;\r\n    }\r\n    let elementID = (this.el as HTMLFormElement).id;\r\n\r\n    if (elementID !== \"\") {\r\n      return elementID;\r\n    } else {\r\n      throw new Error(`No ID value to uniquely identify this form. Please either specify data-${this.identifier}-id-value or give this form an 'id' attribute. `);\r\n    }\r\n  }\r\n\r\n  get _formIdentifier() {\r\n    const url = location.href;\r\n    return `${url} ${this._formID}`;\r\n  }\r\n\r\n  get _formElements() {\r\n    return (this.el as HTMLFormElement).elements;\r\n  }\r\n\r\n  get _formData(): FormSavePayload {\r\n    let data: FormSavePayload = {[this._formIdentifier]: {}};\r\n    for (const element of this._formElements) {\r\n      let el = element as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n      if (el.name.length > 0) {\r\n        if (isHTMLInputElement(el) && el.type == \"checkbox\") {\r\n          data[this._formIdentifier][el.name] = el.checked;\r\n        } else if (isHTMLInputElement(el) && el.type == \"radio\") {\r\n          if (el.checked) {\r\n            data[this._formIdentifier][el.name] = el.value;\r\n          }\r\n        } else {\r\n          data[this._formIdentifier][el.name] = el.value;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  get _restoreOnLoad() {\r\n    return this.hasRestoreOnLoadValue ? this.restoreOnLoadValue : true;\r\n  }\r\n\r\n  get _clearOnSubmit() {\r\n    return this.hasClearOnSubmitValue ? this.clearOnSubmitValue : true;\r\n  }\r\n\r\n  initialize() {\r\n    this._clear = this._clear.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      let element = this.el;\r\n      if (!isHTMLFormElement(element)) {\r\n        throw new Error('Expected controller to be mounted on a form element.');\r\n      }\r\n\r\n      if (this._restoreOnLoad) {\r\n        this.restore();\r\n      }\r\n      if (this._clearOnSubmit) {\r\n        this.el.addEventListener('submit', this._clear);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._clearOnSubmit) {\r\n      this.el.removeEventListener('submit', this._clear);\r\n    }\r\n  }\r\n\r\n  _clear() {\r\n    localStorage.removeItem(this._formIdentifier);\r\n    this.dispatch(this.el, `form-save:cleared`);\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    event?.preventDefault();\r\n    this._clear();\r\n  }\r\n\r\n  save(event: Event) {\r\n    event.preventDefault();\r\n    let data = this._formData;\r\n    localStorage.setItem(this._formIdentifier, JSON.stringify(data[this._formIdentifier]));\r\n    this.dispatch(this.el, `form-save:save:success`);\r\n  }\r\n\r\n  restore(event?: Event) {\r\n    event?.preventDefault();\r\n    if (localStorage.getItem(this._formIdentifier)) {\r\n      const savedData = JSON.parse(localStorage.getItem(this._formIdentifier)!); // get and parse the saved data from localStorage\r\n      for (const element of this._formElements) {\r\n        let el = element as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n        if (el.name in savedData) {\r\n          if (isHTMLInputElement(el) && el.type == \"checkbox\") {\r\n            el.checked = savedData[el.name];\r\n          } else if (isHTMLInputElement(el) && el.type == \"radio\") {\r\n            if (el.value == savedData[el.name]) {\r\n              el.checked = true;\r\n            }\r\n          } else {\r\n            el.value = savedData[el.name];\r\n          }\r\n        }\r\n      }\r\n      this.dispatch(this.el, `form-save:restore:success`);\r\n    } else {\r\n      this.dispatch(this.el, `form-save:restore:empty`);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {useIntersection} from \"stimulus-use\";\r\n\r\nexport class IntersectionController extends BaseController {\r\n\r\n  static values = {threshold: String};\r\n\r\n  declare readonly isVisible: boolean;\r\n  declare readonly thresholdValue: string;\r\n  declare readonly hasThresholdValue: boolean;\r\n\r\n  get _threshold(): number[] {\r\n    if (this.hasThresholdValue) {\r\n      return this.thresholdValue.split(',').map(val => Number.parseFloat(val.trim())).filter(val => val >= 0 && val <= 1);\r\n    } else {\r\n      return [0, 1];\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    useIntersection(this, {\r\n      threshold: this._threshold,\r\n      element: this.el,\r\n    });\r\n  }\r\n\r\n  appear(entry: IntersectionObserverEntry) {\r\n    this.dispatch(\r\n      this.el,\r\n      \"intersection:appear\",\r\n      {\r\n        detail: {\r\n          element: this.el,\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  disappear(entry: IntersectionObserverEntry) {\r\n    this.dispatch(\r\n      this.el,\r\n      \"intersection:disappear\",\r\n      {\r\n        detail: {\r\n          element: this.el,\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class IntervalController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  declare readonly hasSecondsValue: boolean;\r\n  _intervalHandle: null | number = null;\r\n\r\n  initialize() {\r\n    this._interval = this._interval.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    if (!this.hasSecondsValue) {\r\n      throw new Error('Expected `secondsValue` to be present')\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this._intervalHandle = window.setInterval(this._interval, this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._intervalHandle) {\r\n      window.clearInterval(this._intervalHandle);\r\n    }\r\n  }\r\n\r\n  _interval() {\r\n    this.dispatch(this.el, \"interval:action\");\r\n  }\r\n\r\n}","import {useIntersection} from \"stimulus-use\";\r\nimport {AsyncBlockController} from \"./async_block_controller\";\r\n\r\nexport class LazyBlockController extends AsyncBlockController {\r\n\r\n  declare observe: () => void;\r\n  declare unobserve: () => void;\r\n  declare isVisible: boolean;\r\n  declare disappear: () => void;\r\n\r\n  connect() {\r\n    let element = this.el;\r\n\r\n    if (\"IntersectionObserver\" in window) {\r\n      [this.observe, this.unobserve] = useIntersection(this, {element, threshold: 0.3});\r\n    } else {\r\n      // Client doesn't support intersection observer, fallback to pre-loading\r\n      this.loadContent();\r\n    }\r\n  }\r\n\r\n  appear(entry: IntersectionObserverEntry) {\r\n    if (entry.target === this.el && entry.isIntersecting) {\r\n      this.loadContent();\r\n      if (this.unobserve) {\r\n        this.unobserve();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","const smoothSupported = \"scrollBehavior\" in document.documentElement.style;\r\nlet smoothPolyfilled: boolean;\r\n\r\nexport async function scrollToElement(element: Element, {behavior = \"smooth\", block = \"start\", inline = \"nearest\"}: ScrollIntoViewOptions = {}) {\r\n  if (behavior == \"smooth\" && !smoothSupported) {\r\n    await polyfillSmooth();\r\n  }\r\n  element.scrollIntoView({behavior, block, inline});\r\n}\r\n\r\nasync function polyfillSmooth() {\r\n  const {polyfill} = await import(/* webpackChunkName: \"smoothscroll-polyfill\" */ \"smoothscroll-polyfill\");\r\n  if (smoothPolyfilled) {\r\n    return;\r\n  }\r\n  smoothPolyfilled = true;\r\n  polyfill();\r\n}\r\n\r\nexport function getScrollParent(node: HTMLElement | null): HTMLElement | null {\r\n  if (!node) {\r\n    return null;\r\n  }\r\n  const overflowY = getComputedStyle(node).overflowY;\r\n  const isScrollable = overflowY !== \"visible\" && overflowY !== \"hidden\";\r\n\r\n  if (isScrollable && node.scrollHeight >= node.clientHeight) {\r\n    return node;\r\n  }\r\n\r\n  return getScrollParent(node.parentElement) || document.body;\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\nimport dialogPolyfill from \"dialog-polyfill\";\r\n\r\nexport class LightboxImageController extends BaseController {\r\n\r\n  static values = {\r\n    src: String,\r\n    srcSet: String,\r\n    sizes: String,\r\n  };\r\n  static classes = [\"modal\", \"image\"];\r\n\r\n  declare readonly hasModalClass: boolean;\r\n  declare readonly modalClass: string;\r\n  declare readonly hasImageClass: boolean;\r\n  declare readonly imageClass: string;\r\n  declare readonly hasSrcValue: boolean;\r\n  declare readonly srcValue: string;\r\n  declare readonly hasSrcSetValue: boolean;\r\n  declare readonly srcSetValue: string;\r\n  declare readonly hasSizesValue: boolean;\r\n  declare readonly sizesValue: string;\r\n  _dialog: HTMLDialogElement | null = null;\r\n\r\n  get _src(): string {\r\n    return this.hasSrcValue ? this.srcValue : (this.el as HTMLImageElement).src;\r\n  }\r\n\r\n  get _srcSet(): string {\r\n    return this.hasSrcSetValue ? this.srcSetValue : (this.el as HTMLImageElement).srcset;\r\n  }\r\n\r\n  get _sizes(): string {\r\n    return this.hasSizesValue ? this.sizesValue : (this.el as HTMLImageElement).sizes;\r\n  }\r\n\r\n  get _modalClassName() {\r\n    return this.hasModalClass ? this.modalClass : \"image-lightbox-dialog\";\r\n  }\r\n\r\n  get _imageClassName() {\r\n    return this.hasImageClass ? this.imageClass : \"image-lightbox-image\";\r\n  }\r\n\r\n  initialize() {\r\n    this.open = this.open.bind(this);\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  connect() {\r\n  }\r\n\r\n  open() {\r\n    let element = this.el as HTMLImageElement;\r\n    if (this._dialog) {\r\n      return;\r\n    }\r\n    this._dialog = document.createElement(\"dialog\");\r\n\r\n    let image = document.createElement(\"img\") as HTMLImageElement;\r\n    image.className = this._imageClassName;\r\n    image.src = this._src;\r\n    image.srcset = this._srcSet;\r\n    image.sizes = this._sizes;\r\n    this._dialog.appendChild(image);\r\n\r\n    element.insertAdjacentElement(\"afterend\", this._dialog);\r\n    dialogPolyfill.registerDialog(this._dialog);\r\n    this._dialog.className = this._modalClassName;\r\n    this._dialog.showModal();\r\n    scrollToElement(this._dialog, {behavior: \"smooth\", block: \"end\"}).catch(() => this._dialog!.scrollIntoView(false));\r\n    this._dialog.addEventListener(\"click\", this.close);\r\n    this._dialog.addEventListener(\"cancel\", this.close);\r\n    this._dialog.addEventListener(\"close\", this.close);\r\n  }\r\n\r\n  close() {\r\n    if (this._dialog) {\r\n      this._dialog.close();\r\n      this._dialog.remove();\r\n      this._dialog = null;\r\n      scrollToElement(this.el, {behavior: \"smooth\", block: \"end\"}).catch(() => this.el.scrollIntoView(false));\r\n    }\r\n  }\r\n\r\n} ","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class LimitedSelectionCheckboxesController extends BaseController {\r\n\r\n  static targets = [\"input\", \"error\"];\r\n  static values = {max: Number, message: String};\r\n\r\n  declare readonly hasErrorTarget: boolean;\r\n  declare readonly errorTarget: HTMLElement;\r\n  declare readonly inputTargets: HTMLInputElement[];\r\n  declare readonly maxValue: number;\r\n  declare readonly messageValue: string;\r\n\r\n  initialize() {\r\n    this.handleInputs = this.handleInputs.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.inputTargets.forEach((el) => el.addEventListener(\"change\", this.handleInputs));\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTargets.forEach((el) => el.removeEventListener(\"change\", this.handleInputs));\r\n  }\r\n\r\n  handleInputs(event: Event) {\r\n    let tickedInputs = this.inputTargets.reduce((previousValue, el) => el.checked ? previousValue + 1 : previousValue, 0);\r\n    let target = event.target as HTMLInputElement;\r\n    if (tickedInputs > this.maxValue) {\r\n      event.preventDefault();\r\n      target.checked = false;\r\n      this.dispatch(target, \"change\");\r\n      this.dispatch(target, \"limited-selection:too-many\");\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = this.messageValue;\r\n      }\r\n    } else {\r\n      this.dispatch(target, \"limited-selection:selection\");\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class MediaPlayerController extends BaseController {\r\n\r\n  static targets = [\"media\"];\r\n\r\n  declare readonly mediaTarget: HTMLMediaElement;\r\n\r\n  initialize() {\r\n  }\r\n\r\n  connect() {\r\n  }\r\n\r\n  disconnect() {\r\n  }\r\n\r\n  async play(event?: Event) {\r\n    event?.preventDefault();\r\n    await this.mediaTarget.play();\r\n  }\r\n\r\n  pause(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.pause();\r\n  }\r\n\r\n  restart(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.currentTime = 0;\r\n  }\r\n\r\n  seek(event?: Event) {\r\n    event?.preventDefault();\r\n    this.mediaTarget.currentTime += 5;\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class NavigateFormErrorsController extends BaseController {\r\n  static values = {\r\n    selector: String,\r\n    index: Number,\r\n  };\r\n\r\n  static targets = [\"next\", \"current\", \"previous\"];\r\n\r\n  declare readonly hasNextTarget: boolean;\r\n  declare readonly nextTarget: HTMLElement;\r\n  declare readonly hasPreviousTarget: boolean;\r\n  declare readonly previousTarget: HTMLElement;\r\n  declare readonly hasCurrentTarget: boolean;\r\n  declare readonly currentTarget: HTMLElement;\r\n\r\n  declare selectorValue: string;\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare indexValue: number;\r\n  declare readonly hasIndexValue: boolean;\r\n\r\n  _errors: HTMLElement[] = [];\r\n\r\n  get _errorCount(): number {\r\n    return this._errors.length;\r\n  }\r\n\r\n  get _previousIndex(): number | null {\r\n    let index = this._index - 1;\r\n    if (index < 0) {\r\n      return null;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  get _nextIndex(): number | null {\r\n    let index = this._index + 1;\r\n    if (index > this._errors.length - 1) {\r\n      return null;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  get _index(): number {\r\n    return Math.min(\r\n      this.hasIndexValue ? this.indexValue : 0,\r\n      this._errors.length,\r\n    );\r\n  }\r\n\r\n  get _selector(): string {\r\n    if (this.hasSelectorValue) {\r\n      return this.selectorValue;\r\n    } else {\r\n      throw new Error(\"Expected `selectorValue` to be present\");\r\n    }\r\n  }\r\n\r\n  get _previousError(): HTMLElement | null {\r\n    return this._previousIndex ? this._errors[this._previousIndex] : null;\r\n  }\r\n\r\n  get _currentError(): HTMLElement {\r\n    return this._errors[this._index];\r\n  }\r\n\r\n  get _nextError(): HTMLElement | null {\r\n    return this._nextIndex ? this._errors[this._nextIndex] : null;\r\n  }\r\n\r\n  connect() {\r\n    if (!this.hasIndexValue) {\r\n      this.indexValue = -1;\r\n    }\r\n    this._toggleButtons();\r\n\r\n    if (this._errorCount === 0) {\r\n      this.el.style.display = \"none\";\r\n    } else {\r\n      this.el.style.display = \"\";\r\n    }\r\n  }\r\n\r\n  async current() {\r\n    await scrollToElement(this._currentError);\r\n  }\r\n\r\n  async next() {\r\n    if (this._nextError) {\r\n      await scrollToElement(this._nextError);\r\n    }\r\n    if (this._index < this._errorCount - 1) {\r\n      this.indexValue += 1;\r\n    }\r\n  }\r\n\r\n  async previous() {\r\n    if (this._previousError) {\r\n      await scrollToElement(this._previousError);\r\n    }\r\n    if (this._index > 0) {\r\n      this.indexValue -= 1;\r\n    }\r\n  }\r\n\r\n  indexValueChanged() {\r\n    this._toggleButtons();\r\n  }\r\n\r\n  selectorValueChanged() {\r\n    this._errors = Array.from(document.querySelectorAll(this._selector));\r\n  }\r\n\r\n  private _toggleButtons() {\r\n    if (this.hasNextTarget) {\r\n      if (this.indexValue >= this._errorCount - 1) {\r\n        this.nextTarget.setAttribute(\"disabled\", \"true\");\r\n      } else {\r\n        this.nextTarget.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n    if (this.hasPreviousTarget) {\r\n      if (this.indexValue <= 0) {\r\n        this.previousTarget.setAttribute(\"disabled\", \"true\");\r\n      } else {\r\n        this.previousTarget.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class NestedFormController extends BaseController {\r\n  static targets = ['target', 'template'];\r\n  static values = {\r\n    insertMode: String,\r\n    wrapperClass: String,\r\n  };\r\n\r\n  declare readonly targetTarget: HTMLElement;\r\n  declare readonly templateTarget: HTMLTemplateElement | HTMLScriptElement;\r\n\r\n  declare readonly wrapperClassValue: string;\r\n  declare readonly hasWrapperSelectorValue: boolean;\r\n  declare readonly insertModeValue: InsertPosition;\r\n  declare readonly hasInsertModeValue: boolean;\r\n\r\n  get _wrapperClass() {\r\n    return this.hasWrapperSelectorValue ? this.wrapperClassValue : 'nested-fields';\r\n  }\r\n\r\n  get _insertMode(): InsertPosition {\r\n    return this.hasInsertModeValue ? this.insertModeValue : 'beforeend';\r\n  }\r\n\r\n  connect() {\r\n    this._checkStructure();\r\n  }\r\n\r\n  add(event?: Event) {\r\n    event?.preventDefault();\r\n\r\n    const content = this.templateTarget.innerHTML.replace(/NEW_RECORD/g, this._generateID());\r\n    this.targetTarget.insertAdjacentHTML(this._insertMode, content);\r\n  }\r\n\r\n  remove(event: Event) {\r\n    event.preventDefault();\r\n    const wrapper: HTMLElement | null = (event.target as HTMLElement).closest(`.${this._wrapperClass}`);\r\n    if (wrapper == null) {\r\n      throw new Error(`#remove was clicked from outside of a child record. Could not find an ancestor with class .${this._wrapperClass}`);\r\n    }\r\n\r\n    if (wrapper.dataset.newRecord === 'true') {\r\n      wrapper.remove();\r\n    } else {\r\n      wrapper.style.display = 'none';\r\n      let destroyInput = wrapper.querySelector(\"input[name*='_destroy']\") as HTMLInputElement | null;\r\n      if (destroyInput == null) {\r\n        throw new Error(`Could not find a hidden input with name '_destroy'. NestedForm cannot remove an already persisted record without it.`);\r\n      }\r\n\r\n      destroyInput.value = \"1\";\r\n    }\r\n  }\r\n\r\n  private _generateID(): string {\r\n    return new Date().getTime().toString() + Math.random().toString().slice(2);\r\n  }\r\n\r\n  private _checkStructure() {\r\n    let template = this.templateTarget.innerHTML;\r\n\r\n    if (template.indexOf('NEW_RECORD')) {\r\n      throw new Error(\"Could not find 'NEW_RECORD' in the provided template. Please make sure you've passed `child_index: 'NEW_RECORD'` to `fields_for`\");\r\n    }\r\n  }\r\n}","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class PasswordConfirmController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly passwordTargets: HTMLInputElement[];\r\n\r\n  declare readonly errorClass: string;\r\n  declare readonly hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this.checkPasswordsMatch = this.checkPasswordsMatch.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.passwordTargets.forEach((el) => el.addEventListener(\"change\", this.checkPasswordsMatch));\r\n  }\r\n\r\n  disconnect() {\r\n    this.passwordTargets.forEach((el) => el.removeEventListener(\"change\", this.checkPasswordsMatch));\r\n  }\r\n\r\n  private _allPasswordsMatch(): boolean {\r\n    let values = new Set(this.passwordTargets.map(el => el.value));  // Create a unique set of the password values\r\n    return values.has(\"\") || values.size == 1; // If any of the passwords are still blank, or there is only one distinct password value (i.e. they all are the same)\r\n  }\r\n\r\n  private checkPasswordsMatch() {\r\n    let element = this.el;\r\n    if (this._allPasswordsMatch()) {\r\n      this.dispatch(element, \"password-confirm:match\");\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.remove(this.errorClass));\r\n      }\r\n    } else {\r\n      this.dispatch(element, \"password-confirm:no-match\");\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.add(this.errorClass));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class PasswordPeekController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n\r\n  declare readonly passwordTarget: HTMLInputElement;\r\n\r\n  peak(event?: Event) {\r\n    event?.preventDefault();\r\n    this.passwordTarget.type = \"text\";\r\n  }\r\n\r\n  hide(event?: Event) {\r\n    event?.preventDefault();\r\n    this.passwordTarget.type = \"password\";\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    event?.preventDefault();\r\n    if (this.passwordTarget.type === \"password\") {\r\n      this.peak();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class RemoteFormController extends BaseController {\r\n  static targets = [];\r\n\r\n  static values = {selector: String};\r\n\r\n  declare readonly hasSelectorValue: boolean;\r\n  declare readonly selectorValue: string;\r\n\r\n  get _selector(): string {\r\n    return this.hasSelectorValue ? this.selectorValue : `[data-controller~=\"${this.identifier}\"]`;\r\n  }\r\n\r\n  replace(event: { detail: [Element, any, XMLHttpRequest] }) {\r\n    const [data, status, xhr] = event.detail;\r\n    if (data instanceof Node) {\r\n      let new_element = data.querySelector(this._selector);\r\n\r\n      if (new_element == null) {\r\n        throw new Error(`expected new form DOM with [data-controller=\"${this.identifier}\"] to be present in returned payload`);\r\n      }\r\n\r\n      let parentNode = this.el.parentNode;\r\n      if (parentNode == null) {\r\n        throw new Error('expected form to have a DOM parent, could not execute replaceChild');\r\n      }\r\n      parentNode.replaceChild(new_element, this.el);\r\n    } else {\r\n      console.log('Unknown', data);\r\n    }\r\n  }\r\n}\r\n","import {useDebounce, useWindowResize} from \"stimulus-use\";\r\nimport {WindowResizePayload} from \"stimulus-use/dist/use-window-resize/use-window-resize\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\ninterface ResponsiveIframeMessage {\r\n  name: string,\r\n  height: number,\r\n}\r\n\r\nexport class ResponsiveIframeWrapperController extends BaseController {\r\n\r\n  initialize() {\r\n    this.messageReceived = this.messageReceived.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    window.addEventListener(\"message\", this.messageReceived);\r\n  }\r\n\r\n  disconnect() {\r\n    window.removeEventListener(\"message\", this.messageReceived);\r\n  }\r\n\r\n  messageReceived(message: MessageEvent<ResponsiveIframeMessage>) {\r\n    let data = message.data;\r\n    if (data.hasOwnProperty(\"name\") && data.name === \"iframe-body\" && data.hasOwnProperty(\"height\")) {\r\n      this.resize(data.height);\r\n    }\r\n  }\r\n\r\n  resize(height: number) {\r\n    (this.el as HTMLIFrameElement).style.height = `${height}px`;\r\n  }\r\n\r\n}\r\n\r\nexport class ResponsiveIframeBodyController extends BaseController {\r\n\r\n  static debounces = [\"postUpdate\"];\r\n\r\n  declare observe: () => void;\r\n  declare unobserve: () => void;\r\n\r\n  connect() {\r\n    // If this Window is inside a frame\r\n    if (window.self !== window.top) {\r\n      useWindowResize(this);\r\n      useDebounce(this, {});\r\n      this.postUpdate();\r\n    } else {\r\n      // Not an iframe\r\n    }\r\n  }\r\n\r\n  windowResize(payload: WindowResizePayload) {\r\n    this.postUpdate();\r\n  };\r\n\r\n  postUpdate() {\r\n    let payload: ResponsiveIframeMessage = {name: \"iframe-body\", height: this.getHeight()};\r\n    window.parent.postMessage(\r\n      payload,\r\n      \"*\",\r\n    );\r\n  }\r\n\r\n  getHeight(): number {\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n\r\n    // Get the largest height out of body and html's various height measurements\r\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n  }\r\n\r\n}\r\n","import {EphemeralController} from \"../../utilities/ephemeral_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollIntoFocusController extends EphemeralController {\r\n\r\n  static values = {\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Attempt smooth scrolling, with polyfill\r\n      scrollToElement(\r\n        this.el,\r\n        {\r\n          behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n          block: this.hasBlockValue ? this.blockValue : \"center\",\r\n          inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n        },\r\n      ).catch(() => this.el.scrollIntoView()); // Fallback to snap-scrolling\r\n      this._cleanupSelf();\r\n    });\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {getScrollParent, scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToBottomController extends BaseController {\r\n\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare modeValue: \"nearest\" | \"document\";\r\n  declare hasModeValue: boolean;\r\n\r\n  scroll(event?: Event) {\r\n    event?.preventDefault();\r\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\r\n    let target: null | HTMLElement;\r\n    if (mode == \"document\") {\r\n      target = document.body;\r\n    } else {\r\n      target = getScrollParent(this.el);\r\n    }\r\n    if (target == null) {\r\n      return;\r\n    }\r\n    scrollToElement(target!, {behavior: \"smooth\", block: \"end\"}).catch(() => target!.scrollIntoView(false));\r\n  }\r\n\r\n}\r\n\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToController extends BaseController {\r\n\r\n  static values = {\r\n    selector: String,\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare selectorValue: string;\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  scroll() {\r\n    let target = document.querySelector(this.selectorValue);\r\n    if (!target) {\r\n      console.warn(`Could not find target for '${this.selectorValue}'`);\r\n      return;\r\n    }\r\n\r\n    scrollToElement(\r\n      target!,\r\n      {\r\n        behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n        block: this.hasBlockValue ? this.blockValue : \"center\",\r\n        inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n      },\r\n    ).catch(() => target!.scrollIntoView()); // Fallback to snap-scrolling\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\nimport {getScrollParent, scrollToElement} from \"../../utilities/scroll\";\r\n\r\nexport class ScrollToTopController extends BaseController {\r\n\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare modeValue: \"nearest\" | \"document\";\r\n  declare hasModeValue: boolean;\r\n\r\n  scroll(event?: Event) {\r\n    event?.preventDefault();\r\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\r\n    let target: null | HTMLElement;\r\n    if (mode == \"document\") {\r\n      target = document.body;\r\n    } else {\r\n      target = getScrollParent(this.el);\r\n    }\r\n    if (target == null) {\r\n      return;\r\n    }\r\n    scrollToElement(target!, {behavior: \"smooth\", block: \"start\"}).catch(() => target!.scrollIntoView(false));\r\n  }\r\n\r\n}\r\n\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class SelfDestructController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  _timeout: null | ReturnType<typeof window.setTimeout> = null;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Only start countdown on first paint\r\n      this._timeout = setTimeout(() => this.el.remove(), this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport class StickyController extends BaseController {\r\n\r\n  static classes = [\"stuck\"];\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare readonly hasStuckClass: boolean;\r\n  declare readonly stuckClass: string;\r\n  declare readonly hasModeValue: \"top\" | \"bottom\";\r\n  declare readonly modeValue: \"top\" | \"bottom\";\r\n\r\n  _magicElement: HTMLDivElement | null = null;\r\n\r\n  get _mode(): \"top\" | \"bottom\" {\r\n    return this.hasModeValue ? this.modeValue : \"top\";\r\n  }\r\n\r\n  createMagicElement() {\r\n    // Magic element placed next to the sticky el that acts as an external border.\r\n    // When the magic element is off the page, we know that the sticky el is \"stuck\"\r\n    if (this._magicElement !== null) {\r\n      return;\r\n    }\r\n\r\n    this._magicElement = document.createElement(\"div\");\r\n    switch (this._mode) {\r\n      case \"top\":\r\n        this.el.insertAdjacentElement(\"beforebegin\", this._magicElement);\r\n        break;\r\n      case \"bottom\":\r\n        this.el.insertAdjacentElement(\"afterend\", this._magicElement);\r\n        break;\r\n    }\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el;\r\n    this.createMagicElement();\r\n\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.target !== this._magicElement) {\r\n          return;\r\n        }\r\n        if (entry.intersectionRatio === 0) {\r\n          element.classList.add(this.hasStuckClass ? this.stuckClass : \"stuck\");\r\n        } else if (entry.intersectionRatio === 1) {\r\n          element.classList.remove(this.hasStuckClass ? this.stuckClass : \"stuck\");\r\n        }\r\n      });\r\n\r\n    }, {\r\n      threshold: [0, 1],\r\n    });\r\n    observer.observe(this._magicElement!);\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TableSortController extends BaseController {\r\n\r\n  static values = {startSort: Number};\r\n\r\n  declare readonly startSortValue: number;\r\n  declare readonly hasStartSortValue: boolean;\r\n  _lastIndex: number | null = null;\r\n  _reverse: boolean = false;\r\n\r\n  get _tableHead(): HTMLTableSectionElement {\r\n    let head = (this.el as HTMLTableElement).tHead;\r\n    if (head == null) {\r\n      throw new Error('Expected table to have a <thead> element.');\r\n    }\r\n    return head;\r\n  }\r\n\r\n  get _tableHeaders(): HTMLTableHeaderCellElement[] {\r\n    let rows = this._tableHead.rows;\r\n    if (rows.length == 0) {\r\n      throw new Error('Expected table to have a <thead> element with at least one row.');\r\n    }\r\n    return Array.from(rows[0].cells);\r\n  }\r\n\r\n  get _tableBody() {\r\n    return (this.el as HTMLTableElement).tBodies[0];\r\n  }\r\n\r\n  get _tableRows(): HTMLTableRowElement[] {\r\n    return Array.from(this._tableBody.rows);\r\n  }\r\n\r\n  initialize() {\r\n    this.sort = this.sort.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._tableHeaders.forEach(cell => cell.addEventListener(\"click\", this.sort));\r\n      if (this.hasStartSortValue) {\r\n        this._sortByColumn(this.startSortValue);\r\n      }\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this._tableHeaders.forEach(cell => cell.removeEventListener(\"click\", this.sort));\r\n  }\r\n\r\n  sort(event: Event) {\r\n    event.preventDefault();\r\n    let headerCell = event.target! as HTMLTableHeaderCellElement;\r\n    let headerCellIndex = this._indexOfHeaderCell(headerCell);\r\n    this._sortByColumn(headerCellIndex);\r\n  }\r\n\r\n  private _indexOfHeaderCell(cell: HTMLTableHeaderCellElement) {\r\n    return this._tableHeaders.indexOf(cell);\r\n  }\r\n\r\n  private _sortByColumn(index: number) {\r\n    this._reverse = index === this._lastIndex && !this._reverse;\r\n    let frag = document.createDocumentFragment();\r\n    let rows = this._tableRows;\r\n\r\n    let newRows = rows.sort((row, otherRow) => {\r\n      let cells = Array.from(row.cells);\r\n      let otherCells = Array.from(otherRow.cells);\r\n\r\n      // TODO: Handle colspans?\r\n      let x = cells[index]?.innerText || \"\";\r\n      let y = otherCells[index]?.innerText || \"\";\r\n\r\n      let sortVal = x.localeCompare(y, \"en\", {sensitivity: \"base\", numeric: true, caseFirst: \"upper\"});\r\n\r\n      if (row.dataset.sortTop || otherRow.dataset.sortBottom) {\r\n        if (row.dataset.sortTop && otherRow.dataset.sortTop) {\r\n          return sortVal;\r\n        }\r\n        return -1;\r\n      }\r\n      if (row.dataset.sortBottom || otherRow.dataset.sortTop) {\r\n        if (row.dataset.sortBottom && otherRow.dataset.sortBottom) {\r\n          return sortVal;\r\n        }\r\n        return 1;\r\n      }\r\n\r\n      if (this._reverse) {\r\n        return sortVal > 0 ? -1 : 1;\r\n      }\r\n      return sortVal;\r\n    });\r\n\r\n    newRows.forEach(row => frag.appendChild(row));\r\n\r\n    this._tableBody.innerHTML = \"\";\r\n    this._tableBody.appendChild(frag);\r\n    this._lastIndex = index;\r\n  }\r\n\r\n}","import {useMutation} from \"stimulus-use\";\r\nimport {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TableTruncateController extends BaseController {\r\n\r\n  static targets = [\"showMore\"];\r\n  static values = {\r\n    limit: Number,\r\n    truncated: Boolean,\r\n  };\r\n\r\n  declare readonly showMoreTarget: HTMLElement;\r\n  declare limitValue: number;\r\n  declare readonly hasLimitValue: boolean;\r\n  declare truncatedValue: boolean;\r\n  declare readonly hasTruncatedValue: boolean;\r\n\r\n  get _truncated(): boolean {\r\n    return this.hasTruncatedValue ? this.truncatedValue : false;\r\n  }\r\n\r\n  set _truncated(value) {\r\n    this.truncatedValue = value;\r\n  }\r\n\r\n  get _tableBody(): HTMLTableSectionElement {\r\n    return (this.el as HTMLTableElement).tBodies[0];\r\n  }\r\n\r\n  get _tableRows(): HTMLTableRowElement[] {\r\n    return Array.from(this._tableBody.rows);\r\n  }\r\n\r\n  get _limit(): number {\r\n    return this.hasLimitValue ? this.limitValue : 20;\r\n  }\r\n\r\n  initialize() {\r\n    this.truncate = this.truncate.bind(this);\r\n    this.expand = this.expand.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    useMutation(this, {childList: true, element: this._tableBody});\r\n\r\n    requestAnimationFrame(() => {\r\n      this.truncate();\r\n      this.showMoreTarget.addEventListener(\"click\", this.expand);\r\n    });\r\n  }\r\n\r\n  truncate(event?: Event) {\r\n    event?.preventDefault();\r\n    this._truncated = true;\r\n    if (this._tableRows.length >= this._limit) {\r\n      this._tableRows.slice(this._limit).forEach((el) => {\r\n        if (el !== this.showMoreTarget) {\r\n          this._hideElement(el);\r\n        }\r\n      });\r\n      this._showElement(this.showMoreTarget);\r\n    } else {\r\n      this._hideElement(this.showMoreTarget);\r\n    }\r\n  }\r\n\r\n  expand(event?: Event) {\r\n    this._truncated = false;\r\n    event?.preventDefault();\r\n    this._tableRows.slice(this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._showElement(el);\r\n      }\r\n    });\r\n    this._hideElement(this.showMoreTarget);\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    if (this._truncated) {\r\n      this._reTruncate();\r\n    }\r\n  }\r\n\r\n  private _showElement(el: HTMLElement): void {\r\n    el.style.display = \"\";\r\n  }\r\n\r\n  private _hideElement(el: HTMLElement): void {\r\n    el.style.display = \"none\";\r\n  }\r\n\r\n  private _reTruncate() {\r\n    this._tableRows.slice(0, this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._showElement(el);\r\n      }\r\n    });\r\n    this._tableRows.slice(this._limit).forEach((el) => {\r\n      if (el !== this.showMoreTarget) {\r\n        this._hideElement(el);\r\n      }\r\n    });\r\n    this._showElement(this.showMoreTarget);\r\n  }\r\n\r\n}","import {EphemeralController} from \"../utilities/ephemeral_controller\";\r\n\r\nexport class TeleportController extends EphemeralController {\r\n\r\n  static values = {target: String, insert: String, immediate: Boolean};\r\n\r\n  declare readonly immediateValue: boolean;\r\n  declare readonly hasImmediateValue: boolean;\r\n  declare readonly targetValue: string;\r\n  declare readonly hasInsertValue: boolean;\r\n  declare readonly insertValue: InsertPosition | \"replaceOuter\" | \"replaceInner\" | \"prepend\" | \"append\";\r\n\r\n  connect() {\r\n    if (!this.hasInsertValue) {\r\n      throw new Error(\"`insert` value was not specified\");\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasImmediateValue && this.immediateValue) {\r\n        this.execute();\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el;\r\n    let destination = document.querySelector(this.targetValue);\r\n\r\n    if (destination == null) {\r\n      this.dispatch(element, \"teleport:error\");\r\n      return;\r\n    }\r\n\r\n    let copy = element.cloneNode(true) as HTMLElement;\r\n    this.cleanup(copy);\r\n\r\n    switch (this.insertValue) {\r\n      case \"beforebegin\":\r\n      case \"beforeend\":\r\n      case \"afterend\":\r\n      case \"afterbegin\":\r\n        destination.insertAdjacentHTML(this.insertValue, copy.outerHTML);\r\n        break;\r\n      case \"replaceOuter\":\r\n        destination.outerHTML = copy.outerHTML;\r\n        break;\r\n      case \"replaceInner\":\r\n        destination.innerHTML = copy.outerHTML;\r\n        break;\r\n      case \"prepend\":\r\n        destination.insertAdjacentHTML(\"afterbegin\", copy.outerHTML);\r\n        break;\r\n      case \"append\":\r\n        destination.insertAdjacentHTML(\"beforeend\", copy.outerHTML);\r\n        break;\r\n      default:\r\n        throw new Error(\"`insert` value was not specified\");\r\n\r\n    }\r\n    element.remove();\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class TimeoutController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  _timeoutHandle: null | number = null;\r\n\r\n  initialize() {\r\n    this._timeout = this._timeout.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      this._timeoutHandle = window.setTimeout(this._timeout, this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      window.clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  _timeout() {\r\n    this.dispatch(this.el, \"timeout\");\r\n  }\r\n\r\n}","import {useClickOutside, useHover} from \"stimulus-use\";\r\nimport {BaseController} from \"../utilities/base_controller\";\r\n\r\nexport type ToggleClassMode = \"on\" | \"off\" | \"toggle\"\r\n\r\nexport class ToggleClassController extends BaseController {\r\n\r\n  static targets = [\"toggle\"];\r\n  static values = {\r\n    class: String,\r\n    mouseEnter: String,\r\n    mouseLeave: String,\r\n    clickAway: Boolean,\r\n    initial: String,\r\n  };\r\n\r\n  declare readonly toggleTargets: HTMLElement[];\r\n\r\n  declare readonly classValue: string;\r\n  declare readonly hasClassValue: boolean;\r\n\r\n  declare readonly mouseEnterValue: ToggleClassMode;\r\n  declare readonly hasMouseEnterValue: boolean;\r\n\r\n  declare readonly mouseLeaveValue: ToggleClassMode;\r\n  declare readonly hasMouseLeaveValue: boolean;\r\n\r\n  declare readonly clickAwayValue: boolean;\r\n  declare readonly hasClickAwayValue: boolean;\r\n\r\n  declare readonly initialValue: \"on\" | \"off\";\r\n  declare readonly hasInitialValue: boolean;\r\n\r\n  connect() {\r\n    if (!this.hasClassValue) {\r\n      throw new Error(\"data-toggle-class-class-value must not be empty\");\r\n    }\r\n\r\n    if (this.hasMouseEnterValue || this.hasMouseLeaveValue) {\r\n      useHover(this);\r\n    }\r\n\r\n    if (this.hasClickAwayValue && this.clickAwayValue) {\r\n      useClickOutside(this);\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasInitialValue) {\r\n        if (this.initialValue === \"on\") {\r\n          this.toggleTargets.forEach((target) => this._elementOn(target));\r\n        } else {\r\n          this.toggleTargets.forEach((target) => this._elementOff(target));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOutside() {\r\n    this.toggleTargets.forEach((target) => {\r\n      if (this._elementWasToggled(target)) {\r\n        this._elementToggleStatus(target);\r\n        this._elementToggle(target);\r\n      }\r\n    });\r\n  }\r\n\r\n  mouseEnter() {\r\n    if (this.hasMouseEnterValue) {\r\n      switch (this.mouseEnterValue) {\r\n        case \"on\":\r\n          this.on();\r\n          break;\r\n        case \"off\":\r\n          this.off();\r\n          break;\r\n        case \"toggle\":\r\n          this.toggle();\r\n          break;\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  mouseLeave() {\r\n    if (this.hasMouseLeaveValue) {\r\n      switch (this.mouseLeaveValue) {\r\n        case \"on\":\r\n          this.on();\r\n          break;\r\n        case \"off\":\r\n          this.off();\r\n          break;\r\n        case \"toggle\":\r\n          this.toggle();\r\n          break;\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  on(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementOn(target);\r\n    });\r\n  }\r\n\r\n  off(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementOff(target);\r\n    });\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    this.toggleTargets.forEach((target) => {\r\n      this._elementToggleStatus(target);\r\n      this._elementToggle(target);\r\n    });\r\n  }\r\n\r\n  private _elementWasToggled(el: HTMLElement): boolean {\r\n    return el.dataset.toggled == \"true\";\r\n  }\r\n\r\n  private _elementToggleStatus(el: HTMLElement) {\r\n    if (this._elementWasToggled(el)) {\r\n      delete el.dataset.toggled;\r\n    } else {\r\n      el.dataset.toggled = \"true\";\r\n    }\r\n  }\r\n\r\n  private _elementToggle(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass));\r\n  }\r\n\r\n  private _elementOn(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass, true));\r\n  }\r\n\r\n  private _elementOff(el: HTMLElement) {\r\n    let classes = this.classValue.split(\" \");\r\n    classes.forEach((klass) => el.classList.toggle(klass, false));\r\n  }\r\n\r\n}\r\n","export function isTurboFrame(element: HTMLElement): element is TurboFrame {\r\n  return element.nodeName == \"TURBO-FRAME\";\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\nimport {isHTMLAnchorElement} from \"../utilities/elements\";\r\nimport {isTurboFrame} from \"../utilities/turbo\";\r\n\r\nexport class TurboFrameRCController extends BaseController {\r\n\r\n  static values = {\r\n    frameId: String,\r\n    src: String,\r\n    loadingMessage: String,\r\n  };\r\n\r\n  declare readonly frameIdValue: string;\r\n  declare readonly srcValue: string;\r\n  declare readonly hasSrcValue: boolean;\r\n  declare readonly loadingMessageValue: string;\r\n  declare readonly hasLoadingMessageValue: boolean;\r\n\r\n  toggle(event?: Event) {\r\n    event?.preventDefault();\r\n    let frame = this._getFrame();\r\n    let frameSrc = frame.src;\r\n    if (frameSrc == null || frameSrc !== this._getSrc()) {\r\n      this._setSrc();\r\n    } else {\r\n      this._clear();\r\n    }\r\n  }\r\n\r\n  setSrc(event?: Event) {\r\n    event?.preventDefault();\r\n    this._setSrc();\r\n  }\r\n\r\n  clear(event?: Event) {\r\n    event?.preventDefault();\r\n    this._clear();\r\n  }\r\n\r\n  private _setSrc() {\r\n    let frame = this._getFrame();\r\n    if (this.hasLoadingMessageValue) {\r\n      frame.innerHTML = this.loadingMessageValue;\r\n    }\r\n    frame.src = this._getSrc();\r\n  }\r\n\r\n  private _clear() {\r\n    let frame = this._getFrame();\r\n    frame.src = \"\";\r\n    frame.innerHTML = \"\";\r\n  }\r\n\r\n  private _getFrame(): TurboFrame {\r\n    let frame = document.getElementById(`${this.frameIdValue}`);\r\n    if (frame == null) {\r\n      throw new Error(`Could not find frame with ID '${this.frameIdValue}'`);\r\n    }\r\n    if (!isTurboFrame(frame)) {\r\n      throw new Error(`Element targeted by ID '${this.frameIdValue}'`);\r\n    } else {\r\n      return frame;\r\n    }\r\n  }\r\n\r\n  private _getSrc(): string {\r\n    let element = this.el;\r\n    if (this.hasSrcValue) {\r\n      return this.srcValue;\r\n    } else if (isHTMLAnchorElement(element)) {\r\n      return element.href;\r\n    } else {\r\n      throw new Error(\"No link given to drive frame to\");\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../utilities/base_controller\";\r\nimport {isTurboFrame} from \"../utilities/turbo\";\r\n\r\n// noinspection SillyAssignmentJS\r\nexport class TurboFrameRefreshController extends BaseController {\r\n\r\n  static values = {\r\n    interval: Number,\r\n    poll: Boolean,\r\n  };\r\n\r\n  declare readonly intervalValue: number;\r\n  declare readonly pollValue: boolean;\r\n  declare readonly hasPollValue: boolean;\r\n  _timeoutHandle: null | ReturnType<typeof window.setTimeout> = null;\r\n\r\n  get _poll(): boolean {\r\n    return this.hasPollValue ? this.pollValue : false;\r\n  }\r\n\r\n  initialize() {\r\n    this.refresh = this.refresh.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    let element = this.el;\r\n    if (isTurboFrame(element)) {\r\n      if (!!element.src) {\r\n        throw new Error('The provided <turbo-frame> element has no `src` attribute.');\r\n      }\r\n    } else {\r\n      throw new Error('Expected controller to be mounted on a <turbo-frame> element.');\r\n    }\r\n    if (this._poll) {\r\n      requestAnimationFrame(() => this._timeoutHandle = setTimeout(() => this.refresh(), this.intervalValue));\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this._timeoutHandle) {\r\n      clearTimeout(this._timeoutHandle);\r\n    }\r\n  }\r\n\r\n  refresh(event?: Event) {\r\n    event?.preventDefault();\r\n    let element = this.el as TurboFrame;\r\n    element.src = element.src;\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"../../utilities/base_controller\";\r\n\r\nexport class WordCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  initialize() {\r\n    this.updateWordCount = this.updateWordCount.bind(this);\r\n  }\r\n\r\n  connect() {\r\n    this.updateWordCount();\r\n    this.inputTarget.addEventListener(\"input\", this.updateWordCount);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.updateWordCount);\r\n  }\r\n\r\n  updateWordCount() {\r\n    let wordCount = 0;\r\n    let textAreaValue = this.inputTarget.value;\r\n    let matches = textAreaValue.match(/\\S+/g);\r\n    wordCount = (matches && matches.length) || 0;\r\n    this.outputTarget.innerText = wordCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this._isValidCount(wordCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n"],"names":["BaseController","Controller","constructor","context","super","Proxy","this","get","obj","prop","returnVal","Reflect","self","test","logProperty","toString","apply","target","thisArg","argArray","log","args","el","element","isTurboPreview","document","documentElement","hasAttribute","isTurbolinksPreview","csrfToken","metaValue","name","head","querySelector","getAttribute","dispatch","eventName","options","mergedOptions","Object","assign","bubbles","cancelable","detail","event","CustomEvent","logEvent","dispatchEvent","functionName","application","debug","logger","console","groupCollapsed","identifier","groupEnd","EphemeralController","_cleanupSelf","cleanup","dataset","controller","replaceAll","RegExp","substringIdentifierValueRegex","camelCase","action","values","keys","forEach","val","classes","AnchorSpyController","_key","keyValue","_anchor","window","location","hash","substr","value","initialize","_checkAnchor","bind","connect","requestAnimationFrame","addEventListener","disconnect","removeEventListener","write","preventDefault","key","String","AppearanceController","_handleVisibility","appear","away","_documentIsActive","visibilityState","hasFocus","AsyncBlockController","_errorMessage","hasErrorMessageValue","errorMessageValue","loadContent","hasReplaceTarget","replaceTarget","fetch","endpointValue","then","response","text","html","newEl","createElement","innerHTML","hasSelectorValue","selectedContent","querySelectorAll","selectorValue","replaceWith","children","catch","err","finally","endpoint","errorMessage","selector","AutoSubmitFormController","submit","method","methodName","composeEventName","eventPrefix","composedName","extendedEvent","type","composed","originalEvent","defaultOptions","useIntersection","targetElement","controllerDisconnect","observer","IntersectionObserver","entries","entry","isIntersecting","isVisible","call","appearEvent","dispatchAppear","disappearEvent","dispatchDisappear","observe","unobserve","[object Object]","events","onlyVisible","StimulusUse","_a","_b","_c","controllerId","stimulusUseDebug","id","controllerInitialize","controllerConnect","UseHover","onEnter","onLeave","hover","enhanceController","UseMutation","error","handleError","mutation","MutationObserver","useMutation","useWindowResize","callback","innerWidth","innerHeight","payload","height","Infinity","width","debounce","fn","wait","timeoutId","arguments","clearTimeout","setTimeout","AutosizeController","_handler","style","resize","boxSizing","windowResize","autosize","offset","offsetHeight","clientHeight","scrollHeight","CharCountController","_updateCharCount","inputTarget","charCount","length","outputTarget","innerText","hasErrorClass","_isValidCount","classList","remove","errorClass","add","count","min","max","hasMinValue","minValue","hasMaxValue","maxValue","Number","CheckboxSelectAllController","_checked","checkboxTargets","filter","checkbox","checked","_unchecked","_toggle","_refresh","hasSelectAllTarget","selectAllTarget","checkboxesCount","checkboxesCheckedCount","indeterminate","ClipboardController","_supported","queryCommandSupported","hasRemoveUnusedValue","removeUnusedValue","hasFallbackTarget","fallbackTarget","hasCopyTarget","copyTarget","select","sourceTarget","copy","execCommand","isHTMLAnchorElement","nodeName","isHTMLFormElement","isHTMLInputElement","isHTMLButtonElement","isHTMLSelectElement","isElementCheckable","removeUnused","Boolean","ConfirmController","_message","hasMessageValue","messageValue","confirm","Error","message","ConfirmNavigationController","_messageValue","allowSubmit","confirmNavigation","confirmTurboNavigation","onbeforeunload","_event","CountdownController","_removeUnused","endedClasses","endedClass","split","countingDownClasses","countingDownClass","_deadlineDate","Date","deadlineValue","_interval","setInterval","_tick","hasCountingDownClass","_clearTick","hasEndedClass","deadlineValueChanged","now","distance","isPast","years","months","days","hours","minutes","seconds","intervalToDuration","start","end","hasYearsTarget","_updateTarget","yearsTarget","_years","hasMonthsTarget","monthsTarget","_months","hasDaysTarget","daysTarget","_days","hasHoursTarget","hoursTarget","_hours","hasMinutesTarget","minutesTarget","_minutes","hasSecondsTarget","secondsTarget","_seconds","e","clearInterval","_removeTargetIfUnused","unused","parseInt","undefined","duration","deadline","DebugController","testTargets","DetectDirtyController","_cacheAttrName","_checkDirty","_cacheLoadValues","restore","_restoreElementFromLoadValue","_getElementValue","_getElementLoadValue","defaultChecked","Array","from","option","defaultSelected","_elementHasCachedLoadValue","_isElementDirty","setAttribute","removeAttribute","cacheValue","defaultValue","DetectDirtyFormController","_formElements","_checkElementDirty","_cacheElementLoadValue","some","DisableInputsController","toggle","hasDisablerTarget","disablerTarget","disableInputs","enableInputs","shouldClear","hasClearValue","clearValue","disableTargets","_","disabled","clear","DisableWithController","_timeout","hasTimeoutValue","timeoutValue","enable","disable","_timeoutHandle","_isDisabled","stopImmediatePropagation","_cacheText","_getElText","_setElText","_disable","_enable","str","timeout","DismissableController","dismiss","ElementSaveController","_id","hasIdValue","idValue","elementID","_uniqueIdentifier","href","_restoreOnLoad","hasRestoreOnLoadValue","restoreOnLoadValue","_element","hasElementTarget","elementTarget","localStorage","removeItem","save","attributes","attributesValue","data","attr","_get","setItem","JSON","stringify","getItem","savedData","parse","_set","restoreOnLoad","EmptyDomController","emptyClasses","emptyClass","notEmptyClasses","notEmptyClass","_children","hasScopeSelectorValue","scopeSelectorValue","childList","checkEmpty","mutate","_removeNotEmptyClasses","_addEmptyClasses","_addNotEmptyClasses","_removeEmptyClasses","hasEmptyClass","hasNotEmptyClass","scopeSelector","EnableInputsController","hasEnablerTarget","enablerTarget","enableTargets","FallbackImageController","onerror","hasPlaceholderValue","src","placeholderValue","display","placeholder","FormRcController","formTarget","reset","FormSaveController","_formID","_formIdentifier","elements","_formData","_clearOnSubmit","hasClearOnSubmitValue","clearOnSubmitValue","_clear","clearOnSubmit","IntersectionController","_threshold","hasThresholdValue","thresholdValue","map","parseFloat","trim","threshold","disappear","IntervalController","hasSecondsValue","_intervalHandle","secondsValue","LazyBlockController","smoothSupported","smoothPolyfilled","scrollToElement","behavior","block","inline","async","polyfill","polyfillSmooth","scrollIntoView","getScrollParent","node","overflowY","getComputedStyle","parentElement","body","LightboxImageController","_src","hasSrcValue","srcValue","_srcSet","hasSrcSetValue","srcSetValue","srcset","_sizes","hasSizesValue","sizesValue","sizes","_modalClassName","hasModalClass","modalClass","_imageClassName","hasImageClass","imageClass","open","close","_dialog","image","className","appendChild","insertAdjacentElement","dialogPolyfill","registerDialog","showModal","srcSet","LimitedSelectionCheckboxesController","handleInputs","inputTargets","tickedInputs","reduce","previousValue","hasErrorTarget","errorTarget","MediaPlayerController","mediaTarget","play","pause","restart","currentTime","seek","NavigateFormErrorsController","_errorCount","_errors","_previousIndex","index","_index","_nextIndex","Math","hasIndexValue","indexValue","_selector","_previousError","_currentError","_nextError","_toggleButtons","indexValueChanged","selectorValueChanged","hasNextTarget","nextTarget","hasPreviousTarget","previousTarget","NestedFormController","_wrapperClass","hasWrapperSelectorValue","wrapperClassValue","_insertMode","hasInsertModeValue","insertModeValue","_checkStructure","content","templateTarget","replace","_generateID","targetTarget","insertAdjacentHTML","wrapper","closest","newRecord","destroyInput","getTime","random","slice","indexOf","insertMode","wrapperClass","PasswordConfirmController","checkPasswordsMatch","passwordTargets","_allPasswordsMatch","Set","has","size","PasswordPeekController","peak","passwordTarget","hide","RemoteFormController","status","xhr","Node","new_element","parentNode","replaceChild","ResponsiveIframeWrapperController","messageReceived","hasOwnProperty","ResponsiveIframeBodyController","top","debounces","func","postUpdate","getHeight","parent","postMessage","ScrollIntoFocusController","hasBehaviorValue","behaviorValue","hasBlockValue","blockValue","hasInlineValue","inlineValue","ScrollToBottomController","scroll","hasModeValue","modeValue","mode","ScrollToController","warn","ScrollToTopController","SelfDestructController","StickyController","_mode","createMagicElement","_magicElement","intersectionRatio","hasStuckClass","stuckClass","TableSortController","_tableHead","tHead","_tableHeaders","rows","cells","_tableBody","tBodies","_tableRows","sort","cell","hasStartSortValue","_sortByColumn","startSortValue","headerCellIndex","_indexOfHeaderCell","_reverse","_lastIndex","frag","createDocumentFragment","row","otherRow","otherCells","x","y","sortVal","localeCompare","sensitivity","numeric","caseFirst","sortTop","sortBottom","startSort","TableTruncateController","_truncated","hasTruncatedValue","truncatedValue","_limit","hasLimitValue","limitValue","truncate","expand","showMoreTarget","_hideElement","_showElement","_reTruncate","limit","truncated","TeleportController","hasInsertValue","hasImmediateValue","immediateValue","execute","destination","targetValue","cloneNode","insertValue","outerHTML","insert","immediate","TimeoutController","ToggleClassController","hasClassValue","hasMouseEnterValue","hasMouseLeaveValue","useHover","hasClickAwayValue","clickAwayValue","onEvent","contains","rect","getBoundingClientRect","windowHeight","windowWidth","clientWidth","left","isElementInViewport","clickOutside","clickOutsideEvent","useClickOutside","hasInitialValue","toggleTargets","initialValue","_elementOn","_elementOff","_elementWasToggled","_elementToggleStatus","_elementToggle","mouseEnter","mouseEnterValue","on","off","mouseLeave","mouseLeaveValue","toggled","classValue","klass","isTurboFrame","class","clickAway","initial","TurboFrameRCController","frameSrc","_getFrame","_getSrc","_setSrc","setSrc","frame","hasLoadingMessageValue","loadingMessageValue","getElementById","frameIdValue","frameId","loadingMessage","TurboFrameRefreshController","_poll","hasPollValue","pollValue","refresh","intervalValue","interval","poll","WordCountController","updateWordCount","wordCount","matches","match"],"mappings":"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"}