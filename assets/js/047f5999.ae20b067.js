"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[8644],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const i={},d=s.createContext(i);function l(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(d.Provider,{value:n},e.children)}},9408:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"mixins/useEventListener","title":"useEventListener","description":"Purpose","source":"@site/docs/mixins/use_event_listener.mdx","sourceDirName":"mixins","slug":"/mixins/useEventListener","permalink":"/stimulus-library/docs/mixins/useEventListener","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"useEventListener","title":"useEventListener"},"sidebar":"DocsSidebar","previous":{"title":"useDirtyFormTracking","permalink":"/stimulus-library/docs/mixins/useDirtyFormTracking"},"next":{"title":"useFullscreen","permalink":"/stimulus-library/docs/mixins/useFullscreen"}}');var i=t(4848),d=t(8453);const l={id:"useEventListener",title:"useEventListener"},r=void 0,c={},o=[{value:"Purpose",id:"purpose",level:2},{value:"Side Effects",id:"side-effects",level:2},{value:"Usage",id:"usage",level:2},{value:"useEventListener",id:"useeventlistener",level:3},{value:"useCollectionEventListener",id:"usecollectioneventlistener",level:3},{value:"How to Use",id:"how-to-use",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsxs)(n.p,{children:["Add an event listener to a ",(0,i.jsx)(n.code,{children:"Window|Document|Element"})," that will be automatically cleaned up on controller ",(0,i.jsx)(n.code,{children:"disconnect"}),".\nAutomatically sets the correct Javascript binding so that ",(0,i.jsx)(n.code,{children:"this"})," inside the event listener corresponds to the controller instance."]}),"\n",(0,i.jsx)(n.h2,{id:"side-effects",children:"Side Effects"}),"\n",(0,i.jsx)(n.p,{children:"The controller will add an event listener on the given element, for the given event name."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["There are two functions provided as part of this Mixin.\n",(0,i.jsx)(n.code,{children:"useEventListener"})," for events on a single element, or ",(0,i.jsx)(n.code,{children:"useCollectionEventListener"})," for events bound to multiple elements."]}),"\n",(0,i.jsx)(n.h3,{id:"useeventlistener",children:"useEventListener"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameters"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"controller"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Controller"})}),(0,i.jsxs)(n.td,{children:["The instance of the controller to install the behaviour on. This allows the mixin to automatically register cleanup on the controller's ",(0,i.jsx)(n.code,{children:"disconnect"}),"."]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"this"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"element"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Window"})," or ",(0,i.jsx)(n.code,{children:"Document"})," or ",(0,i.jsx)(n.code,{children:"HTMLElement"})]}),(0,i.jsx)(n.td,{children:"The element to add the event listener on"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"eventNameOrNames"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"String"})," or ",(0,i.jsx)(n.code,{children:"Array<string>"})]}),(0,i.jsxs)(n.td,{children:["The fully qualified name(s) of the event(s) you wish to listen for i.e. ",(0,i.jsx)(n.code,{children:"'change"})," or ",(0,i.jsx)(n.code,{children:"['change', 'input', 'click']"})]}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"handlerFunction"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Function(event)"})}),(0,i.jsx)(n.td,{children:"The function that will handle the  event, receives a single parameter, which is the event that triggered the handler"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"options"})," (Optional)"]}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Object"})}),(0,i.jsx)(n.td,{children:"Options to modify how the event listener is initialized"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"debounce"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Number"})}),(0,i.jsx)(n.td,{children:"The number of milliseconds to debounce the given handler by"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"capture"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value indicating that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"once"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value indicating that the listener should be invoked at most once after being added. If true, the listener would be automatically removed when invoked."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"passive"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value that, if true, indicates that the function specified by listener will never call preventDefault(). If a passive listener does call preventDefault(), the user agent will do nothing other than generate a console warning. See Improving scrolling performance with passive listeners to learn more."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"signal"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AbortSignal"})}),(0,i.jsx)(n.td,{children:"An AbortSignal. The listener will be removed when the given AbortSignal object's abort() method is called."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"usecollectioneventlistener",children:"useCollectionEventListener"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameters"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"controller"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Controller"})}),(0,i.jsxs)(n.td,{children:["The instance of the controller to install the behaviour on. This allows the mixin to automatically register cleanup on the controller's ",(0,i.jsx)(n.code,{children:"disconnect"}),"."]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"this"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"elements"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:["An array of ",(0,i.jsx)(n.code,{children:"Window"})," or ",(0,i.jsx)(n.code,{children:"Document"})," or ",(0,i.jsx)(n.code,{children:"HTMLElement"})]}),(0,i.jsx)(n.td,{children:"The elements to add the event listener on"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"eventNameOrNames"})}),(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"String"})," or ",(0,i.jsx)(n.code,{children:"Array<string>"})]}),(0,i.jsxs)(n.td,{children:["The fully qualified name(s) of the event(s) you wish to listen for i.e. ",(0,i.jsx)(n.code,{children:"'change"})," or ",(0,i.jsx)(n.code,{children:"['change', 'input', 'click']"})]}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"handlerFunction"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Function(event)"})}),(0,i.jsx)(n.td,{children:"The function that will handle the  event, receives a single parameter, which is the event that triggered the handler"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"options"})," (Optional)"]}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Object"})}),(0,i.jsx)(n.td,{children:"Options to modify how the event listener is initialized"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"debounce"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Number"})}),(0,i.jsx)(n.td,{children:"The number of milliseconds to debounce the given handler by"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"capture"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value indicating that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"once"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value indicating that the listener should be invoked at most once after being added. If true, the listener would be automatically removed when invoked."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"passive"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Boolean"})}),(0,i.jsx)(n.td,{children:"A boolean value that, if true, indicates that the function specified by listener will never call preventDefault(). If a passive listener does call preventDefault(), the user agent will do nothing other than generate a console warning. See Improving scrolling performance with passive listeners to learn more."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"signal"})," (Optional)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AbortSignal"})}),(0,i.jsx)(n.td,{children:"An AbortSignal. The listener will be removed when the given AbortSignal object's abort() method is called."}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"-"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'\nimport {Controller} from \'@hotwired/stimulus\';\nimport {useEventListener, useCollectionEventListener} from \'stimulus-library\';\n\nexport default class extends Controller {\n\n  connect() {\n    // Add an event listener to the Window\n    useEventListener(this, window, \'hashchange\', this.handler)\n\n    // Add an event listener to the controller root element\n    useEventListener(this, this.element, "change", this.handler)\n\n    // Add an event listener to the controller root element that only fires once\n    useEventListener(this, this.element, "change", this.handler, {once: true})\n\n    // Add a [debounced](https://css-tricks.com/debouncing-throttling-explained-examples/)\n    // event listener to the controller root element\n    useEventListener(this, this.element, "input", this.handler, {debounce: 1500})\n\n    // Add multiple event listeners to the same handler\n    useEventListener(this, this.element, [\'change\', "input"], this.handler)\n\n    // Add multiple event listeners to the same handler\n    useEventListener(this, this.element, [\'change\', "input"], this.handler)\n\n    // Add multiple [debounced](https://css-tricks.com/debouncing-throttling-explained-examples/)\n    // event listeners to the same handler\n    useEventListener(this, this.element, "change", this.handler, {debounce: 1500})\n\n    // Add event listeners to an entire collection of elements\n    useCollectionEventListener(this, this.fooTargets, "change", this.handler)\n\n    // Add multiple event listeners to an entire collection of elements\n    useCollectionEventListener(this, this.fooTargets, ["change", "input"], this.handler)\n  }\n\n  handler() {\n    console.log(\'Look at me run!\')\n  }\n\n}\n\n'})})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);